{"version":3,"sources":["webpack:///app.js","webpack:///webpack/bootstrap 4d340eb5ffd971fe0b21","webpack:///./src/index.js","webpack:///./~/d3/d3.js","webpack:///./~/underscore/underscore.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","pol2cart","r","a","cx","arguments","length","undefined","cy","x","Math","cos","y","sin","cart2pol","sqrt","atan2","formatMoney","amount","format","_d32","millions","bubblesVis","_ref2","update","nodes","center","moveTowardsCenter","alpha","d","centerDamper","collide","quadtree","geom","radius","radiusScale","income","padding","nx1","nx2","ny1","ny2","visit","quad","x1","y1","x2","y2","point","l","collideDamper","force","gravity","charge","pow","friction","s","scale","linear","domain","maxAmount","range","forEach","node","random","PI","_pol2cart","_pol2cart2","_slicedToArray","nodeEls","container","selectAll","data","enter","append","attr","exit","remove","fillColor","i","inSubSectorView","strata","subSector","expend","formatCount","count","on","handlers","this","e","each","start","self","event","handler","_ref2$gravity","depth","width","height","_ref2$radius","layout","size","sum","list","iterator","_underscore2","identity","iteratee","reduce","memo","item","agrregateBy","grouped","groupBy","map","lines","name","_ref","parseFloat","parseInt","gridLabels","_ref3","visible","labelEls","text","transition","duration","loadedData","sectorStrata","rowAndCol","sIndex","subSectorIndex","col","COLS","row","floor","strataCenter","_rowAndCol","_rowAndCol2","labelsCenter","_rowAndCol3","_rowAndCol32","adjustRow","adjustCol","stratas","indexed","strataNodes","subSectorNodes","n","parents","px","mean","py","vis","labels","subSectorsButton","style","background-color","color","stratasButton","subSectors","indexBy","parent","noise","updatePopover","fields","fieldEls","popover","font-weight","select","position","display","root","mapObject","invert","uniq","pluck","fillRange","buttons","margin-right","border","font-size","font-family","padding-top","padding-bottom","padding-left","padding-right","text-transform","bubbleContainer","border-radius","line-height","max","dd","ii","_d3$mouse","mouse","_d3$mouse2","left","top","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","Symbol","next","done","push","err","Array","isArray","TypeError","_d3","_underscore","document","querySelector","csv","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","ownerDocument","documentElement","d3_window","defaultView","d3_ascending","b","NaN","d3_number","d3_numeric","isNaN","d3_bisector","compare","lo","hi","mid","right","d3_transposeLength","d3_range_integerScale","k","d3_class","ctor","properties","prototype","d3_Map","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","d3_map_size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","apply","d3_vendorSymbol","object","charAt","toUpperCase","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","z","listeners","listenerByName","listener","get","indexOf","concat","set","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","d3_selection_classedName","re","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","d3_nsXhtml","createElement","createElementNS","createNS","d3_selectionRemove","parentNode","removeChild","d3_selection_dataNode","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","i0","j0","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","changedTouches","svg","ownerSVGElement","createSVGPoint","d3_mouse_bug44083","window","scrollX","scrollY","margin","ctm","getScreenCTM","f","pageX","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","g","d3_hcl_lab","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","d3_degrees","d3_xyz_lab","d3_rgbNumber","d3_rgbString","d3_rgb_hex","toString","min","hsl","exec","toLowerCase","d3_rgb_parseNumber","d3_rgb_names","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer","delay","then","Date","now","time","timer","t","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","clearTimeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","Infinity","d3_format_precision","ceil","log","LN10","d3_formatPrefix","abs","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","reverse","join","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","dt","times","range_utc","utc","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","d2","δ2","φ2","λ2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","transform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","d3_layout_forceMouseout","d3_layout_forceAccumulate","charges","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","cancelId","cancel","tick","tweens","ease","d3_svg_axisX","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","transpose","matrix","zip","entries","arrays","merged","Error","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","property","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","classed","contains","getComputedStyle","getPropertyValue","html","innerHTML","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","datum","nextSibling","args","upgroup","mouseenter","mouseleave","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","correspondingElement","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","field","tsv","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","__WEBPACK_AMD_DEFINE_ARRAY__","createReduce","dir","currentKey","optimizeCb","isArrayLike","createPredicateIndexFinder","predicate","getLength","createIndexFinder","predicateFind","sortedIndex","idx","collectNonEnumProps","nonEnumIdx","nonEnumerableProps","constructor","proto","isFunction","ObjProto","prop","previousUnderscore","ArrayProto","FuncProto","nativeIsArray","nativeKeys","nativeBind","nativeCreate","Ctor","_wrapped","VERSION","func","argCount","collection","accumulator","isObject","matcher","createAssigner","keysFunc","undefinedOnly","baseCreate","MAX_ARRAY_INDEX","collect","results","foldl","inject","reduceRight","foldr","detect","findIndex","findKey","reject","negate","every","all","some","any","includes","include","fromIndex","guard","invoke","isFunc","where","attrs","findWhere","computed","lastComputed","rand","shuffled","sample","sortBy","criteria","countBy","toArray","pass","fail","head","take","initial","last","rest","tail","drop","compact","flatten","shallow","strict","startIndex","isArguments","len","without","difference","unique","isSorted","isBoolean","seen","union","argsLength","unzip","findLastIndex","low","high","executeBound","sourceFunc","boundFunc","callingContext","partial","boundArgs","bindAll","memoize","hasher","cache","address","wait","defer","throttle","options","timeout","later","leading","trailing","debounce","immediate","timestamp","callNow","wrapper","once","hasEnumBug","propertyIsEnumerable","allKeys","functions","extend","extendOwn","assign","pick","oiteratee","omit","defaults","props","clone","tap","interceptor","isMatch","eq","aStack","bStack","className","areArrays","aCtor","bCtor","isEqual","isEmpty","isString","isElement","Int8Array","isNumber","isNull","isUndefined","noConflict","constant","noop","propertyOf","accum","escapeMap","&","<",">","\"","'","`","unescapeMap","createEscaper","escaper","testRegexp","replaceRegexp","escape","unescape","fallback","idCounter","uniqueId","templateSettings","evaluate","noMatch","escapes","\\","\r","\n"," "," ","escapeChar","settings","oldSettings","variable","render","argument","chain","instance","_chain","mixin","toJSON"],"mappings":"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","file":"app.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\t\n\texports.pol2cart = pol2cart;\n\texports.cart2pol = cart2pol;\n\texports.sum = sum;\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tvar _d3 = __webpack_require__(1);\n\t\n\tvar _d32 = _interopRequireDefault(_d3);\n\t\n\tvar _underscore = __webpack_require__(2);\n\t\n\tvar _underscore2 = _interopRequireDefault(_underscore);\n\t\n\tvar app = document.querySelector('#app');\n\t\n\tfunction pol2cart(r, a) {\n\t  var cx = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];\n\t  var cy = arguments.length <= 3 || arguments[3] === undefined ? 0 : arguments[3];\n\t\n\t  var x = cx + r * Math.cos(a);\n\t  var y = cy + r * Math.sin(a);\n\t  return [x, y];\n\t}\n\t\n\tfunction cart2pol(x, y) {\n\t  var cx = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];\n\t  var cy = arguments.length <= 3 || arguments[3] === undefined ? 0 : arguments[3];\n\t\n\t  x = x - cx;\n\t  y = y - cy;\n\t  var r = Math.sqrt(x * x + y * y);\n\t  var a = Math.atan2(y, x);\n\t  return [r, a];\n\t}\n\t\n\tfunction formatMoney(amount) {\n\t  var format = _d32['default'].format(\",.2r\");\n\t  var millions = amount / 1000000;\n\t  return '£' + format(millions) + 'm';\n\t}\n\t\n\tvar formatCount = _d32['default'].format(\",r\");\n\t\n\tfunction bubblesVis(_ref2) {\n\t  var data = _ref2.data;\n\t  var container = _ref2.container;\n\t  var _ref2$depth = _ref2.depth;\n\t  var depth = _ref2$depth === undefined ? 0 : _ref2$depth;\n\t  var _ref2$gravity = _ref2.gravity;\n\t  var gravity = _ref2$gravity === undefined ? 0 : _ref2$gravity;\n\t  var width = _ref2.width;\n\t  var height = _ref2.height;\n\t  var _ref2$radius = _ref2.radius;\n\t  var radius = _ref2$radius === undefined ? 300 : _ref2$radius;\n\t  var maxAmount = _ref2.maxAmount;\n\t  var fillColor = _ref2.fillColor;\n\t\n\t  var nodesIndex = {};\n\t\n\t  var force = _d32['default'].layout.force().size([width, height]);\n\t\n\t  // let center = {\n\t  //   x: radius,\n\t  //   y: radius,\n\t  // };\n\t\n\t  var centerDamper = 0.5,\n\t      collideDamper = 0;\n\t\n\t  var handlers = {};\n\t\n\t  function update(nodes, center) {\n\t    var income = function income(d) {\n\t      return d.income;\n\t    };\n\t\n\t    function moveTowardsCenter(alpha) {\n\t      return function (d) {\n\t        var c = center(d);\n\t        d.x = d.x + (c.x - d.x) * centerDamper * alpha;\n\t        d.y = d.y + (c.y - d.y) * centerDamper * alpha;\n\t      };\n\t    }\n\t\n\t    force.nodes(nodes);\n\t\n\t    force.gravity(gravity).charge(function (d) {\n\t      return -Math.pow(radiusScale(d.income), 2.0);\n\t    })\n\t    // .charge(d => -radiusScale(d.income) * 15)\n\t    .friction(0.9);\n\t\n\t    var s = radius;\n\t    var radiusScale = _d32['default'].scale.linear().domain([0, maxAmount]).range([s / 50, s / 3]);\n\t\n\t    nodes.forEach(function (node) {\n\t      if (node.x == null || node.y == null) {\n\t        var r = Math.random() * (radius - radiusScale(node.income));\n\t        var a = Math.random() * Math.PI * 2;\n\t\n\t        var _pol2cart = pol2cart(r, a, radius, radius);\n\t\n\t        var _pol2cart2 = _slicedToArray(_pol2cart, 2);\n\t\n\t        node.x = _pol2cart2[0];\n\t        node.y = _pol2cart2[1];\n\t      }\n\t    });\n\t\n\t    // data.forEach(d => {\n\t    //   // let bubbleRadius= = (((d.income / avgPowAmount) * radius) /  data.length) * 2e9\n\t    //   let bubbleRadius = radiusScale(income);\n\t\n\t    //   //radiusScale(d.income);\n\t\n\t    //   if (!(d.id in nodesIndex)) {\n\t    //     let r = Math.random() * (radius - bubbleRadius);\n\t    //     let a = Math.random() * Math.PI * 2;\n\t    //     let [x,y] = pol2cart(r, a, radius, radius);\n\t    //     nodesIndex[d.id] = {id: d.id, x, y};\n\t    //     nodes.push(nodesIndex[d.id]);\n\t    //   }\n\t\n\t    //   let node = nodesIndex[d.id];\n\t\n\t    //   _.extend(\n\t    //     node,\n\t    //     {\n\t    //       radius: bubbleRadius,\n\t    //       subData: d.subData,\n\t    //       data: d,\n\t    //     });\n\t    // });\n\t\n\t    var nodeEls = container.selectAll('.node').data(nodes, function (d) {\n\t      return d.id;\n\t    });\n\t\n\t    var enter = nodeEls.enter().append('g').attr('class', 'node');\n\t    // .attr('opacity', 0);\n\t\n\t    // nodeEls.exit()\n\t    //   .transition().duration(2000).attr('transform', 'scale(0)').attr('opacity', 0).remove();\n\t\n\t    nodeEls.exit().remove();\n\t\n\t    enter.append('circle').attr('r', function (d) {\n\t      return radiusScale(d.income);\n\t    }).attr('stroke-width', 2).attr('fill', fillColor).attr('aria-label', function (d, i) {\n\t      var inSubSectorView = !!d.strata;\n\t      if (inSubSectorView) {\n\t        return 'Sub-sector ' + d.subSector + ' and income band ' + d.strata + ' with total income ' + formatMoney(d.income) + ' and total spending ' + formatMoney(d.expend) + ' (' + formatCount(d.count) + ' organisations)';\n\t      } else {\n\t        return 'Sub-sector ' + d.subSector + ' with total income ' + formatMoney(d.income) + ' and total spending ' + formatMoney(d.expend) + ' (' + formatCount(d.count) + ' organisations)';\n\t      }\n\t    }).on('click', function (d, i) {\n\t      handlers['click'] && handlers['click'].call(this, d, i);\n\t    }).on('mouseover', function (d, i) {\n\t      handlers['mouseover'] && handlers['mouseover'].call(this, d, i);\n\t    }).on('mousemove', function (d, i) {\n\t      handlers['mousemove'] && handlers['mousemove'].call(this, d, i);\n\t    }).on('mouseout', function (d, i) {\n\t      handlers['mouseout'] && handlers['mouseout'].call(this, d, i);\n\t    });\n\t    // .on('click', (d,i) => handlers.select(d.data, i, depth));\n\t\n\t    // nodeEls.transition().duration(2000).attr('opacity', 1);\n\t\n\t    // Resolves collisions between d and all other circles.\n\t    var padding = 20;\n\t    function collide(alpha) {\n\t      var quadtree = _d32['default'].geom.quadtree(nodes);\n\t      return function (d) {\n\t        var radius = radiusScale(d.income);\n\t        var r = radius + padding,\n\t            nx1 = d.x - r,\n\t            nx2 = d.x + r,\n\t            ny1 = d.y - r,\n\t            ny2 = d.y + r;\n\t        quadtree.visit(function (quad, x1, y1, x2, y2) {\n\t          if (quad.point && quad.point !== d) {\n\t            var x = d.x - quad.point.x,\n\t                y = d.y - quad.point.y,\n\t                l = Math.sqrt(x * x + y * y),\n\t                r = radius + radiusScale(quad.point.income) + padding;\n\t            if (l < r) {\n\t              l = (l - r) / l * alpha * collideDamper;\n\t              d.x -= x *= l;\n\t              d.y -= y *= l;\n\t              quad.point.x += x;\n\t              quad.point.y += y;\n\t            }\n\t          }\n\t          return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\n\t        });\n\t      };\n\t    }\n\t\n\t    force.on(\"tick\", function (e) {\n\t      nodeEls.each(collide(e.alpha)).each(moveTowardsCenter(e.alpha)).attr('transform', function (d) {\n\t        return 'translate(' + d.x + ', ' + d.y + ')';\n\t      });\n\t    });\n\t\n\t    nodeEls.attr('transform', function (d) {\n\t      return 'translate(' + d.x + ', ' + d.y + ')';\n\t    });\n\t\n\t    // // nodeEls\n\t    //   .attr('transform', d => {\n\t    //     let c = center(d);\n\t    //     return `translate(${c.x}, ${c.y})`\n\t    //   });\n\t\n\t    force.start();\n\t\n\t    return self;\n\t  };\n\t\n\t  function on(event, handler) {\n\t    handlers[event] = handler;\n\t    return self;\n\t  }\n\t\n\t  var self = { update: update, on: on };\n\t  return self;\n\t}\n\t\n\tfunction sum(list) {\n\t  var iterator = arguments.length <= 1 || arguments[1] === undefined ? _underscore2['default'].identity : arguments[1];\n\t\n\t  iterator = _underscore2['default'].iteratee(iterator);\n\t  return list.reduce(function (memo, item) {\n\t    return memo + iterator(item);\n\t  }, 0);\n\t}\n\t\n\tfunction agrregateBy(data, key) {\n\t  var grouped = _underscore2['default'].groupBy(data, key);\n\t  return _underscore2['default'].map(grouped, function (lines, name) {\n\t    var _ref;\n\t\n\t    return _ref = {\n\t      id: key + '-' + name,\n\t      name: name\n\t    }, _defineProperty(_ref, key, name), _defineProperty(_ref, 'income', sum(lines, function (d) {\n\t      return parseFloat(d.income);\n\t    })), _defineProperty(_ref, 'expend', sum(lines, function (d) {\n\t      return parseFloat(d.expend);\n\t    })), _defineProperty(_ref, 'count', sum(lines, function (d) {\n\t      return parseInt(d.count, 10);\n\t    })), _ref;\n\t  });\n\t}\n\t\n\tfunction gridLabels(_ref3) {\n\t  var data = _ref3.data;\n\t  var container = _ref3.container;\n\t  var center = _ref3.center;\n\t\n\t  function update(visible) {\n\t    var labelEls = container.selectAll('.label').data(data);\n\t    labelEls.enter().append('text').text(function (d) {\n\t      return d.subSector;\n\t    }).attr('text-anchor', 'middle').attr('class', 'label');\n\t    //.append('circle').attr('r', 3).attr('stroke', 'red').attr('class', 'label');\n\t    labelEls.exit().remove();\n\t\n\t    labelEls.transition().duration(visible ? 2000 : 0).attr('font-family', 'sans-serif').attr('fill', '#666').attr('font-size', 12).attr('font-weight', 'bold').attr('transform', function (d) {\n\t      var c = center(d);\n\t      return 'translate(' + c.x + ', ' + c.y + ')';\n\t    })\n\t    // .attr('x', d => center(d).x)\n\t    // .attr('y', d => center(d).y)\n\t    .attr('opacity', visible ? 1 : 0);\n\t\n\t    return self;\n\t  }\n\t  var self = { update: update };\n\t  return self;\n\t}\n\t\n\tfunction loadedData(sectorStrata) {\n\t\n\t  var radius = 300;\n\t  var width = 810,\n\t      height = 1200;\n\t  var root = _d32['default'].select('#app');\n\t  var center = { x: width / 2, y: 300 };\n\t\n\t  var subSectorIndex = _underscore2['default'].mapObject(_underscore2['default'].invert(_underscore2['default'].uniq(_underscore2['default'].pluck(sectorStrata, 'subSector'))), parseInt);\n\t\n\t  var subSectorNodes = agrregateBy(sectorStrata, 'subSector');\n\t  var strataNodes = sectorStrata.map(function (d) {\n\t    return {\n\t      id: d.subSector + '-' + d.strata,\n\t      name: d.strata,\n\t      subSector: d.subSector,\n\t      strata: d.strata,\n\t      income: parseFloat(d.income),\n\t      expend: parseFloat(d.expend),\n\t      count: parseInt(d.count, 10)\n\t    };\n\t  });\n\t\n\t  var fillRange = _d32['default'].scale.linear().domain([0, _underscore2['default'].size(subSectorIndex)]).range([\"#D3ECE7\", \"#8ACAC0\"]);\n\t  var fillColor = function fillColor(d) {\n\t    return fillRange(subSectorIndex[d.subSector]);\n\t  };\n\t\n\t  // let subSectorNodes = _.groupBy(sectorStrata, 'subSector').map((stratas, subSector) => {\n\t\n\t  // let\n\t\n\t  //   // let bubbleRadius= = (((d.income / avgPowAmount) * radius) /  data.length) * 2e9\n\t  //   let bubbleRadius = radiusScale(income);\n\t\n\t  //   //radiusScale(d.income);\n\t\n\t  //   if (!(d.id in nodesIndex)) {\n\t  //     let r = Math.random() * (radius - bubbleRadius);\n\t  //     let a = Math.random() * Math.PI * 2;\n\t  //     let [x,y] = pol2cart(r, a, radius, radius);\n\t  //     nodesIndex[d.id] = {id: d.id, x, y};\n\t  //     nodes.push(nodesIndex[d.id]);\n\t  //   }\n\t\n\t  //   let node = nodesIndex[d.id];\n\t\n\t  //   _.extend(\n\t  //     node,\n\t  //     {\n\t  //       radius: bubbleRadius,\n\t  //       subData: d.subData,\n\t  //       data: d,\n\t  //     });\n\t  // });\n\t\n\t  var COLS = 4;\n\t\n\t  function rowAndCol(d) {\n\t    var sIndex = subSectorIndex[d.subSector];\n\t    var col = sIndex % COLS;\n\t    var row = Math.floor(sIndex / COLS);\n\t    return [row, col];\n\t  }\n\t\n\t  function strataCenter(d) {\n\t    var _rowAndCol = rowAndCol(d);\n\t\n\t    var _rowAndCol2 = _slicedToArray(_rowAndCol, 2);\n\t\n\t    var row = _rowAndCol2[0];\n\t    var col = _rowAndCol2[1];\n\t\n\t    return { x: col * 180 + 130, y: row * 220 + 140 };\n\t  }\n\t\n\t  // Should be the same as strataCenter, hacking to work round issues\n\t  function labelsCenter(d) {\n\t    var _rowAndCol3 = rowAndCol(d);\n\t\n\t    var _rowAndCol32 = _slicedToArray(_rowAndCol3, 2);\n\t\n\t    var row = _rowAndCol32[0];\n\t    var col = _rowAndCol32[1];\n\t\n\t    // Horrible hack\n\t    var adjustRow = [-30, -10, 10, 20, 40];\n\t    var adjustCol = [-20, 2, 15, 30];\n\t\n\t    return { x: col * 180 + 130 + adjustCol[col], y: row * 220 + 140 + adjustRow[row] + 90 };\n\t  }\n\t\n\t  function stratas() {\n\t    var indexed = _underscore2['default'].groupBy(strataNodes, 'subSector');\n\t    subSectorNodes.forEach(function (n) {\n\t      var parents = indexed[n.subSector];\n\t      n.px = n.x = _d32['default'].mean(parents, function (d) {\n\t        return d.x;\n\t      });\n\t      n.py = n.y = _d32['default'].mean(parents, function (d) {\n\t        return d.y;\n\t      });\n\t    });\n\t\n\t    vis.update(subSectorNodes, function (d) {\n\t      return center;\n\t    });\n\t\n\t    labels.update(false);\n\t\n\t    subSectorsButton.style({\n\t      'background-color': 'white',\n\t      'color': '#522574'\n\t    });\n\t    stratasButton.style({\n\t      'background-color': '#522574',\n\t      'color': 'white'\n\t    });\n\t  }\n\t\n\t  function subSectors() {\n\t    var indexed = _underscore2['default'].indexBy(subSectorNodes, 'subSector');\n\t    strataNodes.forEach(function (n) {\n\t      var parent = indexed[n.subSector];\n\t      var noise = function noise() {\n\t        return Math.random() * 50 - 25;\n\t      };\n\t      n.px = n.x = parent.x + noise();\n\t      n.py = n.y = parent.y + noise();\n\t    });\n\t    vis.update(strataNodes, strataCenter);\n\t\n\t    labels.update(true);\n\t\n\t    subSectorsButton.style({\n\t      'background-color': '#522574',\n\t      'color': 'white'\n\t    });\n\t    stratasButton.style({\n\t      'background-color': 'white',\n\t      'color': '#522574'\n\t    });\n\t  }\n\t\n\t  var buttons = root.append('div');\n\t  var stratasButton = buttons.append('button').text('ALL').on('click', stratas);\n\t  var subSectorsButton = buttons.append('button').text('BY SUB-SECTOR').on('click', subSectors);\n\t\n\t  buttons.selectAll('button').style({\n\t    'margin-right': '8px',\n\t    'background-color': 'white',\n\t    'border': '1px solid #522574',\n\t    'color': '#522574',\n\t    'font-size': '14px',\n\t    'font-family': 'sans-serif',\n\t    'padding-top': '5px',\n\t    'padding-bottom': '5px',\n\t    'padding-left': '20px',\n\t    'padding-right': '20px',\n\t    'text-transform': 'uppercase'\n\t  });\n\t\n\t  var bubbleContainer = root.append('svg').attr('width', width).attr('height', height).append('g');\n\t  // .attr('transform', `translate(${width/2}, ${height/2})`);\n\t\n\t  var labels = gridLabels({ data: subSectorNodes, container: bubbleContainer, center: labelsCenter });\n\t\n\t  var popover = root.append('div').style({\n\t    'font-family': 'museo-sans, helventica, sans-serif',\n\t    'padding-left': '18px',\n\t    'padding-right': '18px',\n\t    'padding-top': '16px',\n\t    'padding-bottom': '14px',\n\t    border: '1px solid #94BFB7',\n\t    'border-radius': '2px',\n\t    'background-color': '#ffffff',\n\t    'color': '#645C5D',\n\t    'font-size': '16px',\n\t    'line-height': '23px'\n\t  });\n\t\n\t  function updatePopover(fields) {\n\t    var fieldEls = popover.selectAll('div').data(fields);\n\t    fieldEls.exit();\n\t    var enter = fieldEls.enter().append('div');\n\t    enter.append('span').attr('class', 'name').style({ color: '#706F6F' });\n\t    enter.append('span').attr('class', 'value').style({ 'font-weight': 'bold', color: '#522977' });\n\t    fieldEls.select('.name').text(function (d) {\n\t      return d.name + ': ';\n\t    });\n\t    fieldEls.select('.value').text(function (d) {\n\t      return d.value;\n\t    });\n\t\n\t    popover.style({\n\t      position: 'absolute',\n\t      display: 'block'\n\t    });\n\t  }\n\t\n\t  var vis = bubblesVis({ container: bubbleContainer, width: width, height: height, subSectorIndex: subSectorIndex, radius: radius, maxAmount: _d32['default'].max(subSectorNodes, function (d) {\n\t      return d.income;\n\t    }), fillColor: fillColor }).on('mouseover', function (d, i) {\n\t    var inSubSectorView = !!d.strata;\n\t    _d32['default'].selectAll('.node').attr(\"stroke\", function (dd, ii) {\n\t      if (inSubSectorView) {\n\t        return dd.strata === d.strata ? \"#94BFB7\" : 'none';\n\t      } else {\n\t        return d === dd ? \"#94BFB7\" : 'none';\n\t      }\n\t    });\n\t\n\t    updatePopover([inSubSectorView ? { name: 'Income band', value: d.strata } : { name: 'Sub-Sector', value: d.subSector }, { name: 'Total income', value: formatMoney(d.income) }, { name: 'Total spending', value: formatMoney(d.expend) }, { name: 'Number of organisations', value: formatCount(d.count) }]);\n\t  }).on('mousemove', function () {\n\t    var _d3$mouse = _d32['default'].mouse(root[0][0]);\n\t\n\t    var _d3$mouse2 = _slicedToArray(_d3$mouse, 2);\n\t\n\t    var x = _d3$mouse2[0];\n\t    var y = _d3$mouse2[1];\n\t\n\t    popover.style({\n\t      left: x + 20 + 'px',\n\t      top: y + 20 + 'px'\n\t    });\n\t  }).on('mouseout', function (d, i) {\n\t    _d32['default'].selectAll('.node').attr(\"stroke\", 'none');\n\t    popover.style({\n\t      display: 'none'\n\t    });\n\t  });\n\t\n\t  stratas();\n\t}\n\t\n\t_d32['default'].csv('data/sub-sector-strata.csv', loadedData);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.17\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.transpose = function(matrix) {\n\t    if (!(n = matrix.length)) return [];\n\t    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n\t        row[j] = matrix[j][i];\n\t      }\n\t    }\n\t    return transpose;\n\t  };\n\t  function d3_transposeLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.zip = function() {\n\t    return d3.transpose(arguments);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: d3_nsXhtml,\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (node = group[i]) {\n\t            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n\t              exitNodes[i] = node;\n\t            } else {\n\t              nodeByKeyValue.set(keyValue, node);\n\t            }\n\t            keyValues[i] = keyValue;\n\t          }\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = d3_array(nodes);\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n\t    if (d2 < ε2) {\n\t      S = Math.log(w1 / w0) / ρ;\n\t      i = function(t) {\n\t        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n\t      };\n\t    } else {\n\t      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t      S = (r1 - r0) / ρ;\n\t      i = function(t) {\n\t        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      };\n\t    }\n\t    i.duration = S * 1e3;\n\t    return i;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: null\n\t      };\n\t      scaleTo(+_);\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      }), center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function() {\n\t    d3_timer.apply(this, arguments);\n\t  };\n\t  function d3_timer(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t    return timer;\n\t  }\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now(), timer = d3_timer_queueHead;\n\t    while (timer) {\n\t      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n\t      timer = timer.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.c) {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      } else {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value = +value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n\t          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransformPop(s) {\n\t    return s.length ? s.pop() + \",\" : \"\";\n\t  }\n\t  function d3_interpolateTranslate(ta, tb, s, q) {\n\t    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n\t      var i = s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateRotate(ra, rb, s, q) {\n\t    if (ra !== rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateSkew(wa, wb, s, q) {\n\t    if (wa !== wb) {\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateScale(ka, kb, s, q) {\n\t    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n\t      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] !== 1 || kb[1] !== 1) {\n\t      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [];\n\t    a = d3.transform(a), b = d3.transform(b);\n\t    d3_interpolateTranslate(a.translate, b.translate, s, q);\n\t    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n\t    d3_interpolateSkew(a.skew, b.skew, s, q);\n\t    d3_interpolateScale(a.scale, b.scale, s, q);\n\t    a = b = null;\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: groupSums[di]\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        timer = null;\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) {\n\t          alpha = x;\n\t        } else {\n\t          timer.c = null, timer.t = NaN, timer = null;\n\t          event.end({\n\t            type: \"end\",\n\t            alpha: alpha = 0\n\t          });\n\t        }\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        timer = d3_timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = root.y = 0;\n\t      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    return domain;\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(1, base * n / scale.ticks().length);\n\t      return function(d) {\n\t        var i = d / pow(Math.round(log(d)));\n\t        if (i * base < base - .5) i *= base;\n\t        return i <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var rc1 = rc, rc0 = rc;\n\t        if (da < π) {\n\t          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t        if (x1 != null) {\n\t          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return points.join(\"L\") + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, activeId, active;\n\t      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        if (--lock.count) delete lock[activeId]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id], time, timer, duration, ease, tweens;\n\t    function schedule(elapsed) {\n\t      var delay = transition.delay;\n\t      timer.t = delay + time;\n\t      if (delay <= elapsed) return start(elapsed - delay);\n\t      timer.c = start;\n\t    }\n\t    function start(elapsed) {\n\t      var activeId = lock.active, active = lock[activeId];\n\t      if (active) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        --lock.count;\n\t        delete lock[activeId];\n\t        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t      }\n\t      for (var cancelId in lock) {\n\t        if (+cancelId < id) {\n\t          var cancel = lock[cancelId];\n\t          cancel.timer.c = null;\n\t          cancel.timer.t = NaN;\n\t          --lock.count;\n\t          delete lock[cancelId];\n\t        }\n\t      }\n\t      timer.c = tick;\n\t      d3_timer(function() {\n\t        if (timer.c && tick(elapsed || 1)) {\n\t          timer.c = null;\n\t          timer.t = NaN;\n\t        }\n\t        return 1;\n\t      }, 0, time);\n\t      lock.active = id;\n\t      transition.event && transition.event.start.call(node, node.__data__, i);\n\t      tweens = [];\n\t      transition.tween.forEach(function(key, value) {\n\t        if (value = value.call(node, node.__data__, i)) {\n\t          tweens.push(value);\n\t        }\n\t      });\n\t      ease = transition.ease;\n\t      duration = transition.duration;\n\t    }\n\t    function tick(elapsed) {\n\t      var t = elapsed / duration, e = ease(t), n = tweens.length;\n\t      while (n > 0) {\n\t        tweens[--n].call(node, e);\n\t      }\n\t      if (t >= 1) {\n\t        transition.event && transition.event.end.call(node, node.__data__, i);\n\t        if (--lock.count) delete lock[id]; else delete node[ns];\n\t        return 1;\n\t      }\n\t    }\n\t    if (!transition) {\n\t      time = inherit.time;\n\t      timer = d3_timer(schedule, 0, time);\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        timer: timer,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = d3_array(arguments);\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n\t}();\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//     Underscore.js 1.8.3\n\t//     http://underscorejs.org\n\t//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t//     Underscore may be freely distributed under the MIT license.\n\t\n\t(function() {\n\t\n\t  // Baseline setup\n\t  // --------------\n\t\n\t  // Establish the root object, `window` in the browser, or `exports` on the server.\n\t  var root = this;\n\t\n\t  // Save the previous value of the `_` variable.\n\t  var previousUnderscore = root._;\n\t\n\t  // Save bytes in the minified (but not gzipped) version:\n\t  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\t\n\t  // Create quick reference variables for speed access to core prototypes.\n\t  var\n\t    push             = ArrayProto.push,\n\t    slice            = ArrayProto.slice,\n\t    toString         = ObjProto.toString,\n\t    hasOwnProperty   = ObjProto.hasOwnProperty;\n\t\n\t  // All **ECMAScript 5** native function implementations that we hope to use\n\t  // are declared here.\n\t  var\n\t    nativeIsArray      = Array.isArray,\n\t    nativeKeys         = Object.keys,\n\t    nativeBind         = FuncProto.bind,\n\t    nativeCreate       = Object.create;\n\t\n\t  // Naked function reference for surrogate-prototype-swapping.\n\t  var Ctor = function(){};\n\t\n\t  // Create a safe reference to the Underscore object for use below.\n\t  var _ = function(obj) {\n\t    if (obj instanceof _) return obj;\n\t    if (!(this instanceof _)) return new _(obj);\n\t    this._wrapped = obj;\n\t  };\n\t\n\t  // Export the Underscore object for **Node.js**, with\n\t  // backwards-compatibility for the old `require()` API. If we're in\n\t  // the browser, add `_` as a global object.\n\t  if (true) {\n\t    if (typeof module !== 'undefined' && module.exports) {\n\t      exports = module.exports = _;\n\t    }\n\t    exports._ = _;\n\t  } else {\n\t    root._ = _;\n\t  }\n\t\n\t  // Current version.\n\t  _.VERSION = '1.8.3';\n\t\n\t  // Internal function that returns an efficient (for current engines) version\n\t  // of the passed-in callback, to be repeatedly applied in other Underscore\n\t  // functions.\n\t  var optimizeCb = function(func, context, argCount) {\n\t    if (context === void 0) return func;\n\t    switch (argCount == null ? 3 : argCount) {\n\t      case 1: return function(value) {\n\t        return func.call(context, value);\n\t      };\n\t      case 2: return function(value, other) {\n\t        return func.call(context, value, other);\n\t      };\n\t      case 3: return function(value, index, collection) {\n\t        return func.call(context, value, index, collection);\n\t      };\n\t      case 4: return function(accumulator, value, index, collection) {\n\t        return func.call(context, accumulator, value, index, collection);\n\t      };\n\t    }\n\t    return function() {\n\t      return func.apply(context, arguments);\n\t    };\n\t  };\n\t\n\t  // A mostly-internal function to generate callbacks that can be applied\n\t  // to each element in a collection, returning the desired result — either\n\t  // identity, an arbitrary callback, a property matcher, or a property accessor.\n\t  var cb = function(value, context, argCount) {\n\t    if (value == null) return _.identity;\n\t    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n\t    if (_.isObject(value)) return _.matcher(value);\n\t    return _.property(value);\n\t  };\n\t  _.iteratee = function(value, context) {\n\t    return cb(value, context, Infinity);\n\t  };\n\t\n\t  // An internal function for creating assigner functions.\n\t  var createAssigner = function(keysFunc, undefinedOnly) {\n\t    return function(obj) {\n\t      var length = arguments.length;\n\t      if (length < 2 || obj == null) return obj;\n\t      for (var index = 1; index < length; index++) {\n\t        var source = arguments[index],\n\t            keys = keysFunc(source),\n\t            l = keys.length;\n\t        for (var i = 0; i < l; i++) {\n\t          var key = keys[i];\n\t          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n\t        }\n\t      }\n\t      return obj;\n\t    };\n\t  };\n\t\n\t  // An internal function for creating a new object that inherits from another.\n\t  var baseCreate = function(prototype) {\n\t    if (!_.isObject(prototype)) return {};\n\t    if (nativeCreate) return nativeCreate(prototype);\n\t    Ctor.prototype = prototype;\n\t    var result = new Ctor;\n\t    Ctor.prototype = null;\n\t    return result;\n\t  };\n\t\n\t  var property = function(key) {\n\t    return function(obj) {\n\t      return obj == null ? void 0 : obj[key];\n\t    };\n\t  };\n\t\n\t  // Helper for collection methods to determine whether a collection\n\t  // should be iterated as an array or as an object\n\t  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n\t  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n\t  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n\t  var getLength = property('length');\n\t  var isArrayLike = function(collection) {\n\t    var length = getLength(collection);\n\t    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n\t  };\n\t\n\t  // Collection Functions\n\t  // --------------------\n\t\n\t  // The cornerstone, an `each` implementation, aka `forEach`.\n\t  // Handles raw objects in addition to array-likes. Treats all\n\t  // sparse array-likes as if they were dense.\n\t  _.each = _.forEach = function(obj, iteratee, context) {\n\t    iteratee = optimizeCb(iteratee, context);\n\t    var i, length;\n\t    if (isArrayLike(obj)) {\n\t      for (i = 0, length = obj.length; i < length; i++) {\n\t        iteratee(obj[i], i, obj);\n\t      }\n\t    } else {\n\t      var keys = _.keys(obj);\n\t      for (i = 0, length = keys.length; i < length; i++) {\n\t        iteratee(obj[keys[i]], keys[i], obj);\n\t      }\n\t    }\n\t    return obj;\n\t  };\n\t\n\t  // Return the results of applying the iteratee to each element.\n\t  _.map = _.collect = function(obj, iteratee, context) {\n\t    iteratee = cb(iteratee, context);\n\t    var keys = !isArrayLike(obj) && _.keys(obj),\n\t        length = (keys || obj).length,\n\t        results = Array(length);\n\t    for (var index = 0; index < length; index++) {\n\t      var currentKey = keys ? keys[index] : index;\n\t      results[index] = iteratee(obj[currentKey], currentKey, obj);\n\t    }\n\t    return results;\n\t  };\n\t\n\t  // Create a reducing function iterating left or right.\n\t  function createReduce(dir) {\n\t    // Optimized iterator function as using arguments.length\n\t    // in the main function will deoptimize the, see #1991.\n\t    function iterator(obj, iteratee, memo, keys, index, length) {\n\t      for (; index >= 0 && index < length; index += dir) {\n\t        var currentKey = keys ? keys[index] : index;\n\t        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n\t      }\n\t      return memo;\n\t    }\n\t\n\t    return function(obj, iteratee, memo, context) {\n\t      iteratee = optimizeCb(iteratee, context, 4);\n\t      var keys = !isArrayLike(obj) && _.keys(obj),\n\t          length = (keys || obj).length,\n\t          index = dir > 0 ? 0 : length - 1;\n\t      // Determine the initial value if none is provided.\n\t      if (arguments.length < 3) {\n\t        memo = obj[keys ? keys[index] : index];\n\t        index += dir;\n\t      }\n\t      return iterator(obj, iteratee, memo, keys, index, length);\n\t    };\n\t  }\n\t\n\t  // **Reduce** builds up a single result from a list of values, aka `inject`,\n\t  // or `foldl`.\n\t  _.reduce = _.foldl = _.inject = createReduce(1);\n\t\n\t  // The right-associative version of reduce, also known as `foldr`.\n\t  _.reduceRight = _.foldr = createReduce(-1);\n\t\n\t  // Return the first value which passes a truth test. Aliased as `detect`.\n\t  _.find = _.detect = function(obj, predicate, context) {\n\t    var key;\n\t    if (isArrayLike(obj)) {\n\t      key = _.findIndex(obj, predicate, context);\n\t    } else {\n\t      key = _.findKey(obj, predicate, context);\n\t    }\n\t    if (key !== void 0 && key !== -1) return obj[key];\n\t  };\n\t\n\t  // Return all the elements that pass a truth test.\n\t  // Aliased as `select`.\n\t  _.filter = _.select = function(obj, predicate, context) {\n\t    var results = [];\n\t    predicate = cb(predicate, context);\n\t    _.each(obj, function(value, index, list) {\n\t      if (predicate(value, index, list)) results.push(value);\n\t    });\n\t    return results;\n\t  };\n\t\n\t  // Return all the elements for which a truth test fails.\n\t  _.reject = function(obj, predicate, context) {\n\t    return _.filter(obj, _.negate(cb(predicate)), context);\n\t  };\n\t\n\t  // Determine whether all of the elements match a truth test.\n\t  // Aliased as `all`.\n\t  _.every = _.all = function(obj, predicate, context) {\n\t    predicate = cb(predicate, context);\n\t    var keys = !isArrayLike(obj) && _.keys(obj),\n\t        length = (keys || obj).length;\n\t    for (var index = 0; index < length; index++) {\n\t      var currentKey = keys ? keys[index] : index;\n\t      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n\t    }\n\t    return true;\n\t  };\n\t\n\t  // Determine if at least one element in the object matches a truth test.\n\t  // Aliased as `any`.\n\t  _.some = _.any = function(obj, predicate, context) {\n\t    predicate = cb(predicate, context);\n\t    var keys = !isArrayLike(obj) && _.keys(obj),\n\t        length = (keys || obj).length;\n\t    for (var index = 0; index < length; index++) {\n\t      var currentKey = keys ? keys[index] : index;\n\t      if (predicate(obj[currentKey], currentKey, obj)) return true;\n\t    }\n\t    return false;\n\t  };\n\t\n\t  // Determine if the array or object contains a given item (using `===`).\n\t  // Aliased as `includes` and `include`.\n\t  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n\t    if (!isArrayLike(obj)) obj = _.values(obj);\n\t    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n\t    return _.indexOf(obj, item, fromIndex) >= 0;\n\t  };\n\t\n\t  // Invoke a method (with arguments) on every item in a collection.\n\t  _.invoke = function(obj, method) {\n\t    var args = slice.call(arguments, 2);\n\t    var isFunc = _.isFunction(method);\n\t    return _.map(obj, function(value) {\n\t      var func = isFunc ? method : value[method];\n\t      return func == null ? func : func.apply(value, args);\n\t    });\n\t  };\n\t\n\t  // Convenience version of a common use case of `map`: fetching a property.\n\t  _.pluck = function(obj, key) {\n\t    return _.map(obj, _.property(key));\n\t  };\n\t\n\t  // Convenience version of a common use case of `filter`: selecting only objects\n\t  // containing specific `key:value` pairs.\n\t  _.where = function(obj, attrs) {\n\t    return _.filter(obj, _.matcher(attrs));\n\t  };\n\t\n\t  // Convenience version of a common use case of `find`: getting the first object\n\t  // containing specific `key:value` pairs.\n\t  _.findWhere = function(obj, attrs) {\n\t    return _.find(obj, _.matcher(attrs));\n\t  };\n\t\n\t  // Return the maximum element (or element-based computation).\n\t  _.max = function(obj, iteratee, context) {\n\t    var result = -Infinity, lastComputed = -Infinity,\n\t        value, computed;\n\t    if (iteratee == null && obj != null) {\n\t      obj = isArrayLike(obj) ? obj : _.values(obj);\n\t      for (var i = 0, length = obj.length; i < length; i++) {\n\t        value = obj[i];\n\t        if (value > result) {\n\t          result = value;\n\t        }\n\t      }\n\t    } else {\n\t      iteratee = cb(iteratee, context);\n\t      _.each(obj, function(value, index, list) {\n\t        computed = iteratee(value, index, list);\n\t        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n\t          result = value;\n\t          lastComputed = computed;\n\t        }\n\t      });\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Return the minimum element (or element-based computation).\n\t  _.min = function(obj, iteratee, context) {\n\t    var result = Infinity, lastComputed = Infinity,\n\t        value, computed;\n\t    if (iteratee == null && obj != null) {\n\t      obj = isArrayLike(obj) ? obj : _.values(obj);\n\t      for (var i = 0, length = obj.length; i < length; i++) {\n\t        value = obj[i];\n\t        if (value < result) {\n\t          result = value;\n\t        }\n\t      }\n\t    } else {\n\t      iteratee = cb(iteratee, context);\n\t      _.each(obj, function(value, index, list) {\n\t        computed = iteratee(value, index, list);\n\t        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n\t          result = value;\n\t          lastComputed = computed;\n\t        }\n\t      });\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Shuffle a collection, using the modern version of the\n\t  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n\t  _.shuffle = function(obj) {\n\t    var set = isArrayLike(obj) ? obj : _.values(obj);\n\t    var length = set.length;\n\t    var shuffled = Array(length);\n\t    for (var index = 0, rand; index < length; index++) {\n\t      rand = _.random(0, index);\n\t      if (rand !== index) shuffled[index] = shuffled[rand];\n\t      shuffled[rand] = set[index];\n\t    }\n\t    return shuffled;\n\t  };\n\t\n\t  // Sample **n** random values from a collection.\n\t  // If **n** is not specified, returns a single random element.\n\t  // The internal `guard` argument allows it to work with `map`.\n\t  _.sample = function(obj, n, guard) {\n\t    if (n == null || guard) {\n\t      if (!isArrayLike(obj)) obj = _.values(obj);\n\t      return obj[_.random(obj.length - 1)];\n\t    }\n\t    return _.shuffle(obj).slice(0, Math.max(0, n));\n\t  };\n\t\n\t  // Sort the object's values by a criterion produced by an iteratee.\n\t  _.sortBy = function(obj, iteratee, context) {\n\t    iteratee = cb(iteratee, context);\n\t    return _.pluck(_.map(obj, function(value, index, list) {\n\t      return {\n\t        value: value,\n\t        index: index,\n\t        criteria: iteratee(value, index, list)\n\t      };\n\t    }).sort(function(left, right) {\n\t      var a = left.criteria;\n\t      var b = right.criteria;\n\t      if (a !== b) {\n\t        if (a > b || a === void 0) return 1;\n\t        if (a < b || b === void 0) return -1;\n\t      }\n\t      return left.index - right.index;\n\t    }), 'value');\n\t  };\n\t\n\t  // An internal function used for aggregate \"group by\" operations.\n\t  var group = function(behavior) {\n\t    return function(obj, iteratee, context) {\n\t      var result = {};\n\t      iteratee = cb(iteratee, context);\n\t      _.each(obj, function(value, index) {\n\t        var key = iteratee(value, index, obj);\n\t        behavior(result, value, key);\n\t      });\n\t      return result;\n\t    };\n\t  };\n\t\n\t  // Groups the object's values by a criterion. Pass either a string attribute\n\t  // to group by, or a function that returns the criterion.\n\t  _.groupBy = group(function(result, value, key) {\n\t    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n\t  });\n\t\n\t  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n\t  // when you know that your index values will be unique.\n\t  _.indexBy = group(function(result, value, key) {\n\t    result[key] = value;\n\t  });\n\t\n\t  // Counts instances of an object that group by a certain criterion. Pass\n\t  // either a string attribute to count by, or a function that returns the\n\t  // criterion.\n\t  _.countBy = group(function(result, value, key) {\n\t    if (_.has(result, key)) result[key]++; else result[key] = 1;\n\t  });\n\t\n\t  // Safely create a real, live array from anything iterable.\n\t  _.toArray = function(obj) {\n\t    if (!obj) return [];\n\t    if (_.isArray(obj)) return slice.call(obj);\n\t    if (isArrayLike(obj)) return _.map(obj, _.identity);\n\t    return _.values(obj);\n\t  };\n\t\n\t  // Return the number of elements in an object.\n\t  _.size = function(obj) {\n\t    if (obj == null) return 0;\n\t    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n\t  };\n\t\n\t  // Split a collection into two arrays: one whose elements all satisfy the given\n\t  // predicate, and one whose elements all do not satisfy the predicate.\n\t  _.partition = function(obj, predicate, context) {\n\t    predicate = cb(predicate, context);\n\t    var pass = [], fail = [];\n\t    _.each(obj, function(value, key, obj) {\n\t      (predicate(value, key, obj) ? pass : fail).push(value);\n\t    });\n\t    return [pass, fail];\n\t  };\n\t\n\t  // Array Functions\n\t  // ---------------\n\t\n\t  // Get the first element of an array. Passing **n** will return the first N\n\t  // values in the array. Aliased as `head` and `take`. The **guard** check\n\t  // allows it to work with `_.map`.\n\t  _.first = _.head = _.take = function(array, n, guard) {\n\t    if (array == null) return void 0;\n\t    if (n == null || guard) return array[0];\n\t    return _.initial(array, array.length - n);\n\t  };\n\t\n\t  // Returns everything but the last entry of the array. Especially useful on\n\t  // the arguments object. Passing **n** will return all the values in\n\t  // the array, excluding the last N.\n\t  _.initial = function(array, n, guard) {\n\t    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n\t  };\n\t\n\t  // Get the last element of an array. Passing **n** will return the last N\n\t  // values in the array.\n\t  _.last = function(array, n, guard) {\n\t    if (array == null) return void 0;\n\t    if (n == null || guard) return array[array.length - 1];\n\t    return _.rest(array, Math.max(0, array.length - n));\n\t  };\n\t\n\t  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n\t  // Especially useful on the arguments object. Passing an **n** will return\n\t  // the rest N values in the array.\n\t  _.rest = _.tail = _.drop = function(array, n, guard) {\n\t    return slice.call(array, n == null || guard ? 1 : n);\n\t  };\n\t\n\t  // Trim out all falsy values from an array.\n\t  _.compact = function(array) {\n\t    return _.filter(array, _.identity);\n\t  };\n\t\n\t  // Internal implementation of a recursive `flatten` function.\n\t  var flatten = function(input, shallow, strict, startIndex) {\n\t    var output = [], idx = 0;\n\t    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n\t      var value = input[i];\n\t      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n\t        //flatten current level of array or arguments object\n\t        if (!shallow) value = flatten(value, shallow, strict);\n\t        var j = 0, len = value.length;\n\t        output.length += len;\n\t        while (j < len) {\n\t          output[idx++] = value[j++];\n\t        }\n\t      } else if (!strict) {\n\t        output[idx++] = value;\n\t      }\n\t    }\n\t    return output;\n\t  };\n\t\n\t  // Flatten out an array, either recursively (by default), or just one level.\n\t  _.flatten = function(array, shallow) {\n\t    return flatten(array, shallow, false);\n\t  };\n\t\n\t  // Return a version of the array that does not contain the specified value(s).\n\t  _.without = function(array) {\n\t    return _.difference(array, slice.call(arguments, 1));\n\t  };\n\t\n\t  // Produce a duplicate-free version of the array. If the array has already\n\t  // been sorted, you have the option of using a faster algorithm.\n\t  // Aliased as `unique`.\n\t  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n\t    if (!_.isBoolean(isSorted)) {\n\t      context = iteratee;\n\t      iteratee = isSorted;\n\t      isSorted = false;\n\t    }\n\t    if (iteratee != null) iteratee = cb(iteratee, context);\n\t    var result = [];\n\t    var seen = [];\n\t    for (var i = 0, length = getLength(array); i < length; i++) {\n\t      var value = array[i],\n\t          computed = iteratee ? iteratee(value, i, array) : value;\n\t      if (isSorted) {\n\t        if (!i || seen !== computed) result.push(value);\n\t        seen = computed;\n\t      } else if (iteratee) {\n\t        if (!_.contains(seen, computed)) {\n\t          seen.push(computed);\n\t          result.push(value);\n\t        }\n\t      } else if (!_.contains(result, value)) {\n\t        result.push(value);\n\t      }\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Produce an array that contains the union: each distinct element from all of\n\t  // the passed-in arrays.\n\t  _.union = function() {\n\t    return _.uniq(flatten(arguments, true, true));\n\t  };\n\t\n\t  // Produce an array that contains every item shared between all the\n\t  // passed-in arrays.\n\t  _.intersection = function(array) {\n\t    var result = [];\n\t    var argsLength = arguments.length;\n\t    for (var i = 0, length = getLength(array); i < length; i++) {\n\t      var item = array[i];\n\t      if (_.contains(result, item)) continue;\n\t      for (var j = 1; j < argsLength; j++) {\n\t        if (!_.contains(arguments[j], item)) break;\n\t      }\n\t      if (j === argsLength) result.push(item);\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Take the difference between one array and a number of other arrays.\n\t  // Only the elements present in just the first array will remain.\n\t  _.difference = function(array) {\n\t    var rest = flatten(arguments, true, true, 1);\n\t    return _.filter(array, function(value){\n\t      return !_.contains(rest, value);\n\t    });\n\t  };\n\t\n\t  // Zip together multiple lists into a single array -- elements that share\n\t  // an index go together.\n\t  _.zip = function() {\n\t    return _.unzip(arguments);\n\t  };\n\t\n\t  // Complement of _.zip. Unzip accepts an array of arrays and groups\n\t  // each array's elements on shared indices\n\t  _.unzip = function(array) {\n\t    var length = array && _.max(array, getLength).length || 0;\n\t    var result = Array(length);\n\t\n\t    for (var index = 0; index < length; index++) {\n\t      result[index] = _.pluck(array, index);\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Converts lists into objects. Pass either a single array of `[key, value]`\n\t  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n\t  // the corresponding values.\n\t  _.object = function(list, values) {\n\t    var result = {};\n\t    for (var i = 0, length = getLength(list); i < length; i++) {\n\t      if (values) {\n\t        result[list[i]] = values[i];\n\t      } else {\n\t        result[list[i][0]] = list[i][1];\n\t      }\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Generator function to create the findIndex and findLastIndex functions\n\t  function createPredicateIndexFinder(dir) {\n\t    return function(array, predicate, context) {\n\t      predicate = cb(predicate, context);\n\t      var length = getLength(array);\n\t      var index = dir > 0 ? 0 : length - 1;\n\t      for (; index >= 0 && index < length; index += dir) {\n\t        if (predicate(array[index], index, array)) return index;\n\t      }\n\t      return -1;\n\t    };\n\t  }\n\t\n\t  // Returns the first index on an array-like that passes a predicate test\n\t  _.findIndex = createPredicateIndexFinder(1);\n\t  _.findLastIndex = createPredicateIndexFinder(-1);\n\t\n\t  // Use a comparator function to figure out the smallest index at which\n\t  // an object should be inserted so as to maintain order. Uses binary search.\n\t  _.sortedIndex = function(array, obj, iteratee, context) {\n\t    iteratee = cb(iteratee, context, 1);\n\t    var value = iteratee(obj);\n\t    var low = 0, high = getLength(array);\n\t    while (low < high) {\n\t      var mid = Math.floor((low + high) / 2);\n\t      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n\t    }\n\t    return low;\n\t  };\n\t\n\t  // Generator function to create the indexOf and lastIndexOf functions\n\t  function createIndexFinder(dir, predicateFind, sortedIndex) {\n\t    return function(array, item, idx) {\n\t      var i = 0, length = getLength(array);\n\t      if (typeof idx == 'number') {\n\t        if (dir > 0) {\n\t            i = idx >= 0 ? idx : Math.max(idx + length, i);\n\t        } else {\n\t            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n\t        }\n\t      } else if (sortedIndex && idx && length) {\n\t        idx = sortedIndex(array, item);\n\t        return array[idx] === item ? idx : -1;\n\t      }\n\t      if (item !== item) {\n\t        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n\t        return idx >= 0 ? idx + i : -1;\n\t      }\n\t      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n\t        if (array[idx] === item) return idx;\n\t      }\n\t      return -1;\n\t    };\n\t  }\n\t\n\t  // Return the position of the first occurrence of an item in an array,\n\t  // or -1 if the item is not included in the array.\n\t  // If the array is large and already in sort order, pass `true`\n\t  // for **isSorted** to use binary search.\n\t  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n\t  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\t\n\t  // Generate an integer Array containing an arithmetic progression. A port of\n\t  // the native Python `range()` function. See\n\t  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n\t  _.range = function(start, stop, step) {\n\t    if (stop == null) {\n\t      stop = start || 0;\n\t      start = 0;\n\t    }\n\t    step = step || 1;\n\t\n\t    var length = Math.max(Math.ceil((stop - start) / step), 0);\n\t    var range = Array(length);\n\t\n\t    for (var idx = 0; idx < length; idx++, start += step) {\n\t      range[idx] = start;\n\t    }\n\t\n\t    return range;\n\t  };\n\t\n\t  // Function (ahem) Functions\n\t  // ------------------\n\t\n\t  // Determines whether to execute a function as a constructor\n\t  // or a normal function with the provided arguments\n\t  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n\t    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n\t    var self = baseCreate(sourceFunc.prototype);\n\t    var result = sourceFunc.apply(self, args);\n\t    if (_.isObject(result)) return result;\n\t    return self;\n\t  };\n\t\n\t  // Create a function bound to a given object (assigning `this`, and arguments,\n\t  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n\t  // available.\n\t  _.bind = function(func, context) {\n\t    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n\t    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n\t    var args = slice.call(arguments, 2);\n\t    var bound = function() {\n\t      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n\t    };\n\t    return bound;\n\t  };\n\t\n\t  // Partially apply a function by creating a version that has had some of its\n\t  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n\t  // as a placeholder, allowing any combination of arguments to be pre-filled.\n\t  _.partial = function(func) {\n\t    var boundArgs = slice.call(arguments, 1);\n\t    var bound = function() {\n\t      var position = 0, length = boundArgs.length;\n\t      var args = Array(length);\n\t      for (var i = 0; i < length; i++) {\n\t        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n\t      }\n\t      while (position < arguments.length) args.push(arguments[position++]);\n\t      return executeBound(func, bound, this, this, args);\n\t    };\n\t    return bound;\n\t  };\n\t\n\t  // Bind a number of an object's methods to that object. Remaining arguments\n\t  // are the method names to be bound. Useful for ensuring that all callbacks\n\t  // defined on an object belong to it.\n\t  _.bindAll = function(obj) {\n\t    var i, length = arguments.length, key;\n\t    if (length <= 1) throw new Error('bindAll must be passed function names');\n\t    for (i = 1; i < length; i++) {\n\t      key = arguments[i];\n\t      obj[key] = _.bind(obj[key], obj);\n\t    }\n\t    return obj;\n\t  };\n\t\n\t  // Memoize an expensive function by storing its results.\n\t  _.memoize = function(func, hasher) {\n\t    var memoize = function(key) {\n\t      var cache = memoize.cache;\n\t      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n\t      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n\t      return cache[address];\n\t    };\n\t    memoize.cache = {};\n\t    return memoize;\n\t  };\n\t\n\t  // Delays a function for the given number of milliseconds, and then calls\n\t  // it with the arguments supplied.\n\t  _.delay = function(func, wait) {\n\t    var args = slice.call(arguments, 2);\n\t    return setTimeout(function(){\n\t      return func.apply(null, args);\n\t    }, wait);\n\t  };\n\t\n\t  // Defers a function, scheduling it to run after the current call stack has\n\t  // cleared.\n\t  _.defer = _.partial(_.delay, _, 1);\n\t\n\t  // Returns a function, that, when invoked, will only be triggered at most once\n\t  // during a given window of time. Normally, the throttled function will run\n\t  // as much as it can, without ever going more than once per `wait` duration;\n\t  // but if you'd like to disable the execution on the leading edge, pass\n\t  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n\t  _.throttle = function(func, wait, options) {\n\t    var context, args, result;\n\t    var timeout = null;\n\t    var previous = 0;\n\t    if (!options) options = {};\n\t    var later = function() {\n\t      previous = options.leading === false ? 0 : _.now();\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    };\n\t    return function() {\n\t      var now = _.now();\n\t      if (!previous && options.leading === false) previous = now;\n\t      var remaining = wait - (now - previous);\n\t      context = this;\n\t      args = arguments;\n\t      if (remaining <= 0 || remaining > wait) {\n\t        if (timeout) {\n\t          clearTimeout(timeout);\n\t          timeout = null;\n\t        }\n\t        previous = now;\n\t        result = func.apply(context, args);\n\t        if (!timeout) context = args = null;\n\t      } else if (!timeout && options.trailing !== false) {\n\t        timeout = setTimeout(later, remaining);\n\t      }\n\t      return result;\n\t    };\n\t  };\n\t\n\t  // Returns a function, that, as long as it continues to be invoked, will not\n\t  // be triggered. The function will be called after it stops being called for\n\t  // N milliseconds. If `immediate` is passed, trigger the function on the\n\t  // leading edge, instead of the trailing.\n\t  _.debounce = function(func, wait, immediate) {\n\t    var timeout, args, context, timestamp, result;\n\t\n\t    var later = function() {\n\t      var last = _.now() - timestamp;\n\t\n\t      if (last < wait && last >= 0) {\n\t        timeout = setTimeout(later, wait - last);\n\t      } else {\n\t        timeout = null;\n\t        if (!immediate) {\n\t          result = func.apply(context, args);\n\t          if (!timeout) context = args = null;\n\t        }\n\t      }\n\t    };\n\t\n\t    return function() {\n\t      context = this;\n\t      args = arguments;\n\t      timestamp = _.now();\n\t      var callNow = immediate && !timeout;\n\t      if (!timeout) timeout = setTimeout(later, wait);\n\t      if (callNow) {\n\t        result = func.apply(context, args);\n\t        context = args = null;\n\t      }\n\t\n\t      return result;\n\t    };\n\t  };\n\t\n\t  // Returns the first function passed as an argument to the second,\n\t  // allowing you to adjust arguments, run code before and after, and\n\t  // conditionally execute the original function.\n\t  _.wrap = function(func, wrapper) {\n\t    return _.partial(wrapper, func);\n\t  };\n\t\n\t  // Returns a negated version of the passed-in predicate.\n\t  _.negate = function(predicate) {\n\t    return function() {\n\t      return !predicate.apply(this, arguments);\n\t    };\n\t  };\n\t\n\t  // Returns a function that is the composition of a list of functions, each\n\t  // consuming the return value of the function that follows.\n\t  _.compose = function() {\n\t    var args = arguments;\n\t    var start = args.length - 1;\n\t    return function() {\n\t      var i = start;\n\t      var result = args[start].apply(this, arguments);\n\t      while (i--) result = args[i].call(this, result);\n\t      return result;\n\t    };\n\t  };\n\t\n\t  // Returns a function that will only be executed on and after the Nth call.\n\t  _.after = function(times, func) {\n\t    return function() {\n\t      if (--times < 1) {\n\t        return func.apply(this, arguments);\n\t      }\n\t    };\n\t  };\n\t\n\t  // Returns a function that will only be executed up to (but not including) the Nth call.\n\t  _.before = function(times, func) {\n\t    var memo;\n\t    return function() {\n\t      if (--times > 0) {\n\t        memo = func.apply(this, arguments);\n\t      }\n\t      if (times <= 1) func = null;\n\t      return memo;\n\t    };\n\t  };\n\t\n\t  // Returns a function that will be executed at most one time, no matter how\n\t  // often you call it. Useful for lazy initialization.\n\t  _.once = _.partial(_.before, 2);\n\t\n\t  // Object Functions\n\t  // ----------------\n\t\n\t  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n\t  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n\t  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n\t                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\t\n\t  function collectNonEnumProps(obj, keys) {\n\t    var nonEnumIdx = nonEnumerableProps.length;\n\t    var constructor = obj.constructor;\n\t    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\t\n\t    // Constructor is a special case.\n\t    var prop = 'constructor';\n\t    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\t\n\t    while (nonEnumIdx--) {\n\t      prop = nonEnumerableProps[nonEnumIdx];\n\t      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n\t        keys.push(prop);\n\t      }\n\t    }\n\t  }\n\t\n\t  // Retrieve the names of an object's own properties.\n\t  // Delegates to **ECMAScript 5**'s native `Object.keys`\n\t  _.keys = function(obj) {\n\t    if (!_.isObject(obj)) return [];\n\t    if (nativeKeys) return nativeKeys(obj);\n\t    var keys = [];\n\t    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n\t    // Ahem, IE < 9.\n\t    if (hasEnumBug) collectNonEnumProps(obj, keys);\n\t    return keys;\n\t  };\n\t\n\t  // Retrieve all the property names of an object.\n\t  _.allKeys = function(obj) {\n\t    if (!_.isObject(obj)) return [];\n\t    var keys = [];\n\t    for (var key in obj) keys.push(key);\n\t    // Ahem, IE < 9.\n\t    if (hasEnumBug) collectNonEnumProps(obj, keys);\n\t    return keys;\n\t  };\n\t\n\t  // Retrieve the values of an object's properties.\n\t  _.values = function(obj) {\n\t    var keys = _.keys(obj);\n\t    var length = keys.length;\n\t    var values = Array(length);\n\t    for (var i = 0; i < length; i++) {\n\t      values[i] = obj[keys[i]];\n\t    }\n\t    return values;\n\t  };\n\t\n\t  // Returns the results of applying the iteratee to each element of the object\n\t  // In contrast to _.map it returns an object\n\t  _.mapObject = function(obj, iteratee, context) {\n\t    iteratee = cb(iteratee, context);\n\t    var keys =  _.keys(obj),\n\t          length = keys.length,\n\t          results = {},\n\t          currentKey;\n\t      for (var index = 0; index < length; index++) {\n\t        currentKey = keys[index];\n\t        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n\t      }\n\t      return results;\n\t  };\n\t\n\t  // Convert an object into a list of `[key, value]` pairs.\n\t  _.pairs = function(obj) {\n\t    var keys = _.keys(obj);\n\t    var length = keys.length;\n\t    var pairs = Array(length);\n\t    for (var i = 0; i < length; i++) {\n\t      pairs[i] = [keys[i], obj[keys[i]]];\n\t    }\n\t    return pairs;\n\t  };\n\t\n\t  // Invert the keys and values of an object. The values must be serializable.\n\t  _.invert = function(obj) {\n\t    var result = {};\n\t    var keys = _.keys(obj);\n\t    for (var i = 0, length = keys.length; i < length; i++) {\n\t      result[obj[keys[i]]] = keys[i];\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Return a sorted list of the function names available on the object.\n\t  // Aliased as `methods`\n\t  _.functions = _.methods = function(obj) {\n\t    var names = [];\n\t    for (var key in obj) {\n\t      if (_.isFunction(obj[key])) names.push(key);\n\t    }\n\t    return names.sort();\n\t  };\n\t\n\t  // Extend a given object with all the properties in passed-in object(s).\n\t  _.extend = createAssigner(_.allKeys);\n\t\n\t  // Assigns a given object with all the own properties in the passed-in object(s)\n\t  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n\t  _.extendOwn = _.assign = createAssigner(_.keys);\n\t\n\t  // Returns the first key on an object that passes a predicate test\n\t  _.findKey = function(obj, predicate, context) {\n\t    predicate = cb(predicate, context);\n\t    var keys = _.keys(obj), key;\n\t    for (var i = 0, length = keys.length; i < length; i++) {\n\t      key = keys[i];\n\t      if (predicate(obj[key], key, obj)) return key;\n\t    }\n\t  };\n\t\n\t  // Return a copy of the object only containing the whitelisted properties.\n\t  _.pick = function(object, oiteratee, context) {\n\t    var result = {}, obj = object, iteratee, keys;\n\t    if (obj == null) return result;\n\t    if (_.isFunction(oiteratee)) {\n\t      keys = _.allKeys(obj);\n\t      iteratee = optimizeCb(oiteratee, context);\n\t    } else {\n\t      keys = flatten(arguments, false, false, 1);\n\t      iteratee = function(value, key, obj) { return key in obj; };\n\t      obj = Object(obj);\n\t    }\n\t    for (var i = 0, length = keys.length; i < length; i++) {\n\t      var key = keys[i];\n\t      var value = obj[key];\n\t      if (iteratee(value, key, obj)) result[key] = value;\n\t    }\n\t    return result;\n\t  };\n\t\n\t   // Return a copy of the object without the blacklisted properties.\n\t  _.omit = function(obj, iteratee, context) {\n\t    if (_.isFunction(iteratee)) {\n\t      iteratee = _.negate(iteratee);\n\t    } else {\n\t      var keys = _.map(flatten(arguments, false, false, 1), String);\n\t      iteratee = function(value, key) {\n\t        return !_.contains(keys, key);\n\t      };\n\t    }\n\t    return _.pick(obj, iteratee, context);\n\t  };\n\t\n\t  // Fill in a given object with default properties.\n\t  _.defaults = createAssigner(_.allKeys, true);\n\t\n\t  // Creates an object that inherits from the given prototype object.\n\t  // If additional properties are provided then they will be added to the\n\t  // created object.\n\t  _.create = function(prototype, props) {\n\t    var result = baseCreate(prototype);\n\t    if (props) _.extendOwn(result, props);\n\t    return result;\n\t  };\n\t\n\t  // Create a (shallow-cloned) duplicate of an object.\n\t  _.clone = function(obj) {\n\t    if (!_.isObject(obj)) return obj;\n\t    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n\t  };\n\t\n\t  // Invokes interceptor with the obj, and then returns obj.\n\t  // The primary purpose of this method is to \"tap into\" a method chain, in\n\t  // order to perform operations on intermediate results within the chain.\n\t  _.tap = function(obj, interceptor) {\n\t    interceptor(obj);\n\t    return obj;\n\t  };\n\t\n\t  // Returns whether an object has a given set of `key:value` pairs.\n\t  _.isMatch = function(object, attrs) {\n\t    var keys = _.keys(attrs), length = keys.length;\n\t    if (object == null) return !length;\n\t    var obj = Object(object);\n\t    for (var i = 0; i < length; i++) {\n\t      var key = keys[i];\n\t      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n\t    }\n\t    return true;\n\t  };\n\t\n\t\n\t  // Internal recursive comparison function for `isEqual`.\n\t  var eq = function(a, b, aStack, bStack) {\n\t    // Identical objects are equal. `0 === -0`, but they aren't identical.\n\t    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n\t    if (a === b) return a !== 0 || 1 / a === 1 / b;\n\t    // A strict comparison is necessary because `null == undefined`.\n\t    if (a == null || b == null) return a === b;\n\t    // Unwrap any wrapped objects.\n\t    if (a instanceof _) a = a._wrapped;\n\t    if (b instanceof _) b = b._wrapped;\n\t    // Compare `[[Class]]` names.\n\t    var className = toString.call(a);\n\t    if (className !== toString.call(b)) return false;\n\t    switch (className) {\n\t      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n\t      case '[object RegExp]':\n\t      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n\t      case '[object String]':\n\t        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n\t        // equivalent to `new String(\"5\")`.\n\t        return '' + a === '' + b;\n\t      case '[object Number]':\n\t        // `NaN`s are equivalent, but non-reflexive.\n\t        // Object(NaN) is equivalent to NaN\n\t        if (+a !== +a) return +b !== +b;\n\t        // An `egal` comparison is performed for other numeric values.\n\t        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n\t      case '[object Date]':\n\t      case '[object Boolean]':\n\t        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n\t        // millisecond representations. Note that invalid dates with millisecond representations\n\t        // of `NaN` are not equivalent.\n\t        return +a === +b;\n\t    }\n\t\n\t    var areArrays = className === '[object Array]';\n\t    if (!areArrays) {\n\t      if (typeof a != 'object' || typeof b != 'object') return false;\n\t\n\t      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n\t      // from different frames are.\n\t      var aCtor = a.constructor, bCtor = b.constructor;\n\t      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n\t                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n\t                          && ('constructor' in a && 'constructor' in b)) {\n\t        return false;\n\t      }\n\t    }\n\t    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n\t    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\t\n\t    // Initializing stack of traversed objects.\n\t    // It's done here since we only need them for objects and arrays comparison.\n\t    aStack = aStack || [];\n\t    bStack = bStack || [];\n\t    var length = aStack.length;\n\t    while (length--) {\n\t      // Linear search. Performance is inversely proportional to the number of\n\t      // unique nested structures.\n\t      if (aStack[length] === a) return bStack[length] === b;\n\t    }\n\t\n\t    // Add the first object to the stack of traversed objects.\n\t    aStack.push(a);\n\t    bStack.push(b);\n\t\n\t    // Recursively compare objects and arrays.\n\t    if (areArrays) {\n\t      // Compare array lengths to determine if a deep comparison is necessary.\n\t      length = a.length;\n\t      if (length !== b.length) return false;\n\t      // Deep compare the contents, ignoring non-numeric properties.\n\t      while (length--) {\n\t        if (!eq(a[length], b[length], aStack, bStack)) return false;\n\t      }\n\t    } else {\n\t      // Deep compare objects.\n\t      var keys = _.keys(a), key;\n\t      length = keys.length;\n\t      // Ensure that both objects contain the same number of properties before comparing deep equality.\n\t      if (_.keys(b).length !== length) return false;\n\t      while (length--) {\n\t        // Deep compare each member\n\t        key = keys[length];\n\t        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n\t      }\n\t    }\n\t    // Remove the first object from the stack of traversed objects.\n\t    aStack.pop();\n\t    bStack.pop();\n\t    return true;\n\t  };\n\t\n\t  // Perform a deep comparison to check if two objects are equal.\n\t  _.isEqual = function(a, b) {\n\t    return eq(a, b);\n\t  };\n\t\n\t  // Is a given array, string, or object empty?\n\t  // An \"empty\" object has no enumerable own-properties.\n\t  _.isEmpty = function(obj) {\n\t    if (obj == null) return true;\n\t    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n\t    return _.keys(obj).length === 0;\n\t  };\n\t\n\t  // Is a given value a DOM element?\n\t  _.isElement = function(obj) {\n\t    return !!(obj && obj.nodeType === 1);\n\t  };\n\t\n\t  // Is a given value an array?\n\t  // Delegates to ECMA5's native Array.isArray\n\t  _.isArray = nativeIsArray || function(obj) {\n\t    return toString.call(obj) === '[object Array]';\n\t  };\n\t\n\t  // Is a given variable an object?\n\t  _.isObject = function(obj) {\n\t    var type = typeof obj;\n\t    return type === 'function' || type === 'object' && !!obj;\n\t  };\n\t\n\t  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n\t  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n\t    _['is' + name] = function(obj) {\n\t      return toString.call(obj) === '[object ' + name + ']';\n\t    };\n\t  });\n\t\n\t  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n\t  // there isn't any inspectable \"Arguments\" type.\n\t  if (!_.isArguments(arguments)) {\n\t    _.isArguments = function(obj) {\n\t      return _.has(obj, 'callee');\n\t    };\n\t  }\n\t\n\t  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n\t  // IE 11 (#1621), and in Safari 8 (#1929).\n\t  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n\t    _.isFunction = function(obj) {\n\t      return typeof obj == 'function' || false;\n\t    };\n\t  }\n\t\n\t  // Is a given object a finite number?\n\t  _.isFinite = function(obj) {\n\t    return isFinite(obj) && !isNaN(parseFloat(obj));\n\t  };\n\t\n\t  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n\t  _.isNaN = function(obj) {\n\t    return _.isNumber(obj) && obj !== +obj;\n\t  };\n\t\n\t  // Is a given value a boolean?\n\t  _.isBoolean = function(obj) {\n\t    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n\t  };\n\t\n\t  // Is a given value equal to null?\n\t  _.isNull = function(obj) {\n\t    return obj === null;\n\t  };\n\t\n\t  // Is a given variable undefined?\n\t  _.isUndefined = function(obj) {\n\t    return obj === void 0;\n\t  };\n\t\n\t  // Shortcut function for checking if an object has a given property directly\n\t  // on itself (in other words, not on a prototype).\n\t  _.has = function(obj, key) {\n\t    return obj != null && hasOwnProperty.call(obj, key);\n\t  };\n\t\n\t  // Utility Functions\n\t  // -----------------\n\t\n\t  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n\t  // previous owner. Returns a reference to the Underscore object.\n\t  _.noConflict = function() {\n\t    root._ = previousUnderscore;\n\t    return this;\n\t  };\n\t\n\t  // Keep the identity function around for default iteratees.\n\t  _.identity = function(value) {\n\t    return value;\n\t  };\n\t\n\t  // Predicate-generating functions. Often useful outside of Underscore.\n\t  _.constant = function(value) {\n\t    return function() {\n\t      return value;\n\t    };\n\t  };\n\t\n\t  _.noop = function(){};\n\t\n\t  _.property = property;\n\t\n\t  // Generates a function for a given object that returns a given property.\n\t  _.propertyOf = function(obj) {\n\t    return obj == null ? function(){} : function(key) {\n\t      return obj[key];\n\t    };\n\t  };\n\t\n\t  // Returns a predicate for checking whether an object has a given set of\n\t  // `key:value` pairs.\n\t  _.matcher = _.matches = function(attrs) {\n\t    attrs = _.extendOwn({}, attrs);\n\t    return function(obj) {\n\t      return _.isMatch(obj, attrs);\n\t    };\n\t  };\n\t\n\t  // Run a function **n** times.\n\t  _.times = function(n, iteratee, context) {\n\t    var accum = Array(Math.max(0, n));\n\t    iteratee = optimizeCb(iteratee, context, 1);\n\t    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n\t    return accum;\n\t  };\n\t\n\t  // Return a random integer between min and max (inclusive).\n\t  _.random = function(min, max) {\n\t    if (max == null) {\n\t      max = min;\n\t      min = 0;\n\t    }\n\t    return min + Math.floor(Math.random() * (max - min + 1));\n\t  };\n\t\n\t  // A (possibly faster) way to get the current timestamp as an integer.\n\t  _.now = Date.now || function() {\n\t    return new Date().getTime();\n\t  };\n\t\n\t   // List of HTML entities for escaping.\n\t  var escapeMap = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#x27;',\n\t    '`': '&#x60;'\n\t  };\n\t  var unescapeMap = _.invert(escapeMap);\n\t\n\t  // Functions for escaping and unescaping strings to/from HTML interpolation.\n\t  var createEscaper = function(map) {\n\t    var escaper = function(match) {\n\t      return map[match];\n\t    };\n\t    // Regexes for identifying a key that needs to be escaped\n\t    var source = '(?:' + _.keys(map).join('|') + ')';\n\t    var testRegexp = RegExp(source);\n\t    var replaceRegexp = RegExp(source, 'g');\n\t    return function(string) {\n\t      string = string == null ? '' : '' + string;\n\t      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n\t    };\n\t  };\n\t  _.escape = createEscaper(escapeMap);\n\t  _.unescape = createEscaper(unescapeMap);\n\t\n\t  // If the value of the named `property` is a function then invoke it with the\n\t  // `object` as context; otherwise, return it.\n\t  _.result = function(object, property, fallback) {\n\t    var value = object == null ? void 0 : object[property];\n\t    if (value === void 0) {\n\t      value = fallback;\n\t    }\n\t    return _.isFunction(value) ? value.call(object) : value;\n\t  };\n\t\n\t  // Generate a unique integer id (unique within the entire client session).\n\t  // Useful for temporary DOM ids.\n\t  var idCounter = 0;\n\t  _.uniqueId = function(prefix) {\n\t    var id = ++idCounter + '';\n\t    return prefix ? prefix + id : id;\n\t  };\n\t\n\t  // By default, Underscore uses ERB-style template delimiters, change the\n\t  // following template settings to use alternative delimiters.\n\t  _.templateSettings = {\n\t    evaluate    : /<%([\\s\\S]+?)%>/g,\n\t    interpolate : /<%=([\\s\\S]+?)%>/g,\n\t    escape      : /<%-([\\s\\S]+?)%>/g\n\t  };\n\t\n\t  // When customizing `templateSettings`, if you don't want to define an\n\t  // interpolation, evaluation or escaping regex, we need one that is\n\t  // guaranteed not to match.\n\t  var noMatch = /(.)^/;\n\t\n\t  // Certain characters need to be escaped so that they can be put into a\n\t  // string literal.\n\t  var escapes = {\n\t    \"'\":      \"'\",\n\t    '\\\\':     '\\\\',\n\t    '\\r':     'r',\n\t    '\\n':     'n',\n\t    '\\u2028': 'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\t\n\t  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\t\n\t  var escapeChar = function(match) {\n\t    return '\\\\' + escapes[match];\n\t  };\n\t\n\t  // JavaScript micro-templating, similar to John Resig's implementation.\n\t  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n\t  // and correctly escapes quotes within interpolated code.\n\t  // NB: `oldSettings` only exists for backwards compatibility.\n\t  _.template = function(text, settings, oldSettings) {\n\t    if (!settings && oldSettings) settings = oldSettings;\n\t    settings = _.defaults({}, settings, _.templateSettings);\n\t\n\t    // Combine delimiters into one regular expression via alternation.\n\t    var matcher = RegExp([\n\t      (settings.escape || noMatch).source,\n\t      (settings.interpolate || noMatch).source,\n\t      (settings.evaluate || noMatch).source\n\t    ].join('|') + '|$', 'g');\n\t\n\t    // Compile the template source, escaping string literals appropriately.\n\t    var index = 0;\n\t    var source = \"__p+='\";\n\t    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n\t      source += text.slice(index, offset).replace(escaper, escapeChar);\n\t      index = offset + match.length;\n\t\n\t      if (escape) {\n\t        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n\t      } else if (interpolate) {\n\t        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n\t      } else if (evaluate) {\n\t        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n\t      }\n\t\n\t      // Adobe VMs need the match returned to produce the correct offest.\n\t      return match;\n\t    });\n\t    source += \"';\\n\";\n\t\n\t    // If a variable is not specified, place data values in local scope.\n\t    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\t\n\t    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n\t      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n\t      source + 'return __p;\\n';\n\t\n\t    try {\n\t      var render = new Function(settings.variable || 'obj', '_', source);\n\t    } catch (e) {\n\t      e.source = source;\n\t      throw e;\n\t    }\n\t\n\t    var template = function(data) {\n\t      return render.call(this, data, _);\n\t    };\n\t\n\t    // Provide the compiled source as a convenience for precompilation.\n\t    var argument = settings.variable || 'obj';\n\t    template.source = 'function(' + argument + '){\\n' + source + '}';\n\t\n\t    return template;\n\t  };\n\t\n\t  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n\t  _.chain = function(obj) {\n\t    var instance = _(obj);\n\t    instance._chain = true;\n\t    return instance;\n\t  };\n\t\n\t  // OOP\n\t  // ---------------\n\t  // If Underscore is called as a function, it returns a wrapped object that\n\t  // can be used OO-style. This wrapper holds altered versions of all the\n\t  // underscore functions. Wrapped objects may be chained.\n\t\n\t  // Helper function to continue chaining intermediate results.\n\t  var result = function(instance, obj) {\n\t    return instance._chain ? _(obj).chain() : obj;\n\t  };\n\t\n\t  // Add your own custom functions to the Underscore object.\n\t  _.mixin = function(obj) {\n\t    _.each(_.functions(obj), function(name) {\n\t      var func = _[name] = obj[name];\n\t      _.prototype[name] = function() {\n\t        var args = [this._wrapped];\n\t        push.apply(args, arguments);\n\t        return result(this, func.apply(_, args));\n\t      };\n\t    });\n\t  };\n\t\n\t  // Add all of the Underscore functions to the wrapper object.\n\t  _.mixin(_);\n\t\n\t  // Add all mutator Array functions to the wrapper.\n\t  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n\t    var method = ArrayProto[name];\n\t    _.prototype[name] = function() {\n\t      var obj = this._wrapped;\n\t      method.apply(obj, arguments);\n\t      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n\t      return result(this, obj);\n\t    };\n\t  });\n\t\n\t  // Add all accessor Array functions to the wrapper.\n\t  _.each(['concat', 'join', 'slice'], function(name) {\n\t    var method = ArrayProto[name];\n\t    _.prototype[name] = function() {\n\t      return result(this, method.apply(this._wrapped, arguments));\n\t    };\n\t  });\n\t\n\t  // Extracts the result from a wrapped and chained object.\n\t  _.prototype.value = function() {\n\t    return this._wrapped;\n\t  };\n\t\n\t  // Provide unwrapping proxy for some methods used in engine operations\n\t  // such as arithmetic and JSON stringification.\n\t  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\t\n\t  _.prototype.toString = function() {\n\t    return '' + this._wrapped;\n\t  };\n\t\n\t  // AMD registration happens at the end for compatibility with AMD loaders\n\t  // that may not enforce next-turn semantics on modules. Even though general\n\t  // practice for AMD registration is to be anonymous, underscore registers\n\t  // as a named module because, like jQuery, it is a base library that is\n\t  // popular enough to be bundled in a third party lib, but not be part of\n\t  // an AMD load request. Those cases could generate an error when an\n\t  // anonymous define() is called outside of a loader request.\n\t  if (true) {\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return _;\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t}.call(this));\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** app.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 4d340eb5ffd971fe0b21\n **/","import d3 from 'd3';\nimport _ from 'underscore'\n\nlet app = document.querySelector('#app')\n\n\nexport function pol2cart(r, a, cx=0, cy=0) {\n  let x = cx + r * Math.cos(a);\n  let y = cy + r * Math.sin(a);\n  return [x,y];\n}\n\nexport function cart2pol(x, y, cx=0, cy=0) {\n  x = x - cx;\n  y = y - cy;\n  let r = Math.sqrt(x*x + y*y);\n  let a = Math.atan2(y, x);\n  return [r, a];\n}\n\n\nfunction formatMoney(amount) {\n  let format = d3.format(\",.2r\");\n  let millions = amount / 1000000;\n  return '£' + format(millions) + 'm';\n}\n\n\nlet formatCount = d3.format(\",r\");\n\nfunction bubblesVis({data, container, depth=0, gravity=0, width, height, radius=300, maxAmount, fillColor}) {\n  let nodesIndex = {};\n\n  let force = d3.layout.force()\n    .size([width,height]);\n\n  // let center = {\n  //   x: radius,\n  //   y: radius,\n  // };\n\n  let centerDamper = 0.5, collideDamper = 0;\n\n  let handlers = {\n  };\n\n\n  function update (nodes, center) {\n    let income = d => d.income;\n\n\n    function moveTowardsCenter (alpha) {\n      return (d) => {\n        let c = center(d);\n        d.x = d.x + (c.x - d.x) * (centerDamper) * alpha;\n        d.y = d.y + (c.y - d.y) * (centerDamper) * alpha;\n      };\n    }\n\n\n    force.nodes(nodes);\n\n    force.gravity(gravity)\n      .charge(d => -Math.pow(radiusScale(d.income), 2.0))\n      // .charge(d => -radiusScale(d.income) * 15)\n      .friction(0.9)\n\n    let s = radius\n    let radiusScale = d3.scale.linear().domain([0, maxAmount]).range([s/50, s/3])\n\n    nodes.forEach(node => {\n      if (node.x == null || node.y == null) {\n        let r = Math.random() * (radius - radiusScale(node.income));\n        let a = Math.random() * Math.PI * 2;\n        [node.x,node.y] = pol2cart(r, a, radius, radius);\n      }\n    });\n\n    // data.forEach(d => {\n    //   // let bubbleRadius= = (((d.income / avgPowAmount) * radius) /  data.length) * 2e9\n    //   let bubbleRadius = radiusScale(income);\n\n    //   //radiusScale(d.income);\n\n    //   if (!(d.id in nodesIndex)) {\n    //     let r = Math.random() * (radius - bubbleRadius);\n    //     let a = Math.random() * Math.PI * 2;\n    //     let [x,y] = pol2cart(r, a, radius, radius);\n    //     nodesIndex[d.id] = {id: d.id, x, y};\n    //     nodes.push(nodesIndex[d.id]);\n    //   }\n\n    //   let node = nodesIndex[d.id];\n\n    //   _.extend(\n    //     node,\n    //     {\n    //       radius: bubbleRadius,\n    //       subData: d.subData,\n    //       data: d,\n    //     });\n    // });\n\n\n    let nodeEls = container.selectAll('.node')\n      .data(nodes, d => d.id);\n\n\n    let enter = nodeEls.enter().append('g')\n      .attr('class', 'node')\n      // .attr('opacity', 0);\n\n    // nodeEls.exit()\n    //   .transition().duration(2000).attr('transform', 'scale(0)').attr('opacity', 0).remove();\n\n    nodeEls.exit().remove();\n\n\n\n    enter.append('circle')\n      .attr('r', d => radiusScale(d.income))\n      .attr('stroke-width', 2)\n      .attr('fill', fillColor)\n      .attr('aria-label', (d,i) => {\n        let inSubSectorView = !!d.strata;\n        if (inSubSectorView) {\n          return `Sub-sector ${d.subSector} and income band ${d.strata} with total income ${formatMoney(d.income)} and total spending ${formatMoney(d.expend)} (${formatCount(d.count)} organisations)`;\n        } else {\n          return `Sub-sector ${d.subSector} with total income ${formatMoney(d.income)} and total spending ${formatMoney(d.expend)} (${formatCount(d.count)} organisations)`;\n        }\n      })\n      .on('click', function (d,i) { handlers['click'] && handlers['click'].call(this, d,i) })\n      .on('mouseover', function (d,i)  {\n        handlers['mouseover'] && handlers['mouseover'].call(this, d,i)\n      })\n      .on('mousemove', function (d,i)  {\n        handlers['mousemove'] && handlers['mousemove'].call(this, d,i)\n      })\n      .on('mouseout', function (d,i) { handlers['mouseout'] && handlers['mouseout'].call(this, d,i) });\n    // .on('click', (d,i) => handlers.select(d.data, i, depth));\n\n    // nodeEls.transition().duration(2000).attr('opacity', 1);\n\n    // Resolves collisions between d and all other circles.\n    let padding = 20;\n    function collide(alpha) {\n      var quadtree = d3.geom.quadtree(nodes);\n      return function(d) {\n        var radius = radiusScale(d.income);\n        var r = radius + padding,\n            nx1 = d.x - r,\n            nx2 = d.x + r,\n            ny1 = d.y - r,\n            ny2 = d.y + r;\n        quadtree.visit(function(quad, x1, y1, x2, y2) {\n          if (quad.point && (quad.point !== d)) {\n            var x = d.x - quad.point.x,\n                y = d.y - quad.point.y,\n                l = Math.sqrt(x * x + y * y),\n                r = radius + radiusScale(quad.point.income) + padding;\n            if (l < r) {\n              l = (l - r) / l * alpha * collideDamper;\n              d.x -= x *= l;\n              d.y -= y *= l;\n              quad.point.x += x;\n              quad.point.y += y;\n            }\n          }\n          return x1 > nx2\n            || x2 < nx1\n            || y1 > ny2\n            || y2 < ny1;\n        });\n      };\n    }\n\n    force.on(\"tick\", (e) => {\n      nodeEls\n        .each(collide(e.alpha))\n        .each(moveTowardsCenter(e.alpha))\n        .attr('transform', d => {\n          return `translate(${d.x}, ${d.y})`\n        });\n    })\n\n    nodeEls\n      .attr('transform', d => {\n        return `translate(${d.x}, ${d.y})`\n      });\n\n    // // nodeEls\n    //   .attr('transform', d => {\n    //     let c = center(d);\n    //     return `translate(${c.x}, ${c.y})`\n    //   });\n\n    force.start();\n\n    return self;\n  };\n\n  function on(event, handler) {\n    handlers[event] = handler;\n    return self;\n  }\n\n  let self = {update, on};\n  return self;\n}\n\nexport function sum(list, iterator=_.identity) {\n  iterator = _.iteratee(iterator);\n  return list.reduce((memo, item) => memo + iterator(item), 0);\n}\n\nfunction agrregateBy(data, key) {\n  let grouped = _.groupBy(data, key);\n  return _.map(grouped, (lines, name) => ({\n    id: key + '-' + name,\n    name,\n    [key]: name,\n    income: sum(lines, d => parseFloat(d.income)),\n    expend: sum(lines, d => parseFloat(d.expend)),\n    count: sum(lines, d => parseInt(d.count, 10)),\n  }));\n}\n\nfunction gridLabels({data, container, center}) {\n  function update(visible) {\n    let labelEls = container.selectAll('.label').data(data);\n    labelEls.enter()\n       .append('text').text(d => d.subSector).attr('text-anchor', 'middle').attr('class', 'label')\n      //.append('circle').attr('r', 3).attr('stroke', 'red').attr('class', 'label');\n    labelEls.exit().remove();\n\n    labelEls\n      .transition()\n      .duration(visible ? 2000 : 0)\n      .attr('font-family', 'sans-serif')\n      .attr('fill', '#666')\n      .attr('font-size', 12)\n      .attr('font-weight', 'bold')\n      .attr('transform', d => {\n        let c = center(d);\n        return `translate(${c.x}, ${c.y})`;\n      })\n      // .attr('x', d => center(d).x)\n      // .attr('y', d => center(d).y)\n      .attr('opacity', visible ? 1 : 0);\n\n    return self;\n  }\n  let self = {update};\n  return self;\n}\n\nfunction loadedData(sectorStrata) {\n\n  let radius = 300;\n  let width = 810, height = 1200;\n  let root = d3.select('#app');\n  let center = {x: width/2, y: 300};\n\n  let subSectorIndex = _.mapObject(_.invert(_.uniq(_.pluck(sectorStrata, 'subSector'))), parseInt);\n\n  let subSectorNodes = agrregateBy(sectorStrata, 'subSector');\n  let strataNodes = sectorStrata.map(d => {\n    return {\n      id: d.subSector + '-' + d.strata,\n      name: d.strata,\n      subSector: d.subSector,\n      strata: d.strata,\n      income: parseFloat(d.income),\n      expend: parseFloat(d.expend),\n      count: parseInt(d.count, 10),\n    };\n  });\n\n\n  let fillRange = d3.scale.linear()\n      .domain([0, _.size(subSectorIndex)]).range([\"#D3ECE7\", \"#8ACAC0\"]);\n  let fillColor = d => fillRange(subSectorIndex[d.subSector]);\n\n  // let subSectorNodes = _.groupBy(sectorStrata, 'subSector').map((stratas, subSector) => {\n\n    // let\n\n\n    //   // let bubbleRadius= = (((d.income / avgPowAmount) * radius) /  data.length) * 2e9\n    //   let bubbleRadius = radiusScale(income);\n\n  //   //radiusScale(d.income);\n\n  //   if (!(d.id in nodesIndex)) {\n  //     let r = Math.random() * (radius - bubbleRadius);\n  //     let a = Math.random() * Math.PI * 2;\n  //     let [x,y] = pol2cart(r, a, radius, radius);\n  //     nodesIndex[d.id] = {id: d.id, x, y};\n  //     nodes.push(nodesIndex[d.id]);\n  //   }\n\n  //   let node = nodesIndex[d.id];\n\n    //   _.extend(\n    //     node,\n    //     {\n    //       radius: bubbleRadius,\n    //       subData: d.subData,\n    //       data: d,\n    //     });\n    // });\n\n\n  const COLS = 4;\n\n  function rowAndCol(d) {\n    let sIndex = subSectorIndex[d.subSector];\n    let col = (sIndex % COLS);\n    let row = Math.floor(sIndex / COLS);\n    return [row, col];\n  }\n\n  function strataCenter (d) {\n    let [row, col] = rowAndCol(d);\n    return {x: col * 180 + 130, y: row * 220 + 140};\n  }\n\n  // Should be the same as strataCenter, hacking to work round issues\n  function labelsCenter (d) {\n    let [row, col] = rowAndCol(d);\n\n    // Horrible hack\n    let adjustRow = [-30, -10, 10, 20, 40];\n    let adjustCol = [-20, 2, 15, 30]\n\n    return {x: col * 180 + 130 + adjustCol[col], y: row * 220 + 140 + adjustRow[row] + 90};\n  }\n\n\n  function stratas() {\n    let indexed = _.groupBy(strataNodes, 'subSector');\n    subSectorNodes.forEach(n => {\n      let parents = indexed[n.subSector];\n      n.px = n.x = d3.mean(parents, d => d.x);\n      n.py = n.y = d3.mean(parents, d => d.y);\n    });\n\n    vis.update(subSectorNodes, d => center);\n\n    labels.update(false);\n\n    subSectorsButton.style({\n      'background-color': 'white',\n      'color': '#522574',\n    });\n    stratasButton.style({\n      'background-color': '#522574',\n      'color': 'white',\n    });\n  }\n\n  function subSectors() {\n    let indexed = _.indexBy(subSectorNodes, 'subSector');\n    strataNodes.forEach(n => {\n      let parent = indexed[n.subSector];\n      let noise = () => Math.random() * 50 - 25;\n      n.px = n.x = parent.x + noise();\n      n.py = n.y = parent.y + noise();\n    });\n    vis.update(strataNodes, strataCenter);\n\n    labels.update(true);\n\n    subSectorsButton.style({\n      'background-color': '#522574',\n      'color': 'white',\n    });\n    stratasButton.style({\n      'background-color': 'white',\n      'color': '#522574',\n    });\n  }\n\n  let buttons = root.append('div');\n  let stratasButton = buttons.append('button')\n      .text('ALL')\n      .on('click', stratas);\n  let subSectorsButton = buttons.append('button')\n    .text('BY SUB-SECTOR')\n    .on('click', subSectors);\n\n  buttons.selectAll('button')\n    .style({\n      'margin-right': '8px',\n      'background-color': 'white',\n      'border': '1px solid #522574',\n      'color': '#522574',\n      'font-size': '14px',\n      'font-family': 'sans-serif',\n      'padding-top': '5px',\n      'padding-bottom': '5px',\n      'padding-left': '20px',\n      'padding-right': '20px',\n      'text-transform': 'uppercase',\n    })\n\n\n  let bubbleContainer = root.append('svg')\n    .attr('width', width)\n    .attr('height', height)\n    .append('g')\n    // .attr('transform', `translate(${width/2}, ${height/2})`);\n\n  let labels = gridLabels({data: subSectorNodes, container: bubbleContainer, center: labelsCenter});\n\n  let popover = root.append('div')\n      .style({\n        'font-family': 'museo-sans, helventica, sans-serif',\n        'padding-left': '18px',\n        'padding-right': '18px',\n        'padding-top': '16px',\n        'padding-bottom': '14px',\n        border: '1px solid #94BFB7',\n        'border-radius': '2px',\n        'background-color': '#ffffff',\n        'color': '#645C5D',\n        'font-size': '16px',\n        'line-height': '23px',\n      });\n\n  function updatePopover(fields) {\n    let fieldEls = popover.selectAll('div').data(fields);\n    fieldEls.exit();\n    let enter = fieldEls.enter()\n        .append('div');\n    enter.append('span').attr('class', 'name').style({color: '#706F6F'});\n    enter.append('span').attr('class', 'value').style({'font-weight': 'bold', color: '#522977'})\n    fieldEls.select('.name').text(d => d.name + ': ');\n    fieldEls.select('.value').text(d => d.value);\n\n    popover.style({\n      position: 'absolute',\n      display: 'block',\n    });\n  }\n\n\n\n\n\n  let vis = bubblesVis({container: bubbleContainer, width, height, subSectorIndex, radius, maxAmount: d3.max(subSectorNodes, d => d.income), fillColor})\n      .on('mouseover', function (d, i) {\n        let inSubSectorView = !!d.strata;\n        d3.selectAll('.node').attr(\"stroke\", (dd,ii) => {\n          if (inSubSectorView) {\n            return (dd.strata === d.strata) ? \"#94BFB7\" : 'none'\n          } else {\n            return (d === dd) ? \"#94BFB7\" : 'none';\n          }\n        });\n\n\n        updatePopover([\n          (inSubSectorView ? {name: 'Income band', value: d.strata} : {name: 'Sub-Sector', value: d.subSector}),\n          {name: 'Total income', value: formatMoney(d.income)},\n          {name: 'Total spending', value: formatMoney(d.expend)},\n          {name: 'Number of organisations', value: formatCount(d.count)},\n        ]);\n      })\n      .on('mousemove', () => {\n        let [x,y] = d3.mouse(root[0][0]);\n        popover.style({\n          left: (x+20) + 'px',\n          top: (y+20) + 'px',\n        });\n      })\n      .on('mouseout', function (d, i) {\n        d3.selectAll('.node').attr(\"stroke\", 'none');\n        popover.style({\n          display: 'none',\n        });\n      });\n\n  stratas();\n}\n\nd3.csv('data/sub-sector-strata.csv', loadedData);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3/d3.js\n ** module id = 1\n ** module chunks = 0\n **/","//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/underscore/underscore.js\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}
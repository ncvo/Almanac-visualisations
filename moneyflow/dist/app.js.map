{"version":3,"sources":["webpack:///app.js","webpack:///webpack/bootstrap cdb640061874c044b2cf","webpack:///./src/index.js","webpack:///./~/d3/d3.js","webpack:///./~/underscore/underscore.js","webpack:///./src/detailsList.js","webpack:///./src/infoItems.js","webpack:///./src/startDots.js","webpack:///./src/arcSet.js","webpack:///./src/infoBox.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_objectWithoutProperties","keys","target","i","indexOf","Object","prototype","hasOwnProperty","bubble","container","position","bgFill","title","value","g","append","attr","text","text-anchor","font-size","font-family","fill","format","_d32","select","arcIndicators","_ref","fgFill","values","_ref$maxProgress","maxProgress","undefined","_ref$endCaps","endCaps","options","bgArcs","_arcSet2","_extends","progress","d","fgArcs","animateIn","selector","selectAll","data","exit","remove","enter","bgContainer","fgContainer","outputInfo","_ref2","top","left","lineHeight","_ref2$borderColor","arrowFill","borderColor","info","_infoItems2","bottom","fontSize","iconHeight","details","_detailsList2","lastHighlighted","highlighted","length","ring","style","breakdown","arrowHeads","_ref3","_ref3$left","_ref3$direction","direction","joinBox","_ref4","_ref4$width","width","height","border","y","x","regionSelect","regions","onChange","NATIONALLY","concat","current","on","font-weight","init","nationalData","regionalData","highlight","setTimeout","update","containers","income","datum","incomeArcs","outgoing","outgoingArcs","reinvest","reinvestArcs","type","output","arrows","join","redots","reinvestmentDots","outdots","outgoingDots","updateIncomeBubble","sum","dd","updateSpendingBubble","WIDTH","HEIGHT","lengths","_underscore2","mapObject","dotColor","scale","linear","domain","range","TOP_INNER_RADIUS","ARC_WIDTH","ARC_WIDTH_BOTTOM","BOTTOM_INNER_RADIUS","INFO_WIDTH","OFFSET_BOTTOM","arcDefaults","mouseover","mouseout","click","opacity","innerRadius","arcWidth","right","clockwise","center","_infoBox2","dotFill","outputOptions","_startDots2","svg","transition","duration","ease","sortBy","identity","region","object","map","n","prepNational","config","reverse","groupBy","lines","sourceLines","source","label","parseFloat","icon","iconsRoot","toLowerCase","replace","list","forEach","prepRegional","without","r","regionData","line","moneyflow","defaults","dataRoot","national","regional","done","after","csv","assign","arguments","key","_d3","_underscore","_arcSet","_infoBox","_infoItems","_startDots","_detailsList","window","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","a","b","NaN","d3_number","d3_numeric","isNaN","d3_bisector","compare","lo","hi","mid","d3_transposeLength","d3_range_integerScale","k","d3_class","ctor","properties","defineProperty","enumerable","d3_Map","this","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","push","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","method","apply","d3_vendorSymbol","name","charAt","toUpperCase","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","listenerByName","listener","get","set","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","s","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","d3_selection_classedName","re","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","d3_nsXhtml","createElement","createElementNS","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","i0","j0","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","w","d3_event_dragSelect","suppressClick","off","d3_mousePoint","changedTouches","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","scrollX","scrollY","margin","padding","ctm","getScreenCTM","f","pageX","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","toString","min","hsl","color","exec","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer","delay","then","Date","now","time","timer","t","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","clearTimeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","Infinity","d3_format_precision","ceil","log","LN10","d3_formatPrefix","abs","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","specifier","d3_format_re","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","start","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","pointRing","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","root","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","transform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","d3_zero","d3_svg_arcInnerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","count","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","cancelId","cancel","tick","tweens","d3_svg_axisX","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","transpose","matrix","row","zip","entries","arrays","merged","Error","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","property","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","html","innerHTML","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","correspondingElement","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","tsv","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","tops","bottoms","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","__WEBPACK_AMD_DEFINE_ARRAY__","createReduce","dir","iterator","iteratee","memo","currentKey","optimizeCb","isArrayLike","createPredicateIndexFinder","predicate","getLength","createIndexFinder","predicateFind","sortedIndex","item","idx","collectNonEnumProps","nonEnumIdx","nonEnumerableProps","constructor","proto","isFunction","ObjProto","prop","previousUnderscore","ArrayProto","FuncProto","nativeIsArray","nativeKeys","nativeBind","nativeCreate","Ctor","_wrapped","VERSION","func","argCount","collection","accumulator","isObject","matcher","createAssigner","keysFunc","undefinedOnly","baseCreate","MAX_ARRAY_INDEX","collect","results","foldl","inject","reduceRight","foldr","detect","findIndex","findKey","reject","negate","every","all","some","any","includes","include","fromIndex","guard","invoke","isFunc","pluck","where","attrs","findWhere","computed","lastComputed","rand","shuffled","sample","criteria","indexBy","countBy","toArray","pass","fail","head","take","initial","last","rest","tail","drop","compact","flatten","shallow","strict","startIndex","isArguments","len","difference","uniq","unique","isSorted","isBoolean","seen","union","argsLength","unzip","findLastIndex","low","high","executeBound","sourceFunc","boundFunc","callingContext","TypeError","partial","boundArgs","bindAll","memoize","hasher","cache","address","wait","defer","throttle","timeout","later","leading","trailing","debounce","immediate","timestamp","callNow","wrapper","once","hasEnumBug","propertyIsEnumerable","allKeys","functions","extend","extendOwn","pick","oiteratee","omit","props","clone","tap","interceptor","isMatch","eq","aStack","bStack","className","areArrays","aCtor","bCtor","isEqual","isEmpty","isString","isElement","Int8Array","isNumber","isNull","isUndefined","noConflict","constant","noop","propertyOf","accum","escapeMap","&","<",">","\"","'","`","unescapeMap","createEscaper","escaper","testRegexp","replaceRegexp","escape","unescape","fallback","idCounter","uniqueId","templateSettings","evaluate","noMatch","escapes","\\","\r","\n"," "," ","escapeChar","settings","oldSettings","variable","render","argument","chain","instance","_chain","mixin","toJSON","detailsList","infoItems","_ref$left","_ref$fontSize","_ref$iconHeight","items","itemsEnter","iconSpacing","startDots","dots","pol2cart","cart2pol","arcSet","_center","_center2","_slicedToArray","animationDelay","_center3","_center32","_pol2cart","_pol2cart2","innerEx","innerEy","_pol2cart3","_pol2cart32","innerSx","innerSy","_pol2cart4","_pol2cart42","outerEx","outerEy","_pol2cart5","_pol2cart52","outerSx","outerSy","pointerAngle","tipRadius","_pol2cart6","_pol2cart62","_pol2cart7","_pol2cart72","capx1","capy1","_pol2cart8","_pol2cart82","capx2","capy2","_ref2$center","_ref2$innerRadius","_ref2$arcWidth","_ref2$endCaps","_ref2$clockwise","_ref2$right","_ref2$progress","_ref2$ring","_ref2$tipRadius","_ref2$fill","_ref2$animateIn","_ref2$opacity","_ref2$animationDelay","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","Symbol","infoBox","detailsHeading"],"mappings":"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","file":"app.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\t\n\tvar _d3 = __webpack_require__(1);\n\t\n\tvar _d32 = _interopRequireDefault(_d3);\n\t\n\tvar _underscore = __webpack_require__(2);\n\t\n\tvar _underscore2 = _interopRequireDefault(_underscore);\n\t\n\tvar _arcSet = __webpack_require__(6);\n\t\n\tvar _arcSet2 = _interopRequireDefault(_arcSet);\n\t\n\tvar _infoBox = __webpack_require__(7);\n\t\n\tvar _infoBox2 = _interopRequireDefault(_infoBox);\n\t\n\tvar _infoItems = __webpack_require__(4);\n\t\n\tvar _infoItems2 = _interopRequireDefault(_infoItems);\n\t\n\tvar _startDots = __webpack_require__(5);\n\t\n\tvar _startDots2 = _interopRequireDefault(_startDots);\n\t\n\tvar _detailsList = __webpack_require__(3);\n\t\n\tvar _detailsList2 = _interopRequireDefault(_detailsList);\n\t\n\tvar NATIONALLY = \"United Kingdom\";\n\t\n\tfunction bubble(container, position, bgFill, title, value) {\n\t  var g = container.append('g').attr('transform', 'translate(' + position[0] + ', ' + position[1] + ')');\n\t  g.append('circle').attr('r', 35).attr('fill', bgFill);\n\t  g.append('text').text(title).attr('dy', -5).attr({ 'text-anchor': 'middle', 'font-size': 12, 'font-family': 'sans-serif', fill: 'white' });\n\t\n\t  g.append('text').attr('class', 'value').attr('dy', 12).attr({ 'text-anchor': 'middle', 'font-size': 16, 'font-family': 'sans-serif', fill: 'white' });\n\t\n\t  var format = _d32['default'].format(\",.1f\");\n\t\n\t  return function update(value) {\n\t    g.select('.value').text('£' + format(value) + 'bn');\n\t  };\n\t}\n\t\n\tfunction arcIndicators(_ref) {\n\t  var bgFill = _ref.bgFill;\n\t  var fgFill = _ref.fgFill;\n\t  var values = _ref.values;\n\t  var _ref$maxProgress = _ref.maxProgress;\n\t  var maxProgress = _ref$maxProgress === undefined ? 1 : _ref$maxProgress;\n\t  var _ref$endCaps = _ref.endCaps;\n\t  var endCaps = _ref$endCaps === undefined ? true : _ref$endCaps;\n\t\n\t  var options = _objectWithoutProperties(_ref, ['bgFill', 'fgFill', 'values', 'maxProgress', 'endCaps']);\n\t\n\t  var bgArcs = (0, _arcSet2['default'])(_extends({}, options, {\n\t    fill: bgFill,\n\t    endCaps: endCaps,\n\t    progress: function progress(d) {\n\t      return maxProgress;\n\t    }\n\t  }));\n\t\n\t  var fgArcs = (0, _arcSet2['default'])(_extends({}, options, {\n\t    fill: fgFill,\n\t    animateIn: function animateIn(d) {\n\t      return true;\n\t    }\n\t  }));\n\t\n\t  return function update(container) {\n\t    var selector = container.selectAll('.arcsContainer').data(function (d, i) {\n\t      return [null];\n\t    });\n\t\n\t    selector.exit().remove();\n\t    var enter = selector.enter().append('g').attr('class', 'arcsContainer');\n\t    enter.append('g').attr('class', 'bg');\n\t    enter.append('g').attr('class', 'fg');\n\t\n\t    var bgContainer = selector.select('.bg');\n\t    var fgContainer = selector.select('.fg');\n\t\n\t    bgContainer.data(function (d, i) {\n\t      return [values(d, i)];\n\t    }).call(bgArcs);\n\t    fgContainer.data(function (d, i) {\n\t      return [values(d, i)];\n\t    }).call(fgArcs);\n\t  };\n\t}\n\t\n\tfunction outputInfo(_ref2) {\n\t  var values = _ref2.values;\n\t  var top = _ref2.top;\n\t  var left = _ref2.left;\n\t  var lineHeight = _ref2.lineHeight;\n\t  var arrowFill = _ref2.arrowFill;\n\t  var _ref2$borderColor = _ref2.borderColor;\n\t  var borderColor = _ref2$borderColor === undefined ? \"#8ACAC0\" : _ref2$borderColor;\n\t\n\t  // infoItems grows from the bottom, but we can give a negative\n\t  // lineHeight to have it grow from the top\n\t  var info = (0, _infoItems2['default'])({ bottom: top, lineHeight: -lineHeight, left: 60, fontSize: 13, iconHeight: 30 });\n\t  var details = (0, _detailsList2['default'])({ top: top, lineHeight: lineHeight / 2, fontSize: 12, left: 300 });\n\t\n\t  var lastHighlighted = undefined;\n\t  return function update(container, highlighted) {\n\t    var selector = container.selectAll('.outputInfo').data(function (d, i) {\n\t      return [values(d, i)];\n\t    });\n\t\n\t    selector.exit().remove();\n\t    var enter = selector.enter().append('g').attr('class', 'outputInfo');\n\t    enter.append('g').attr('class', 'details');\n\t    enter.append('line').attr('class', 'border');\n\t\n\t    selector.attr('transform', 'translate(' + left + ', 0)');\n\t    selector.call(info, highlighted);\n\t\n\t    selector.select('.border').attr('x1', 250).attr('y1', top - lineHeight * 0.25).attr('x2', 250).attr('y2', function (d) {\n\t      return top + lineHeight * d.length + lineHeight * 0.1;\n\t    }).attr('stroke-width', '8').attr('stroke', borderColor);\n\t\n\t    selector.select('.details').attr('transform', 'translate(0, ' + lineHeight * (highlighted || lastHighlighted || { ring: 0 }).ring + ')').data(function (d, i) {\n\t      return highlighted || lastHighlighted ? [[highlighted || lastHighlighted]] : [];\n\t    }, function (d) {\n\t      return 1;\n\t    }).call(details).style('opacity', highlighted && highlighted.breakdown.length > 1 ? 1 : 0);\n\t\n\t    lastHighlighted = highlighted;\n\t  };\n\t}\n\t\n\tfunction arrowHeads(_ref3) {\n\t  var values = _ref3.values;\n\t  var top = _ref3.top;\n\t  var _ref3$left = _ref3.left;\n\t  var left = _ref3$left === undefined ? 0 : _ref3$left;\n\t  var lineHeight = _ref3.lineHeight;\n\t  var arrowFill = _ref3.arrowFill;\n\t  var _ref3$direction = _ref3.direction;\n\t  var direction = _ref3$direction === undefined ? 1 : _ref3$direction;\n\t\n\t  return function update(container) {\n\t    var arrowHeads = container.selectAll('.arrowHead').data(function (d, i) {\n\t      return values(d, i);\n\t    });\n\t    arrowHeads.exit().remove();\n\t    arrowHeads.enter().append('path');\n\t    arrowHeads.attr('class', 'arrowHead').attr('fill', arrowFill).attr('d', function (d, i) {\n\t      return '\\n        M ' + left + ' ' + (top + lineHeight * i - 15) + '\\n        L ' + left + ' ' + (top + lineHeight * (i + 1) + 15) + '\\n        L ' + (left + 40 * direction) + ' ' + (top + lineHeight * (i + 0.5)) + '\\n        Z\\n        ';\n\t    });\n\t  };\n\t}\n\t\n\tfunction joinBox(_ref4) {\n\t  var value = _ref4.value;\n\t  var top = _ref4.top;\n\t  var _ref4$width = _ref4.width;\n\t  var width = _ref4$width === undefined ? 20 : _ref4$width;\n\t  var _ref4$border = _ref4.border;\n\t  var border = _ref4$border === undefined ? 16 : _ref4$border;\n\t  var height = _ref4.height;\n\t\n\t  return function update(container) {\n\t    var selector = container.selectAll('.joinBox').data(function (d, i) {\n\t      return [value(d, i)];\n\t    });\n\t\n\t    selector.exit().remove();\n\t    var enter = selector.enter().append('g').attr('class', 'joinBox');\n\t    enter.append('rect').attr({ y: top, x: -width / 2, width: width, height: height }).attr('fill', '#5D3785');\n\t    // enter.append('rect').attr({y: top, x: -width/2 + width/3, width: width/3*2, height: height}).attr('fill', '#674591');\n\t    // enter.append('rect').attr({y: top, x: -width/2 + width/3 * 2, width: width/3, height: height}).attr('fill', '#7D67A7');\n\t    // enter.append('rect').attr({y: top+16, x: -width/2, width, height: height-border*2}).attr('fill','#522977');\n\t    // enter.append('text')\n\t    //   .text('Income')\n\t    //   .attr({'text-anchor': 'middle', 'font-size': 36, 'font-family': 'sans-serif', fill: 'white'})\n\t    //   .attr('y', top + height/2 + 50)\n\t    //   .style({opacity: 0.8})\n\t\n\t    // enter.append('text')\n\t    //   .attr('class', 'amount')\n\t    //   .attr({'text-anchor': 'middle', 'font-size': 36, 'font-family': 'sans-serif', fill: 'white', 'font-weight': 'bold'})\n\t    //   .attr('y', top + height/2 + 70)\n\t    //   .attr('dy', '1em')\n\t    //   .style({opacity: 0.8})\n\t\n\t    // let iconHeight = 100\n\t    // enter.append('image')\n\t    //   .attr('x', -iconHeight/2)\n\t    //   .attr('y', top + height/2 - 100)\n\t    //   .attr('width', iconHeight)\n\t    //   .attr('height', iconHeight)\n\t    //   .attr('xlink:href', \"icons/income.svg\");\n\t\n\t    // let format = d3.format(\",.2r\");\n\t    // selector.select('.amount').text(d => '£' + format(d) + 'bn');\n\t  };\n\t}\n\t\n\tfunction regionSelect(container, regions, onChange) {\n\t  var width = 320;\n\t  var height = 44;\n\t  var selector = container.append('g').attr('transform', 'translate(180, 31)');\n\t\n\t  regions = [NATIONALLY].concat(regions);\n\t  var current = 0;\n\t\n\t  selector.append('rect').attr({\n\t    x: -width / 2,\n\t    y: -height / 44,\n\t    width: width,\n\t    height: height,\n\t    fill: '#522977'\n\t  });\n\t\n\t  selector.append('text').text('◀').attr({\n\t    'font-size': 20,\n\t    fill: 'white',\n\t    y: 28,\n\t    x: -width / 2 + 10\n\t  });\n\t\n\t  selector.append('text').text('▶').attr({\n\t    'font-size': 20,\n\t    fill: 'white',\n\t    y: 28,\n\t    x: width / 2 - 30\n\t  });\n\t\n\t  var left = selector.append('rect').attr({\n\t    x: -width / 2,\n\t    y: -height / 44,\n\t    width: width / 2,\n\t    height: height,\n\t    fill: 'transparent'\n\t  }).on('click', function () {\n\t    current = current === 0 ? regions.length - 1 : current - 1;\n\t    selector.select('.label').text(regions[current]);\n\t    onChange(regions[current]);\n\t  });\n\t\n\t  var right = selector.append('rect').attr({\n\t    x: 0,\n\t    y: -height / 44,\n\t    width: width / 2,\n\t    height: height,\n\t    fill: 'transparent'\n\t  }).on('click', function () {\n\t    current = (current + 1) % regions.length;\n\t    selector.select('.label').text(regions[current]);\n\t    onChange(regions[current]);\n\t  });\n\t\n\t  selector.append('text').attr('class', 'label').text(regions[current]).attr({\n\t    fill: 'white',\n\t    y: 28,\n\t    'font-weight': 100,\n\t    'text-anchor': 'middle',\n\t    'font-family': 'sans-serif',\n\t    'font-size': 20\n\t  });\n\t\n\t  selector.selectAll('text').style('pointer-events', 'none');\n\t}\n\t\n\tfunction init(nationalData, regionalData) {\n\t  var WIDTH = 1100,\n\t      HEIGHT = 1500;\n\t\n\t  var data = nationalData;\n\t\n\t  var lengths = _underscore2['default'].mapObject(nationalData, function (d) {\n\t    return d.length;\n\t  });\n\t\n\t  var bgColor = _d32['default'].scale.linear().domain([0, 1]).range(['#DDDBC6', '#A7AF5B']);\n\t  var fgColor = _d32['default'].scale.linear().domain([0, 1]).range(['#8E7FB8', '#522977']);\n\t  var dotColor = _d32['default'].scale.linear().domain([0, lengths.income]).range(['#BDB5D6', '#9B83B0']);\n\t\n\t  var highlighted = null;\n\t\n\t  var TOP_INNER_RADIUS = 120;\n\t  var ARC_WIDTH = 35;\n\t  var ARC_WIDTH_BOTTOM = 45;\n\t  var BOTTOM_INNER_RADIUS = 80;\n\t  var INFO_WIDTH = 244;\n\t  var OFFSET_BOTTOM = 10;\n\t\n\t  var arcDefaults = {\n\t    ring: function ring(d) {\n\t      return d.ring;\n\t    },\n\t    progress: function progress(d, i) {\n\t      // console.log(d.value, d3.sum(data[d.type], dd => dd.value), data);\n\t      return d.value / _d32['default'].sum(data[d.type], function (dd) {\n\t        return dd.value;\n\t      });\n\t    },\n\t    mouseover: function mouseover(d, i) {\n\t      return highlight(d);\n\t    },\n\t    mouseout: function mouseout(d, i) {\n\t      return highlight(null);\n\t    },\n\t    click: function click(d, i) {\n\t      return highlight(d);\n\t    },\n\t    opacity: function opacity(d, i) {\n\t      return highlighted == null || highlighted === d ? 1 : 0.6;\n\t    }\n\t  };\n\t\n\t  // Highlight color\n\t  function hc(scale, nonHighlightColor) {\n\t    return function (d, i) {\n\t      if (d === highlighted) {\n\t        return scale(1);\n\t      } else {\n\t        return scale(nonHighlightColor(d, i));\n\t      }\n\t    };\n\t  }\n\t\n\t  var incomeArcs = arcIndicators(_extends({}, arcDefaults, {\n\t    innerRadius: function innerRadius(d) {\n\t      return TOP_INNER_RADIUS;\n\t    },\n\t    arcWidth: ARC_WIDTH,\n\t    values: function values(d) {\n\t      return d[\"income\"];\n\t    },\n\t    // bgFill: hc(bgColor, (d,i) => i/(lengths.income-1)),\n\t    // fgFill: hc(fgColor, (d,i) => i/(lengths.income-1)),\n\t    fgFill: function fgFill(d, i) {\n\t      return \"#522977\";\n\t    },\n\t    bgFill: function bgFill(d, i) {\n\t      return \"#7D67A6\";\n\t    }\n\t  }));\n\t\n\t  var reinvestArcs = arcIndicators(_extends({}, arcDefaults, {\n\t    right: function right(d) {\n\t      return false;\n\t    },\n\t    innerRadius: function innerRadius(d) {\n\t      return TOP_INNER_RADIUS;\n\t    },\n\t    arcWidth: ARC_WIDTH + 5,\n\t    // animationDelay: 800,\n\t\n\t    // Make the arc not go all the way round\n\t    maxProgress: 0.6,\n\t    progress: function progress(d, i) {\n\t      // console.log(d.value, d3.sum(data[d.type], dd => dd.value), data);\n\t      return d.value / _d32['default'].sum(data[d.type], function (dd) {\n\t        return dd.value;\n\t      }) * 0.6;\n\t    },\n\t\n\t    values: function values(d) {\n\t      return d[\"reinvest\"];\n\t    },\n\t    // bgFill: hc(bgColor, (d,i) => i/(lengths.income-1)),\n\t    // fgFill: hc(fgColor, (d,i) => (lengths.reinvest-i-1)/(lengths.income-1)),\n\t    fgFill: function fgFill(d, i) {\n\t      return \"#8ACAC0\";\n\t    },\n\t    bgFill: function bgFill(d, i) {\n\t      return \"#CBEDE6\";\n\t    }\n\t  }));\n\t\n\t  var outgoingArcs = arcIndicators(_extends({}, arcDefaults, {\n\t    // animationDelay: 1000,\n\t    right: function right(d) {\n\t      return false;\n\t    },\n\t    clockwise: function clockwise(d) {\n\t      return false;\n\t    },\n\t    innerRadius: function innerRadius(d) {\n\t      return BOTTOM_INNER_RADIUS;\n\t    },\n\t    arcWidth: ARC_WIDTH_BOTTOM,\n\t    // center: d => [OFFSET_BOTTOM, TOP_INNER_RADIUS + BOTTOM_INNER_RADIUS + ARC_WIDTH * (lengths.income)],\n\t    center: function center(d) {\n\t      return [OFFSET_BOTTOM, TOP_INNER_RADIUS + BOTTOM_INNER_RADIUS + ARC_WIDTH * lengths.income];\n\t    },\n\t    values: function values(d) {\n\t      return d[\"outgoing\"];\n\t    },\n\t    // bgFill: hc(bgColor, (d,i) => (lengths.outgoing-i-1)/(lengths.outgoing-1)),\n\t    // fgFill: hc(fgColor, (d,i) => i/(lengths.outgoing-1)),\n\t    fgFill: function fgFill(d, i) {\n\t      return \"#8ACAC0\";\n\t    },\n\t    bgFill: function bgFill(d, i) {\n\t      return \"#CBEDE6\";\n\t    }\n\t  }));\n\t\n\t  var info = (0, _infoBox2['default'])({\n\t    bottom: -TOP_INNER_RADIUS,\n\t    top: -TOP_INNER_RADIUS - ARC_WIDTH * lengths.income,\n\t    width: INFO_WIDTH,\n\t    lineHeight: ARC_WIDTH,\n\t    borderColor: '#522977',\n\t    dotFill: function dotFill(d, i) {\n\t      return dotColor(i);\n\t    },\n\t    values: function values(d) {\n\t      return d[\"income\"];\n\t    }\n\t  });\n\t\n\t  var outputOptions = {\n\t    top: lengths.income * ARC_WIDTH + TOP_INNER_RADIUS + BOTTOM_INNER_RADIUS * 2,\n\t    left: -OFFSET_BOTTOM,\n\t    lineHeight: ARC_WIDTH_BOTTOM,\n\t    values: function values(d) {\n\t      return d[\"outgoing\"];\n\t    },\n\t    // arrowFill: (d,i) => bgColor((lengths.outgoing-i-1)/(lengths.outgoing-1)),\n\t    arrowFill: function arrowFill(d, i) {\n\t      return \"#CBEDE6\";\n\t    }\n\t  };\n\t\n\t  var output = outputInfo(outputOptions);\n\t  var arrows = arrowHeads(outputOptions);\n\t\n\t  var join = joinBox({\n\t    value: function value(d) {\n\t      return _d32['default'].sum(data.income, function (dd) {\n\t        return dd.value;\n\t      });\n\t    },\n\t    // top: TOP_INNER_RADIUS - ARC_WIDTH,\n\t    // height: ARC_WIDTH * (lengths.income+1.5),\n\t    top: TOP_INNER_RADIUS,\n\t    height: ARC_WIDTH * lengths.income\n\t  });\n\t\n\t  var reinvestmentDots = (0, _startDots2['default'])({\n\t    // dotFill: (d,i) => dotColor(i),\n\t    dotFill: function dotFill(d, i) {\n\t      return \"#BCE1DA\";\n\t    },\n\t    top: TOP_INNER_RADIUS,\n\t    lineHeight: ARC_WIDTH,\n\t    left: -20\n\t  });\n\t\n\t  var outgoingDots = (0, _startDots2['default'])({\n\t    // dotFill: (d,i) => dotColor(i),\n\t    dotFill: function dotFill(d, i) {\n\t      return \"#BCE1DA\";\n\t    },\n\t    bottom: TOP_INNER_RADIUS + ARC_WIDTH * lengths.income,\n\t    lineHeight: ARC_WIDTH_BOTTOM,\n\t    left: -20\n\t  });\n\t\n\t  var svg = _d32['default'].select('#moneyflow').append('svg');\n\t  var container = svg.attr('width', WIDTH).attr('height', HEIGHT).append('g').attr('transform', 'translate(400, 430) scale(0.001)');\n\t\n\t  container.transition().duration(1500).ease('quad').attr('transform', 'translate(400, 430) scale(1)');\n\t\n\t  regionSelect(svg, _underscore2['default'].sortBy(_underscore2['default'].keys(regionalData), _underscore2['default'].identity), function (region) {\n\t    data = region === NATIONALLY ? nationalData : regionalData[region];\n\t    update();\n\t  });\n\t\n\t  var format = _d32['default'].format(\",.2r\");\n\t\n\t  var updateIncomeBubble = bubble(container, [350, -240], \"#522977\", \"Income\");\n\t\n\t  var updateSpendingBubble = bubble(container, [-250, 210], \"#8ACAC0\", \"Spending\");\n\t\n\t  var containers = _underscore2['default'].object([\"income\", \"outgoing\", \"reinvest\", \"info\", \"output\", \"arrows\", \"join\", \"redots\", \"outdots\"].map(function (n) {\n\t    return [n, container.append('g')];\n\t  }));\n\t\n\t  function highlight(d) {\n\t    if (d === highlighted) d = null;\n\t    highlighted = d;\n\t    if (highlighted == null) {\n\t      // We might be setting another highlight almost right away so\n\t      // lets not be hasty with the transitions\n\t      setTimeout(update);\n\t    } else {\n\t      update();\n\t    }\n\t  }\n\t\n\t  function update() {\n\t    containers.income.datum(data).call(incomeArcs);\n\t    containers.outgoing.datum(data).call(outgoingArcs);\n\t    containers.reinvest.datum(data).call(reinvestArcs);\n\t    containers.info.datum(data).call(info, highlighted && highlighted.type !== 'outgoing' ? highlighted : null);\n\t    containers.output.datum(data).call(output, highlighted && highlighted.type === 'outgoing' ? highlighted : null);\n\t    containers.arrows.datum(data).call(arrows);\n\t    containers.join.datum(data).call(join);\n\t    containers.redots.data([data.reinvest]).call(reinvestmentDots);\n\t    containers.outdots.data([data.outgoing]).call(outgoingDots);\n\t\n\t    updateIncomeBubble(_d32['default'].sum(data.income, function (dd) {\n\t      return dd.value;\n\t    }));\n\t    updateSpendingBubble(_d32['default'].sum(data.outgoing, function (dd) {\n\t      return dd.value;\n\t    }) + _d32['default'].sum(data.reinvest, function (dd) {\n\t      return dd.value;\n\t    }));\n\t  }\n\t\n\t  update();\n\t}\n\t\n\tfunction prepNational(data, config) {\n\t  data.reverse();\n\t  data = _underscore2['default'].groupBy(data, 'Type');\n\t  data = _underscore2['default'].mapObject(data, function (lines, type) {\n\t    if (type === \"outgoing\") {\n\t      lines.reverse();\n\t    }\n\t    return _underscore2['default'].map(_underscore2['default'].groupBy(lines, 'Source'), function (sourceLines, source) {\n\t      return {\n\t        label: source,\n\t        value: _d32['default'].sum(sourceLines, function (d) {\n\t          return parseFloat(d[\"Total\"]);\n\t        }) / 1000,\n\t        type: type,\n\t        icon: config.iconsRoot + source.toLowerCase().replace(/ /, '-') + '.svg',\n\t        breakdown: sourceLines.map(function (d) {\n\t          return {\n\t            label: d['Sub-Source'],\n\t            value: parseFloat(d[\"Total\"]) / 1000\n\t          };\n\t        })\n\t      };\n\t    });\n\t  });\n\t\n\t  _underscore2['default'].map(data, function (list) {\n\t    return list.forEach(function (d, i) {\n\t      d.ring = i;\n\t    });\n\t  });\n\t  return data;\n\t}\n\t\n\tfunction prepRegional(data, config) {\n\t  data.reverse();\n\t  var regions = _underscore2['default'].without(_underscore2['default'].keys(data[0]), \"Type\", \"Source\");\n\t  return _underscore2['default'].object(regions.map(function (r) {\n\t    var regionData = _underscore2['default'].mapObject(_underscore2['default'].groupBy(data, 'Type'), function (lines, type) {\n\t      if (type === \"outgoing\") {\n\t        lines.reverse();\n\t      }\n\t      return lines.map(function (line) {\n\t        return {\n\t          label: line[\"Source\"],\n\t          value: parseFloat(line[r]) / 1000,\n\t          icon: config.iconsRoot + line[\"Source\"].toLowerCase().replace(/ /, '-') + '.svg',\n\t          type: type,\n\t          breakdown: []\n\t        };\n\t      });\n\t    });\n\t\n\t    _underscore2['default'].map(regionData, function (list) {\n\t      return list.forEach(function (d, i) {\n\t        d.ring = i;\n\t      });\n\t    });\n\t    return [r, regionData];\n\t  }));\n\t}\n\t\n\tfunction moneyflow(config) {\n\t  _underscore2['default'].defaults(config, {\n\t    dataRoot: '',\n\t    iconsRoot: ''\n\t  });\n\t  var national = undefined,\n\t      regional = undefined;\n\t  var done = _underscore2['default'].after(2, function () {\n\t    return init(prepNational(national, config), prepRegional(regional, config));\n\t  });\n\t  _d32['default'].csv(config.dataRoot + \"national.csv\", function (d) {\n\t    national = d;\n\t    done();\n\t  });\n\t\n\t  _d32['default'].csv(config.dataRoot + \"regions.csv\", function (d) {\n\t    regional = d;\n\t    done();\n\t  });\n\t}\n\t\n\twindow.moneyflow = moneyflow;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.17\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.transpose = function(matrix) {\n\t    if (!(n = matrix.length)) return [];\n\t    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n\t        row[j] = matrix[j][i];\n\t      }\n\t    }\n\t    return transpose;\n\t  };\n\t  function d3_transposeLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.zip = function() {\n\t    return d3.transpose(arguments);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: d3_nsXhtml,\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (node = group[i]) {\n\t            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n\t              exitNodes[i] = node;\n\t            } else {\n\t              nodeByKeyValue.set(keyValue, node);\n\t            }\n\t            keyValues[i] = keyValue;\n\t          }\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = d3_array(nodes);\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n\t    if (d2 < ε2) {\n\t      S = Math.log(w1 / w0) / ρ;\n\t      i = function(t) {\n\t        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n\t      };\n\t    } else {\n\t      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t      S = (r1 - r0) / ρ;\n\t      i = function(t) {\n\t        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      };\n\t    }\n\t    i.duration = S * 1e3;\n\t    return i;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: null\n\t      };\n\t      scaleTo(+_);\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      }), center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function() {\n\t    d3_timer.apply(this, arguments);\n\t  };\n\t  function d3_timer(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t    return timer;\n\t  }\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now(), timer = d3_timer_queueHead;\n\t    while (timer) {\n\t      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n\t      timer = timer.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.c) {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      } else {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value = +value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n\t          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransformPop(s) {\n\t    return s.length ? s.pop() + \",\" : \"\";\n\t  }\n\t  function d3_interpolateTranslate(ta, tb, s, q) {\n\t    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n\t      var i = s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateRotate(ra, rb, s, q) {\n\t    if (ra !== rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateSkew(wa, wb, s, q) {\n\t    if (wa !== wb) {\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateScale(ka, kb, s, q) {\n\t    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n\t      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] !== 1 || kb[1] !== 1) {\n\t      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [];\n\t    a = d3.transform(a), b = d3.transform(b);\n\t    d3_interpolateTranslate(a.translate, b.translate, s, q);\n\t    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n\t    d3_interpolateSkew(a.skew, b.skew, s, q);\n\t    d3_interpolateScale(a.scale, b.scale, s, q);\n\t    a = b = null;\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: groupSums[di]\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        timer = null;\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) {\n\t          alpha = x;\n\t        } else {\n\t          timer.c = null, timer.t = NaN, timer = null;\n\t          event.end({\n\t            type: \"end\",\n\t            alpha: alpha = 0\n\t          });\n\t        }\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        timer = d3_timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = root.y = 0;\n\t      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    return domain;\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(1, base * n / scale.ticks().length);\n\t      return function(d) {\n\t        var i = d / pow(Math.round(log(d)));\n\t        if (i * base < base - .5) i *= base;\n\t        return i <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var rc1 = rc, rc0 = rc;\n\t        if (da < π) {\n\t          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t        if (x1 != null) {\n\t          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return points.join(\"L\") + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, activeId, active;\n\t      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        if (--lock.count) delete lock[activeId]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id], time, timer, duration, ease, tweens;\n\t    function schedule(elapsed) {\n\t      var delay = transition.delay;\n\t      timer.t = delay + time;\n\t      if (delay <= elapsed) return start(elapsed - delay);\n\t      timer.c = start;\n\t    }\n\t    function start(elapsed) {\n\t      var activeId = lock.active, active = lock[activeId];\n\t      if (active) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        --lock.count;\n\t        delete lock[activeId];\n\t        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t      }\n\t      for (var cancelId in lock) {\n\t        if (+cancelId < id) {\n\t          var cancel = lock[cancelId];\n\t          cancel.timer.c = null;\n\t          cancel.timer.t = NaN;\n\t          --lock.count;\n\t          delete lock[cancelId];\n\t        }\n\t      }\n\t      timer.c = tick;\n\t      d3_timer(function() {\n\t        if (timer.c && tick(elapsed || 1)) {\n\t          timer.c = null;\n\t          timer.t = NaN;\n\t        }\n\t        return 1;\n\t      }, 0, time);\n\t      lock.active = id;\n\t      transition.event && transition.event.start.call(node, node.__data__, i);\n\t      tweens = [];\n\t      transition.tween.forEach(function(key, value) {\n\t        if (value = value.call(node, node.__data__, i)) {\n\t          tweens.push(value);\n\t        }\n\t      });\n\t      ease = transition.ease;\n\t      duration = transition.duration;\n\t    }\n\t    function tick(elapsed) {\n\t      var t = elapsed / duration, e = ease(t), n = tweens.length;\n\t      while (n > 0) {\n\t        tweens[--n].call(node, e);\n\t      }\n\t      if (t >= 1) {\n\t        transition.event && transition.event.end.call(node, node.__data__, i);\n\t        if (--lock.count) delete lock[id]; else delete node[ns];\n\t        return 1;\n\t      }\n\t    }\n\t    if (!transition) {\n\t      time = inherit.time;\n\t      timer = d3_timer(schedule, 0, time);\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        timer: timer,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = d3_array(arguments);\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n\t}();\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//     Underscore.js 1.8.3\n\t//     http://underscorejs.org\n\t//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t//     Underscore may be freely distributed under the MIT license.\n\t\n\t(function() {\n\t\n\t  // Baseline setup\n\t  // --------------\n\t\n\t  // Establish the root object, `window` in the browser, or `exports` on the server.\n\t  var root = this;\n\t\n\t  // Save the previous value of the `_` variable.\n\t  var previousUnderscore = root._;\n\t\n\t  // Save bytes in the minified (but not gzipped) version:\n\t  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\t\n\t  // Create quick reference variables for speed access to core prototypes.\n\t  var\n\t    push             = ArrayProto.push,\n\t    slice            = ArrayProto.slice,\n\t    toString         = ObjProto.toString,\n\t    hasOwnProperty   = ObjProto.hasOwnProperty;\n\t\n\t  // All **ECMAScript 5** native function implementations that we hope to use\n\t  // are declared here.\n\t  var\n\t    nativeIsArray      = Array.isArray,\n\t    nativeKeys         = Object.keys,\n\t    nativeBind         = FuncProto.bind,\n\t    nativeCreate       = Object.create;\n\t\n\t  // Naked function reference for surrogate-prototype-swapping.\n\t  var Ctor = function(){};\n\t\n\t  // Create a safe reference to the Underscore object for use below.\n\t  var _ = function(obj) {\n\t    if (obj instanceof _) return obj;\n\t    if (!(this instanceof _)) return new _(obj);\n\t    this._wrapped = obj;\n\t  };\n\t\n\t  // Export the Underscore object for **Node.js**, with\n\t  // backwards-compatibility for the old `require()` API. If we're in\n\t  // the browser, add `_` as a global object.\n\t  if (true) {\n\t    if (typeof module !== 'undefined' && module.exports) {\n\t      exports = module.exports = _;\n\t    }\n\t    exports._ = _;\n\t  } else {\n\t    root._ = _;\n\t  }\n\t\n\t  // Current version.\n\t  _.VERSION = '1.8.3';\n\t\n\t  // Internal function that returns an efficient (for current engines) version\n\t  // of the passed-in callback, to be repeatedly applied in other Underscore\n\t  // functions.\n\t  var optimizeCb = function(func, context, argCount) {\n\t    if (context === void 0) return func;\n\t    switch (argCount == null ? 3 : argCount) {\n\t      case 1: return function(value) {\n\t        return func.call(context, value);\n\t      };\n\t      case 2: return function(value, other) {\n\t        return func.call(context, value, other);\n\t      };\n\t      case 3: return function(value, index, collection) {\n\t        return func.call(context, value, index, collection);\n\t      };\n\t      case 4: return function(accumulator, value, index, collection) {\n\t        return func.call(context, accumulator, value, index, collection);\n\t      };\n\t    }\n\t    return function() {\n\t      return func.apply(context, arguments);\n\t    };\n\t  };\n\t\n\t  // A mostly-internal function to generate callbacks that can be applied\n\t  // to each element in a collection, returning the desired result — either\n\t  // identity, an arbitrary callback, a property matcher, or a property accessor.\n\t  var cb = function(value, context, argCount) {\n\t    if (value == null) return _.identity;\n\t    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n\t    if (_.isObject(value)) return _.matcher(value);\n\t    return _.property(value);\n\t  };\n\t  _.iteratee = function(value, context) {\n\t    return cb(value, context, Infinity);\n\t  };\n\t\n\t  // An internal function for creating assigner functions.\n\t  var createAssigner = function(keysFunc, undefinedOnly) {\n\t    return function(obj) {\n\t      var length = arguments.length;\n\t      if (length < 2 || obj == null) return obj;\n\t      for (var index = 1; index < length; index++) {\n\t        var source = arguments[index],\n\t            keys = keysFunc(source),\n\t            l = keys.length;\n\t        for (var i = 0; i < l; i++) {\n\t          var key = keys[i];\n\t          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n\t        }\n\t      }\n\t      return obj;\n\t    };\n\t  };\n\t\n\t  // An internal function for creating a new object that inherits from another.\n\t  var baseCreate = function(prototype) {\n\t    if (!_.isObject(prototype)) return {};\n\t    if (nativeCreate) return nativeCreate(prototype);\n\t    Ctor.prototype = prototype;\n\t    var result = new Ctor;\n\t    Ctor.prototype = null;\n\t    return result;\n\t  };\n\t\n\t  var property = function(key) {\n\t    return function(obj) {\n\t      return obj == null ? void 0 : obj[key];\n\t    };\n\t  };\n\t\n\t  // Helper for collection methods to determine whether a collection\n\t  // should be iterated as an array or as an object\n\t  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n\t  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n\t  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n\t  var getLength = property('length');\n\t  var isArrayLike = function(collection) {\n\t    var length = getLength(collection);\n\t    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n\t  };\n\t\n\t  // Collection Functions\n\t  // --------------------\n\t\n\t  // The cornerstone, an `each` implementation, aka `forEach`.\n\t  // Handles raw objects in addition to array-likes. Treats all\n\t  // sparse array-likes as if they were dense.\n\t  _.each = _.forEach = function(obj, iteratee, context) {\n\t    iteratee = optimizeCb(iteratee, context);\n\t    var i, length;\n\t    if (isArrayLike(obj)) {\n\t      for (i = 0, length = obj.length; i < length; i++) {\n\t        iteratee(obj[i], i, obj);\n\t      }\n\t    } else {\n\t      var keys = _.keys(obj);\n\t      for (i = 0, length = keys.length; i < length; i++) {\n\t        iteratee(obj[keys[i]], keys[i], obj);\n\t      }\n\t    }\n\t    return obj;\n\t  };\n\t\n\t  // Return the results of applying the iteratee to each element.\n\t  _.map = _.collect = function(obj, iteratee, context) {\n\t    iteratee = cb(iteratee, context);\n\t    var keys = !isArrayLike(obj) && _.keys(obj),\n\t        length = (keys || obj).length,\n\t        results = Array(length);\n\t    for (var index = 0; index < length; index++) {\n\t      var currentKey = keys ? keys[index] : index;\n\t      results[index] = iteratee(obj[currentKey], currentKey, obj);\n\t    }\n\t    return results;\n\t  };\n\t\n\t  // Create a reducing function iterating left or right.\n\t  function createReduce(dir) {\n\t    // Optimized iterator function as using arguments.length\n\t    // in the main function will deoptimize the, see #1991.\n\t    function iterator(obj, iteratee, memo, keys, index, length) {\n\t      for (; index >= 0 && index < length; index += dir) {\n\t        var currentKey = keys ? keys[index] : index;\n\t        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n\t      }\n\t      return memo;\n\t    }\n\t\n\t    return function(obj, iteratee, memo, context) {\n\t      iteratee = optimizeCb(iteratee, context, 4);\n\t      var keys = !isArrayLike(obj) && _.keys(obj),\n\t          length = (keys || obj).length,\n\t          index = dir > 0 ? 0 : length - 1;\n\t      // Determine the initial value if none is provided.\n\t      if (arguments.length < 3) {\n\t        memo = obj[keys ? keys[index] : index];\n\t        index += dir;\n\t      }\n\t      return iterator(obj, iteratee, memo, keys, index, length);\n\t    };\n\t  }\n\t\n\t  // **Reduce** builds up a single result from a list of values, aka `inject`,\n\t  // or `foldl`.\n\t  _.reduce = _.foldl = _.inject = createReduce(1);\n\t\n\t  // The right-associative version of reduce, also known as `foldr`.\n\t  _.reduceRight = _.foldr = createReduce(-1);\n\t\n\t  // Return the first value which passes a truth test. Aliased as `detect`.\n\t  _.find = _.detect = function(obj, predicate, context) {\n\t    var key;\n\t    if (isArrayLike(obj)) {\n\t      key = _.findIndex(obj, predicate, context);\n\t    } else {\n\t      key = _.findKey(obj, predicate, context);\n\t    }\n\t    if (key !== void 0 && key !== -1) return obj[key];\n\t  };\n\t\n\t  // Return all the elements that pass a truth test.\n\t  // Aliased as `select`.\n\t  _.filter = _.select = function(obj, predicate, context) {\n\t    var results = [];\n\t    predicate = cb(predicate, context);\n\t    _.each(obj, function(value, index, list) {\n\t      if (predicate(value, index, list)) results.push(value);\n\t    });\n\t    return results;\n\t  };\n\t\n\t  // Return all the elements for which a truth test fails.\n\t  _.reject = function(obj, predicate, context) {\n\t    return _.filter(obj, _.negate(cb(predicate)), context);\n\t  };\n\t\n\t  // Determine whether all of the elements match a truth test.\n\t  // Aliased as `all`.\n\t  _.every = _.all = function(obj, predicate, context) {\n\t    predicate = cb(predicate, context);\n\t    var keys = !isArrayLike(obj) && _.keys(obj),\n\t        length = (keys || obj).length;\n\t    for (var index = 0; index < length; index++) {\n\t      var currentKey = keys ? keys[index] : index;\n\t      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n\t    }\n\t    return true;\n\t  };\n\t\n\t  // Determine if at least one element in the object matches a truth test.\n\t  // Aliased as `any`.\n\t  _.some = _.any = function(obj, predicate, context) {\n\t    predicate = cb(predicate, context);\n\t    var keys = !isArrayLike(obj) && _.keys(obj),\n\t        length = (keys || obj).length;\n\t    for (var index = 0; index < length; index++) {\n\t      var currentKey = keys ? keys[index] : index;\n\t      if (predicate(obj[currentKey], currentKey, obj)) return true;\n\t    }\n\t    return false;\n\t  };\n\t\n\t  // Determine if the array or object contains a given item (using `===`).\n\t  // Aliased as `includes` and `include`.\n\t  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n\t    if (!isArrayLike(obj)) obj = _.values(obj);\n\t    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n\t    return _.indexOf(obj, item, fromIndex) >= 0;\n\t  };\n\t\n\t  // Invoke a method (with arguments) on every item in a collection.\n\t  _.invoke = function(obj, method) {\n\t    var args = slice.call(arguments, 2);\n\t    var isFunc = _.isFunction(method);\n\t    return _.map(obj, function(value) {\n\t      var func = isFunc ? method : value[method];\n\t      return func == null ? func : func.apply(value, args);\n\t    });\n\t  };\n\t\n\t  // Convenience version of a common use case of `map`: fetching a property.\n\t  _.pluck = function(obj, key) {\n\t    return _.map(obj, _.property(key));\n\t  };\n\t\n\t  // Convenience version of a common use case of `filter`: selecting only objects\n\t  // containing specific `key:value` pairs.\n\t  _.where = function(obj, attrs) {\n\t    return _.filter(obj, _.matcher(attrs));\n\t  };\n\t\n\t  // Convenience version of a common use case of `find`: getting the first object\n\t  // containing specific `key:value` pairs.\n\t  _.findWhere = function(obj, attrs) {\n\t    return _.find(obj, _.matcher(attrs));\n\t  };\n\t\n\t  // Return the maximum element (or element-based computation).\n\t  _.max = function(obj, iteratee, context) {\n\t    var result = -Infinity, lastComputed = -Infinity,\n\t        value, computed;\n\t    if (iteratee == null && obj != null) {\n\t      obj = isArrayLike(obj) ? obj : _.values(obj);\n\t      for (var i = 0, length = obj.length; i < length; i++) {\n\t        value = obj[i];\n\t        if (value > result) {\n\t          result = value;\n\t        }\n\t      }\n\t    } else {\n\t      iteratee = cb(iteratee, context);\n\t      _.each(obj, function(value, index, list) {\n\t        computed = iteratee(value, index, list);\n\t        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n\t          result = value;\n\t          lastComputed = computed;\n\t        }\n\t      });\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Return the minimum element (or element-based computation).\n\t  _.min = function(obj, iteratee, context) {\n\t    var result = Infinity, lastComputed = Infinity,\n\t        value, computed;\n\t    if (iteratee == null && obj != null) {\n\t      obj = isArrayLike(obj) ? obj : _.values(obj);\n\t      for (var i = 0, length = obj.length; i < length; i++) {\n\t        value = obj[i];\n\t        if (value < result) {\n\t          result = value;\n\t        }\n\t      }\n\t    } else {\n\t      iteratee = cb(iteratee, context);\n\t      _.each(obj, function(value, index, list) {\n\t        computed = iteratee(value, index, list);\n\t        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n\t          result = value;\n\t          lastComputed = computed;\n\t        }\n\t      });\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Shuffle a collection, using the modern version of the\n\t  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n\t  _.shuffle = function(obj) {\n\t    var set = isArrayLike(obj) ? obj : _.values(obj);\n\t    var length = set.length;\n\t    var shuffled = Array(length);\n\t    for (var index = 0, rand; index < length; index++) {\n\t      rand = _.random(0, index);\n\t      if (rand !== index) shuffled[index] = shuffled[rand];\n\t      shuffled[rand] = set[index];\n\t    }\n\t    return shuffled;\n\t  };\n\t\n\t  // Sample **n** random values from a collection.\n\t  // If **n** is not specified, returns a single random element.\n\t  // The internal `guard` argument allows it to work with `map`.\n\t  _.sample = function(obj, n, guard) {\n\t    if (n == null || guard) {\n\t      if (!isArrayLike(obj)) obj = _.values(obj);\n\t      return obj[_.random(obj.length - 1)];\n\t    }\n\t    return _.shuffle(obj).slice(0, Math.max(0, n));\n\t  };\n\t\n\t  // Sort the object's values by a criterion produced by an iteratee.\n\t  _.sortBy = function(obj, iteratee, context) {\n\t    iteratee = cb(iteratee, context);\n\t    return _.pluck(_.map(obj, function(value, index, list) {\n\t      return {\n\t        value: value,\n\t        index: index,\n\t        criteria: iteratee(value, index, list)\n\t      };\n\t    }).sort(function(left, right) {\n\t      var a = left.criteria;\n\t      var b = right.criteria;\n\t      if (a !== b) {\n\t        if (a > b || a === void 0) return 1;\n\t        if (a < b || b === void 0) return -1;\n\t      }\n\t      return left.index - right.index;\n\t    }), 'value');\n\t  };\n\t\n\t  // An internal function used for aggregate \"group by\" operations.\n\t  var group = function(behavior) {\n\t    return function(obj, iteratee, context) {\n\t      var result = {};\n\t      iteratee = cb(iteratee, context);\n\t      _.each(obj, function(value, index) {\n\t        var key = iteratee(value, index, obj);\n\t        behavior(result, value, key);\n\t      });\n\t      return result;\n\t    };\n\t  };\n\t\n\t  // Groups the object's values by a criterion. Pass either a string attribute\n\t  // to group by, or a function that returns the criterion.\n\t  _.groupBy = group(function(result, value, key) {\n\t    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n\t  });\n\t\n\t  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n\t  // when you know that your index values will be unique.\n\t  _.indexBy = group(function(result, value, key) {\n\t    result[key] = value;\n\t  });\n\t\n\t  // Counts instances of an object that group by a certain criterion. Pass\n\t  // either a string attribute to count by, or a function that returns the\n\t  // criterion.\n\t  _.countBy = group(function(result, value, key) {\n\t    if (_.has(result, key)) result[key]++; else result[key] = 1;\n\t  });\n\t\n\t  // Safely create a real, live array from anything iterable.\n\t  _.toArray = function(obj) {\n\t    if (!obj) return [];\n\t    if (_.isArray(obj)) return slice.call(obj);\n\t    if (isArrayLike(obj)) return _.map(obj, _.identity);\n\t    return _.values(obj);\n\t  };\n\t\n\t  // Return the number of elements in an object.\n\t  _.size = function(obj) {\n\t    if (obj == null) return 0;\n\t    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n\t  };\n\t\n\t  // Split a collection into two arrays: one whose elements all satisfy the given\n\t  // predicate, and one whose elements all do not satisfy the predicate.\n\t  _.partition = function(obj, predicate, context) {\n\t    predicate = cb(predicate, context);\n\t    var pass = [], fail = [];\n\t    _.each(obj, function(value, key, obj) {\n\t      (predicate(value, key, obj) ? pass : fail).push(value);\n\t    });\n\t    return [pass, fail];\n\t  };\n\t\n\t  // Array Functions\n\t  // ---------------\n\t\n\t  // Get the first element of an array. Passing **n** will return the first N\n\t  // values in the array. Aliased as `head` and `take`. The **guard** check\n\t  // allows it to work with `_.map`.\n\t  _.first = _.head = _.take = function(array, n, guard) {\n\t    if (array == null) return void 0;\n\t    if (n == null || guard) return array[0];\n\t    return _.initial(array, array.length - n);\n\t  };\n\t\n\t  // Returns everything but the last entry of the array. Especially useful on\n\t  // the arguments object. Passing **n** will return all the values in\n\t  // the array, excluding the last N.\n\t  _.initial = function(array, n, guard) {\n\t    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n\t  };\n\t\n\t  // Get the last element of an array. Passing **n** will return the last N\n\t  // values in the array.\n\t  _.last = function(array, n, guard) {\n\t    if (array == null) return void 0;\n\t    if (n == null || guard) return array[array.length - 1];\n\t    return _.rest(array, Math.max(0, array.length - n));\n\t  };\n\t\n\t  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n\t  // Especially useful on the arguments object. Passing an **n** will return\n\t  // the rest N values in the array.\n\t  _.rest = _.tail = _.drop = function(array, n, guard) {\n\t    return slice.call(array, n == null || guard ? 1 : n);\n\t  };\n\t\n\t  // Trim out all falsy values from an array.\n\t  _.compact = function(array) {\n\t    return _.filter(array, _.identity);\n\t  };\n\t\n\t  // Internal implementation of a recursive `flatten` function.\n\t  var flatten = function(input, shallow, strict, startIndex) {\n\t    var output = [], idx = 0;\n\t    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n\t      var value = input[i];\n\t      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n\t        //flatten current level of array or arguments object\n\t        if (!shallow) value = flatten(value, shallow, strict);\n\t        var j = 0, len = value.length;\n\t        output.length += len;\n\t        while (j < len) {\n\t          output[idx++] = value[j++];\n\t        }\n\t      } else if (!strict) {\n\t        output[idx++] = value;\n\t      }\n\t    }\n\t    return output;\n\t  };\n\t\n\t  // Flatten out an array, either recursively (by default), or just one level.\n\t  _.flatten = function(array, shallow) {\n\t    return flatten(array, shallow, false);\n\t  };\n\t\n\t  // Return a version of the array that does not contain the specified value(s).\n\t  _.without = function(array) {\n\t    return _.difference(array, slice.call(arguments, 1));\n\t  };\n\t\n\t  // Produce a duplicate-free version of the array. If the array has already\n\t  // been sorted, you have the option of using a faster algorithm.\n\t  // Aliased as `unique`.\n\t  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n\t    if (!_.isBoolean(isSorted)) {\n\t      context = iteratee;\n\t      iteratee = isSorted;\n\t      isSorted = false;\n\t    }\n\t    if (iteratee != null) iteratee = cb(iteratee, context);\n\t    var result = [];\n\t    var seen = [];\n\t    for (var i = 0, length = getLength(array); i < length; i++) {\n\t      var value = array[i],\n\t          computed = iteratee ? iteratee(value, i, array) : value;\n\t      if (isSorted) {\n\t        if (!i || seen !== computed) result.push(value);\n\t        seen = computed;\n\t      } else if (iteratee) {\n\t        if (!_.contains(seen, computed)) {\n\t          seen.push(computed);\n\t          result.push(value);\n\t        }\n\t      } else if (!_.contains(result, value)) {\n\t        result.push(value);\n\t      }\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Produce an array that contains the union: each distinct element from all of\n\t  // the passed-in arrays.\n\t  _.union = function() {\n\t    return _.uniq(flatten(arguments, true, true));\n\t  };\n\t\n\t  // Produce an array that contains every item shared between all the\n\t  // passed-in arrays.\n\t  _.intersection = function(array) {\n\t    var result = [];\n\t    var argsLength = arguments.length;\n\t    for (var i = 0, length = getLength(array); i < length; i++) {\n\t      var item = array[i];\n\t      if (_.contains(result, item)) continue;\n\t      for (var j = 1; j < argsLength; j++) {\n\t        if (!_.contains(arguments[j], item)) break;\n\t      }\n\t      if (j === argsLength) result.push(item);\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Take the difference between one array and a number of other arrays.\n\t  // Only the elements present in just the first array will remain.\n\t  _.difference = function(array) {\n\t    var rest = flatten(arguments, true, true, 1);\n\t    return _.filter(array, function(value){\n\t      return !_.contains(rest, value);\n\t    });\n\t  };\n\t\n\t  // Zip together multiple lists into a single array -- elements that share\n\t  // an index go together.\n\t  _.zip = function() {\n\t    return _.unzip(arguments);\n\t  };\n\t\n\t  // Complement of _.zip. Unzip accepts an array of arrays and groups\n\t  // each array's elements on shared indices\n\t  _.unzip = function(array) {\n\t    var length = array && _.max(array, getLength).length || 0;\n\t    var result = Array(length);\n\t\n\t    for (var index = 0; index < length; index++) {\n\t      result[index] = _.pluck(array, index);\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Converts lists into objects. Pass either a single array of `[key, value]`\n\t  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n\t  // the corresponding values.\n\t  _.object = function(list, values) {\n\t    var result = {};\n\t    for (var i = 0, length = getLength(list); i < length; i++) {\n\t      if (values) {\n\t        result[list[i]] = values[i];\n\t      } else {\n\t        result[list[i][0]] = list[i][1];\n\t      }\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Generator function to create the findIndex and findLastIndex functions\n\t  function createPredicateIndexFinder(dir) {\n\t    return function(array, predicate, context) {\n\t      predicate = cb(predicate, context);\n\t      var length = getLength(array);\n\t      var index = dir > 0 ? 0 : length - 1;\n\t      for (; index >= 0 && index < length; index += dir) {\n\t        if (predicate(array[index], index, array)) return index;\n\t      }\n\t      return -1;\n\t    };\n\t  }\n\t\n\t  // Returns the first index on an array-like that passes a predicate test\n\t  _.findIndex = createPredicateIndexFinder(1);\n\t  _.findLastIndex = createPredicateIndexFinder(-1);\n\t\n\t  // Use a comparator function to figure out the smallest index at which\n\t  // an object should be inserted so as to maintain order. Uses binary search.\n\t  _.sortedIndex = function(array, obj, iteratee, context) {\n\t    iteratee = cb(iteratee, context, 1);\n\t    var value = iteratee(obj);\n\t    var low = 0, high = getLength(array);\n\t    while (low < high) {\n\t      var mid = Math.floor((low + high) / 2);\n\t      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n\t    }\n\t    return low;\n\t  };\n\t\n\t  // Generator function to create the indexOf and lastIndexOf functions\n\t  function createIndexFinder(dir, predicateFind, sortedIndex) {\n\t    return function(array, item, idx) {\n\t      var i = 0, length = getLength(array);\n\t      if (typeof idx == 'number') {\n\t        if (dir > 0) {\n\t            i = idx >= 0 ? idx : Math.max(idx + length, i);\n\t        } else {\n\t            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n\t        }\n\t      } else if (sortedIndex && idx && length) {\n\t        idx = sortedIndex(array, item);\n\t        return array[idx] === item ? idx : -1;\n\t      }\n\t      if (item !== item) {\n\t        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n\t        return idx >= 0 ? idx + i : -1;\n\t      }\n\t      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n\t        if (array[idx] === item) return idx;\n\t      }\n\t      return -1;\n\t    };\n\t  }\n\t\n\t  // Return the position of the first occurrence of an item in an array,\n\t  // or -1 if the item is not included in the array.\n\t  // If the array is large and already in sort order, pass `true`\n\t  // for **isSorted** to use binary search.\n\t  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n\t  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\t\n\t  // Generate an integer Array containing an arithmetic progression. A port of\n\t  // the native Python `range()` function. See\n\t  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n\t  _.range = function(start, stop, step) {\n\t    if (stop == null) {\n\t      stop = start || 0;\n\t      start = 0;\n\t    }\n\t    step = step || 1;\n\t\n\t    var length = Math.max(Math.ceil((stop - start) / step), 0);\n\t    var range = Array(length);\n\t\n\t    for (var idx = 0; idx < length; idx++, start += step) {\n\t      range[idx] = start;\n\t    }\n\t\n\t    return range;\n\t  };\n\t\n\t  // Function (ahem) Functions\n\t  // ------------------\n\t\n\t  // Determines whether to execute a function as a constructor\n\t  // or a normal function with the provided arguments\n\t  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n\t    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n\t    var self = baseCreate(sourceFunc.prototype);\n\t    var result = sourceFunc.apply(self, args);\n\t    if (_.isObject(result)) return result;\n\t    return self;\n\t  };\n\t\n\t  // Create a function bound to a given object (assigning `this`, and arguments,\n\t  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n\t  // available.\n\t  _.bind = function(func, context) {\n\t    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n\t    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n\t    var args = slice.call(arguments, 2);\n\t    var bound = function() {\n\t      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n\t    };\n\t    return bound;\n\t  };\n\t\n\t  // Partially apply a function by creating a version that has had some of its\n\t  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n\t  // as a placeholder, allowing any combination of arguments to be pre-filled.\n\t  _.partial = function(func) {\n\t    var boundArgs = slice.call(arguments, 1);\n\t    var bound = function() {\n\t      var position = 0, length = boundArgs.length;\n\t      var args = Array(length);\n\t      for (var i = 0; i < length; i++) {\n\t        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n\t      }\n\t      while (position < arguments.length) args.push(arguments[position++]);\n\t      return executeBound(func, bound, this, this, args);\n\t    };\n\t    return bound;\n\t  };\n\t\n\t  // Bind a number of an object's methods to that object. Remaining arguments\n\t  // are the method names to be bound. Useful for ensuring that all callbacks\n\t  // defined on an object belong to it.\n\t  _.bindAll = function(obj) {\n\t    var i, length = arguments.length, key;\n\t    if (length <= 1) throw new Error('bindAll must be passed function names');\n\t    for (i = 1; i < length; i++) {\n\t      key = arguments[i];\n\t      obj[key] = _.bind(obj[key], obj);\n\t    }\n\t    return obj;\n\t  };\n\t\n\t  // Memoize an expensive function by storing its results.\n\t  _.memoize = function(func, hasher) {\n\t    var memoize = function(key) {\n\t      var cache = memoize.cache;\n\t      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n\t      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n\t      return cache[address];\n\t    };\n\t    memoize.cache = {};\n\t    return memoize;\n\t  };\n\t\n\t  // Delays a function for the given number of milliseconds, and then calls\n\t  // it with the arguments supplied.\n\t  _.delay = function(func, wait) {\n\t    var args = slice.call(arguments, 2);\n\t    return setTimeout(function(){\n\t      return func.apply(null, args);\n\t    }, wait);\n\t  };\n\t\n\t  // Defers a function, scheduling it to run after the current call stack has\n\t  // cleared.\n\t  _.defer = _.partial(_.delay, _, 1);\n\t\n\t  // Returns a function, that, when invoked, will only be triggered at most once\n\t  // during a given window of time. Normally, the throttled function will run\n\t  // as much as it can, without ever going more than once per `wait` duration;\n\t  // but if you'd like to disable the execution on the leading edge, pass\n\t  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n\t  _.throttle = function(func, wait, options) {\n\t    var context, args, result;\n\t    var timeout = null;\n\t    var previous = 0;\n\t    if (!options) options = {};\n\t    var later = function() {\n\t      previous = options.leading === false ? 0 : _.now();\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    };\n\t    return function() {\n\t      var now = _.now();\n\t      if (!previous && options.leading === false) previous = now;\n\t      var remaining = wait - (now - previous);\n\t      context = this;\n\t      args = arguments;\n\t      if (remaining <= 0 || remaining > wait) {\n\t        if (timeout) {\n\t          clearTimeout(timeout);\n\t          timeout = null;\n\t        }\n\t        previous = now;\n\t        result = func.apply(context, args);\n\t        if (!timeout) context = args = null;\n\t      } else if (!timeout && options.trailing !== false) {\n\t        timeout = setTimeout(later, remaining);\n\t      }\n\t      return result;\n\t    };\n\t  };\n\t\n\t  // Returns a function, that, as long as it continues to be invoked, will not\n\t  // be triggered. The function will be called after it stops being called for\n\t  // N milliseconds. If `immediate` is passed, trigger the function on the\n\t  // leading edge, instead of the trailing.\n\t  _.debounce = function(func, wait, immediate) {\n\t    var timeout, args, context, timestamp, result;\n\t\n\t    var later = function() {\n\t      var last = _.now() - timestamp;\n\t\n\t      if (last < wait && last >= 0) {\n\t        timeout = setTimeout(later, wait - last);\n\t      } else {\n\t        timeout = null;\n\t        if (!immediate) {\n\t          result = func.apply(context, args);\n\t          if (!timeout) context = args = null;\n\t        }\n\t      }\n\t    };\n\t\n\t    return function() {\n\t      context = this;\n\t      args = arguments;\n\t      timestamp = _.now();\n\t      var callNow = immediate && !timeout;\n\t      if (!timeout) timeout = setTimeout(later, wait);\n\t      if (callNow) {\n\t        result = func.apply(context, args);\n\t        context = args = null;\n\t      }\n\t\n\t      return result;\n\t    };\n\t  };\n\t\n\t  // Returns the first function passed as an argument to the second,\n\t  // allowing you to adjust arguments, run code before and after, and\n\t  // conditionally execute the original function.\n\t  _.wrap = function(func, wrapper) {\n\t    return _.partial(wrapper, func);\n\t  };\n\t\n\t  // Returns a negated version of the passed-in predicate.\n\t  _.negate = function(predicate) {\n\t    return function() {\n\t      return !predicate.apply(this, arguments);\n\t    };\n\t  };\n\t\n\t  // Returns a function that is the composition of a list of functions, each\n\t  // consuming the return value of the function that follows.\n\t  _.compose = function() {\n\t    var args = arguments;\n\t    var start = args.length - 1;\n\t    return function() {\n\t      var i = start;\n\t      var result = args[start].apply(this, arguments);\n\t      while (i--) result = args[i].call(this, result);\n\t      return result;\n\t    };\n\t  };\n\t\n\t  // Returns a function that will only be executed on and after the Nth call.\n\t  _.after = function(times, func) {\n\t    return function() {\n\t      if (--times < 1) {\n\t        return func.apply(this, arguments);\n\t      }\n\t    };\n\t  };\n\t\n\t  // Returns a function that will only be executed up to (but not including) the Nth call.\n\t  _.before = function(times, func) {\n\t    var memo;\n\t    return function() {\n\t      if (--times > 0) {\n\t        memo = func.apply(this, arguments);\n\t      }\n\t      if (times <= 1) func = null;\n\t      return memo;\n\t    };\n\t  };\n\t\n\t  // Returns a function that will be executed at most one time, no matter how\n\t  // often you call it. Useful for lazy initialization.\n\t  _.once = _.partial(_.before, 2);\n\t\n\t  // Object Functions\n\t  // ----------------\n\t\n\t  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n\t  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n\t  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n\t                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\t\n\t  function collectNonEnumProps(obj, keys) {\n\t    var nonEnumIdx = nonEnumerableProps.length;\n\t    var constructor = obj.constructor;\n\t    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\t\n\t    // Constructor is a special case.\n\t    var prop = 'constructor';\n\t    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\t\n\t    while (nonEnumIdx--) {\n\t      prop = nonEnumerableProps[nonEnumIdx];\n\t      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n\t        keys.push(prop);\n\t      }\n\t    }\n\t  }\n\t\n\t  // Retrieve the names of an object's own properties.\n\t  // Delegates to **ECMAScript 5**'s native `Object.keys`\n\t  _.keys = function(obj) {\n\t    if (!_.isObject(obj)) return [];\n\t    if (nativeKeys) return nativeKeys(obj);\n\t    var keys = [];\n\t    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n\t    // Ahem, IE < 9.\n\t    if (hasEnumBug) collectNonEnumProps(obj, keys);\n\t    return keys;\n\t  };\n\t\n\t  // Retrieve all the property names of an object.\n\t  _.allKeys = function(obj) {\n\t    if (!_.isObject(obj)) return [];\n\t    var keys = [];\n\t    for (var key in obj) keys.push(key);\n\t    // Ahem, IE < 9.\n\t    if (hasEnumBug) collectNonEnumProps(obj, keys);\n\t    return keys;\n\t  };\n\t\n\t  // Retrieve the values of an object's properties.\n\t  _.values = function(obj) {\n\t    var keys = _.keys(obj);\n\t    var length = keys.length;\n\t    var values = Array(length);\n\t    for (var i = 0; i < length; i++) {\n\t      values[i] = obj[keys[i]];\n\t    }\n\t    return values;\n\t  };\n\t\n\t  // Returns the results of applying the iteratee to each element of the object\n\t  // In contrast to _.map it returns an object\n\t  _.mapObject = function(obj, iteratee, context) {\n\t    iteratee = cb(iteratee, context);\n\t    var keys =  _.keys(obj),\n\t          length = keys.length,\n\t          results = {},\n\t          currentKey;\n\t      for (var index = 0; index < length; index++) {\n\t        currentKey = keys[index];\n\t        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n\t      }\n\t      return results;\n\t  };\n\t\n\t  // Convert an object into a list of `[key, value]` pairs.\n\t  _.pairs = function(obj) {\n\t    var keys = _.keys(obj);\n\t    var length = keys.length;\n\t    var pairs = Array(length);\n\t    for (var i = 0; i < length; i++) {\n\t      pairs[i] = [keys[i], obj[keys[i]]];\n\t    }\n\t    return pairs;\n\t  };\n\t\n\t  // Invert the keys and values of an object. The values must be serializable.\n\t  _.invert = function(obj) {\n\t    var result = {};\n\t    var keys = _.keys(obj);\n\t    for (var i = 0, length = keys.length; i < length; i++) {\n\t      result[obj[keys[i]]] = keys[i];\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Return a sorted list of the function names available on the object.\n\t  // Aliased as `methods`\n\t  _.functions = _.methods = function(obj) {\n\t    var names = [];\n\t    for (var key in obj) {\n\t      if (_.isFunction(obj[key])) names.push(key);\n\t    }\n\t    return names.sort();\n\t  };\n\t\n\t  // Extend a given object with all the properties in passed-in object(s).\n\t  _.extend = createAssigner(_.allKeys);\n\t\n\t  // Assigns a given object with all the own properties in the passed-in object(s)\n\t  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n\t  _.extendOwn = _.assign = createAssigner(_.keys);\n\t\n\t  // Returns the first key on an object that passes a predicate test\n\t  _.findKey = function(obj, predicate, context) {\n\t    predicate = cb(predicate, context);\n\t    var keys = _.keys(obj), key;\n\t    for (var i = 0, length = keys.length; i < length; i++) {\n\t      key = keys[i];\n\t      if (predicate(obj[key], key, obj)) return key;\n\t    }\n\t  };\n\t\n\t  // Return a copy of the object only containing the whitelisted properties.\n\t  _.pick = function(object, oiteratee, context) {\n\t    var result = {}, obj = object, iteratee, keys;\n\t    if (obj == null) return result;\n\t    if (_.isFunction(oiteratee)) {\n\t      keys = _.allKeys(obj);\n\t      iteratee = optimizeCb(oiteratee, context);\n\t    } else {\n\t      keys = flatten(arguments, false, false, 1);\n\t      iteratee = function(value, key, obj) { return key in obj; };\n\t      obj = Object(obj);\n\t    }\n\t    for (var i = 0, length = keys.length; i < length; i++) {\n\t      var key = keys[i];\n\t      var value = obj[key];\n\t      if (iteratee(value, key, obj)) result[key] = value;\n\t    }\n\t    return result;\n\t  };\n\t\n\t   // Return a copy of the object without the blacklisted properties.\n\t  _.omit = function(obj, iteratee, context) {\n\t    if (_.isFunction(iteratee)) {\n\t      iteratee = _.negate(iteratee);\n\t    } else {\n\t      var keys = _.map(flatten(arguments, false, false, 1), String);\n\t      iteratee = function(value, key) {\n\t        return !_.contains(keys, key);\n\t      };\n\t    }\n\t    return _.pick(obj, iteratee, context);\n\t  };\n\t\n\t  // Fill in a given object with default properties.\n\t  _.defaults = createAssigner(_.allKeys, true);\n\t\n\t  // Creates an object that inherits from the given prototype object.\n\t  // If additional properties are provided then they will be added to the\n\t  // created object.\n\t  _.create = function(prototype, props) {\n\t    var result = baseCreate(prototype);\n\t    if (props) _.extendOwn(result, props);\n\t    return result;\n\t  };\n\t\n\t  // Create a (shallow-cloned) duplicate of an object.\n\t  _.clone = function(obj) {\n\t    if (!_.isObject(obj)) return obj;\n\t    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n\t  };\n\t\n\t  // Invokes interceptor with the obj, and then returns obj.\n\t  // The primary purpose of this method is to \"tap into\" a method chain, in\n\t  // order to perform operations on intermediate results within the chain.\n\t  _.tap = function(obj, interceptor) {\n\t    interceptor(obj);\n\t    return obj;\n\t  };\n\t\n\t  // Returns whether an object has a given set of `key:value` pairs.\n\t  _.isMatch = function(object, attrs) {\n\t    var keys = _.keys(attrs), length = keys.length;\n\t    if (object == null) return !length;\n\t    var obj = Object(object);\n\t    for (var i = 0; i < length; i++) {\n\t      var key = keys[i];\n\t      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n\t    }\n\t    return true;\n\t  };\n\t\n\t\n\t  // Internal recursive comparison function for `isEqual`.\n\t  var eq = function(a, b, aStack, bStack) {\n\t    // Identical objects are equal. `0 === -0`, but they aren't identical.\n\t    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n\t    if (a === b) return a !== 0 || 1 / a === 1 / b;\n\t    // A strict comparison is necessary because `null == undefined`.\n\t    if (a == null || b == null) return a === b;\n\t    // Unwrap any wrapped objects.\n\t    if (a instanceof _) a = a._wrapped;\n\t    if (b instanceof _) b = b._wrapped;\n\t    // Compare `[[Class]]` names.\n\t    var className = toString.call(a);\n\t    if (className !== toString.call(b)) return false;\n\t    switch (className) {\n\t      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n\t      case '[object RegExp]':\n\t      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n\t      case '[object String]':\n\t        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n\t        // equivalent to `new String(\"5\")`.\n\t        return '' + a === '' + b;\n\t      case '[object Number]':\n\t        // `NaN`s are equivalent, but non-reflexive.\n\t        // Object(NaN) is equivalent to NaN\n\t        if (+a !== +a) return +b !== +b;\n\t        // An `egal` comparison is performed for other numeric values.\n\t        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n\t      case '[object Date]':\n\t      case '[object Boolean]':\n\t        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n\t        // millisecond representations. Note that invalid dates with millisecond representations\n\t        // of `NaN` are not equivalent.\n\t        return +a === +b;\n\t    }\n\t\n\t    var areArrays = className === '[object Array]';\n\t    if (!areArrays) {\n\t      if (typeof a != 'object' || typeof b != 'object') return false;\n\t\n\t      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n\t      // from different frames are.\n\t      var aCtor = a.constructor, bCtor = b.constructor;\n\t      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n\t                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n\t                          && ('constructor' in a && 'constructor' in b)) {\n\t        return false;\n\t      }\n\t    }\n\t    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n\t    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\t\n\t    // Initializing stack of traversed objects.\n\t    // It's done here since we only need them for objects and arrays comparison.\n\t    aStack = aStack || [];\n\t    bStack = bStack || [];\n\t    var length = aStack.length;\n\t    while (length--) {\n\t      // Linear search. Performance is inversely proportional to the number of\n\t      // unique nested structures.\n\t      if (aStack[length] === a) return bStack[length] === b;\n\t    }\n\t\n\t    // Add the first object to the stack of traversed objects.\n\t    aStack.push(a);\n\t    bStack.push(b);\n\t\n\t    // Recursively compare objects and arrays.\n\t    if (areArrays) {\n\t      // Compare array lengths to determine if a deep comparison is necessary.\n\t      length = a.length;\n\t      if (length !== b.length) return false;\n\t      // Deep compare the contents, ignoring non-numeric properties.\n\t      while (length--) {\n\t        if (!eq(a[length], b[length], aStack, bStack)) return false;\n\t      }\n\t    } else {\n\t      // Deep compare objects.\n\t      var keys = _.keys(a), key;\n\t      length = keys.length;\n\t      // Ensure that both objects contain the same number of properties before comparing deep equality.\n\t      if (_.keys(b).length !== length) return false;\n\t      while (length--) {\n\t        // Deep compare each member\n\t        key = keys[length];\n\t        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n\t      }\n\t    }\n\t    // Remove the first object from the stack of traversed objects.\n\t    aStack.pop();\n\t    bStack.pop();\n\t    return true;\n\t  };\n\t\n\t  // Perform a deep comparison to check if two objects are equal.\n\t  _.isEqual = function(a, b) {\n\t    return eq(a, b);\n\t  };\n\t\n\t  // Is a given array, string, or object empty?\n\t  // An \"empty\" object has no enumerable own-properties.\n\t  _.isEmpty = function(obj) {\n\t    if (obj == null) return true;\n\t    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n\t    return _.keys(obj).length === 0;\n\t  };\n\t\n\t  // Is a given value a DOM element?\n\t  _.isElement = function(obj) {\n\t    return !!(obj && obj.nodeType === 1);\n\t  };\n\t\n\t  // Is a given value an array?\n\t  // Delegates to ECMA5's native Array.isArray\n\t  _.isArray = nativeIsArray || function(obj) {\n\t    return toString.call(obj) === '[object Array]';\n\t  };\n\t\n\t  // Is a given variable an object?\n\t  _.isObject = function(obj) {\n\t    var type = typeof obj;\n\t    return type === 'function' || type === 'object' && !!obj;\n\t  };\n\t\n\t  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n\t  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n\t    _['is' + name] = function(obj) {\n\t      return toString.call(obj) === '[object ' + name + ']';\n\t    };\n\t  });\n\t\n\t  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n\t  // there isn't any inspectable \"Arguments\" type.\n\t  if (!_.isArguments(arguments)) {\n\t    _.isArguments = function(obj) {\n\t      return _.has(obj, 'callee');\n\t    };\n\t  }\n\t\n\t  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n\t  // IE 11 (#1621), and in Safari 8 (#1929).\n\t  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n\t    _.isFunction = function(obj) {\n\t      return typeof obj == 'function' || false;\n\t    };\n\t  }\n\t\n\t  // Is a given object a finite number?\n\t  _.isFinite = function(obj) {\n\t    return isFinite(obj) && !isNaN(parseFloat(obj));\n\t  };\n\t\n\t  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n\t  _.isNaN = function(obj) {\n\t    return _.isNumber(obj) && obj !== +obj;\n\t  };\n\t\n\t  // Is a given value a boolean?\n\t  _.isBoolean = function(obj) {\n\t    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n\t  };\n\t\n\t  // Is a given value equal to null?\n\t  _.isNull = function(obj) {\n\t    return obj === null;\n\t  };\n\t\n\t  // Is a given variable undefined?\n\t  _.isUndefined = function(obj) {\n\t    return obj === void 0;\n\t  };\n\t\n\t  // Shortcut function for checking if an object has a given property directly\n\t  // on itself (in other words, not on a prototype).\n\t  _.has = function(obj, key) {\n\t    return obj != null && hasOwnProperty.call(obj, key);\n\t  };\n\t\n\t  // Utility Functions\n\t  // -----------------\n\t\n\t  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n\t  // previous owner. Returns a reference to the Underscore object.\n\t  _.noConflict = function() {\n\t    root._ = previousUnderscore;\n\t    return this;\n\t  };\n\t\n\t  // Keep the identity function around for default iteratees.\n\t  _.identity = function(value) {\n\t    return value;\n\t  };\n\t\n\t  // Predicate-generating functions. Often useful outside of Underscore.\n\t  _.constant = function(value) {\n\t    return function() {\n\t      return value;\n\t    };\n\t  };\n\t\n\t  _.noop = function(){};\n\t\n\t  _.property = property;\n\t\n\t  // Generates a function for a given object that returns a given property.\n\t  _.propertyOf = function(obj) {\n\t    return obj == null ? function(){} : function(key) {\n\t      return obj[key];\n\t    };\n\t  };\n\t\n\t  // Returns a predicate for checking whether an object has a given set of\n\t  // `key:value` pairs.\n\t  _.matcher = _.matches = function(attrs) {\n\t    attrs = _.extendOwn({}, attrs);\n\t    return function(obj) {\n\t      return _.isMatch(obj, attrs);\n\t    };\n\t  };\n\t\n\t  // Run a function **n** times.\n\t  _.times = function(n, iteratee, context) {\n\t    var accum = Array(Math.max(0, n));\n\t    iteratee = optimizeCb(iteratee, context, 1);\n\t    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n\t    return accum;\n\t  };\n\t\n\t  // Return a random integer between min and max (inclusive).\n\t  _.random = function(min, max) {\n\t    if (max == null) {\n\t      max = min;\n\t      min = 0;\n\t    }\n\t    return min + Math.floor(Math.random() * (max - min + 1));\n\t  };\n\t\n\t  // A (possibly faster) way to get the current timestamp as an integer.\n\t  _.now = Date.now || function() {\n\t    return new Date().getTime();\n\t  };\n\t\n\t   // List of HTML entities for escaping.\n\t  var escapeMap = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#x27;',\n\t    '`': '&#x60;'\n\t  };\n\t  var unescapeMap = _.invert(escapeMap);\n\t\n\t  // Functions for escaping and unescaping strings to/from HTML interpolation.\n\t  var createEscaper = function(map) {\n\t    var escaper = function(match) {\n\t      return map[match];\n\t    };\n\t    // Regexes for identifying a key that needs to be escaped\n\t    var source = '(?:' + _.keys(map).join('|') + ')';\n\t    var testRegexp = RegExp(source);\n\t    var replaceRegexp = RegExp(source, 'g');\n\t    return function(string) {\n\t      string = string == null ? '' : '' + string;\n\t      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n\t    };\n\t  };\n\t  _.escape = createEscaper(escapeMap);\n\t  _.unescape = createEscaper(unescapeMap);\n\t\n\t  // If the value of the named `property` is a function then invoke it with the\n\t  // `object` as context; otherwise, return it.\n\t  _.result = function(object, property, fallback) {\n\t    var value = object == null ? void 0 : object[property];\n\t    if (value === void 0) {\n\t      value = fallback;\n\t    }\n\t    return _.isFunction(value) ? value.call(object) : value;\n\t  };\n\t\n\t  // Generate a unique integer id (unique within the entire client session).\n\t  // Useful for temporary DOM ids.\n\t  var idCounter = 0;\n\t  _.uniqueId = function(prefix) {\n\t    var id = ++idCounter + '';\n\t    return prefix ? prefix + id : id;\n\t  };\n\t\n\t  // By default, Underscore uses ERB-style template delimiters, change the\n\t  // following template settings to use alternative delimiters.\n\t  _.templateSettings = {\n\t    evaluate    : /<%([\\s\\S]+?)%>/g,\n\t    interpolate : /<%=([\\s\\S]+?)%>/g,\n\t    escape      : /<%-([\\s\\S]+?)%>/g\n\t  };\n\t\n\t  // When customizing `templateSettings`, if you don't want to define an\n\t  // interpolation, evaluation or escaping regex, we need one that is\n\t  // guaranteed not to match.\n\t  var noMatch = /(.)^/;\n\t\n\t  // Certain characters need to be escaped so that they can be put into a\n\t  // string literal.\n\t  var escapes = {\n\t    \"'\":      \"'\",\n\t    '\\\\':     '\\\\',\n\t    '\\r':     'r',\n\t    '\\n':     'n',\n\t    '\\u2028': 'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\t\n\t  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\t\n\t  var escapeChar = function(match) {\n\t    return '\\\\' + escapes[match];\n\t  };\n\t\n\t  // JavaScript micro-templating, similar to John Resig's implementation.\n\t  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n\t  // and correctly escapes quotes within interpolated code.\n\t  // NB: `oldSettings` only exists for backwards compatibility.\n\t  _.template = function(text, settings, oldSettings) {\n\t    if (!settings && oldSettings) settings = oldSettings;\n\t    settings = _.defaults({}, settings, _.templateSettings);\n\t\n\t    // Combine delimiters into one regular expression via alternation.\n\t    var matcher = RegExp([\n\t      (settings.escape || noMatch).source,\n\t      (settings.interpolate || noMatch).source,\n\t      (settings.evaluate || noMatch).source\n\t    ].join('|') + '|$', 'g');\n\t\n\t    // Compile the template source, escaping string literals appropriately.\n\t    var index = 0;\n\t    var source = \"__p+='\";\n\t    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n\t      source += text.slice(index, offset).replace(escaper, escapeChar);\n\t      index = offset + match.length;\n\t\n\t      if (escape) {\n\t        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n\t      } else if (interpolate) {\n\t        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n\t      } else if (evaluate) {\n\t        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n\t      }\n\t\n\t      // Adobe VMs need the match returned to produce the correct offest.\n\t      return match;\n\t    });\n\t    source += \"';\\n\";\n\t\n\t    // If a variable is not specified, place data values in local scope.\n\t    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\t\n\t    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n\t      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n\t      source + 'return __p;\\n';\n\t\n\t    try {\n\t      var render = new Function(settings.variable || 'obj', '_', source);\n\t    } catch (e) {\n\t      e.source = source;\n\t      throw e;\n\t    }\n\t\n\t    var template = function(data) {\n\t      return render.call(this, data, _);\n\t    };\n\t\n\t    // Provide the compiled source as a convenience for precompilation.\n\t    var argument = settings.variable || 'obj';\n\t    template.source = 'function(' + argument + '){\\n' + source + '}';\n\t\n\t    return template;\n\t  };\n\t\n\t  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n\t  _.chain = function(obj) {\n\t    var instance = _(obj);\n\t    instance._chain = true;\n\t    return instance;\n\t  };\n\t\n\t  // OOP\n\t  // ---------------\n\t  // If Underscore is called as a function, it returns a wrapped object that\n\t  // can be used OO-style. This wrapper holds altered versions of all the\n\t  // underscore functions. Wrapped objects may be chained.\n\t\n\t  // Helper function to continue chaining intermediate results.\n\t  var result = function(instance, obj) {\n\t    return instance._chain ? _(obj).chain() : obj;\n\t  };\n\t\n\t  // Add your own custom functions to the Underscore object.\n\t  _.mixin = function(obj) {\n\t    _.each(_.functions(obj), function(name) {\n\t      var func = _[name] = obj[name];\n\t      _.prototype[name] = function() {\n\t        var args = [this._wrapped];\n\t        push.apply(args, arguments);\n\t        return result(this, func.apply(_, args));\n\t      };\n\t    });\n\t  };\n\t\n\t  // Add all of the Underscore functions to the wrapper object.\n\t  _.mixin(_);\n\t\n\t  // Add all mutator Array functions to the wrapper.\n\t  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n\t    var method = ArrayProto[name];\n\t    _.prototype[name] = function() {\n\t      var obj = this._wrapped;\n\t      method.apply(obj, arguments);\n\t      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n\t      return result(this, obj);\n\t    };\n\t  });\n\t\n\t  // Add all accessor Array functions to the wrapper.\n\t  _.each(['concat', 'join', 'slice'], function(name) {\n\t    var method = ArrayProto[name];\n\t    _.prototype[name] = function() {\n\t      return result(this, method.apply(this._wrapped, arguments));\n\t    };\n\t  });\n\t\n\t  // Extracts the result from a wrapped and chained object.\n\t  _.prototype.value = function() {\n\t    return this._wrapped;\n\t  };\n\t\n\t  // Provide unwrapping proxy for some methods used in engine operations\n\t  // such as arithmetic and JSON stringification.\n\t  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\t\n\t  _.prototype.toString = function() {\n\t    return '' + this._wrapped;\n\t  };\n\t\n\t  // AMD registration happens at the end for compatibility with AMD loaders\n\t  // that may not enforce next-turn semantics on modules. Even though general\n\t  // practice for AMD registration is to be anonymous, underscore registers\n\t  // as a named module because, like jQuery, it is a base library that is\n\t  // popular enough to be bundled in a third party lib, but not be part of\n\t  // an AMD load request. Those cases could generate an error when an\n\t  // anonymous define() is called outside of a loader request.\n\t  if (true) {\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return _;\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t}.call(this));\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\texports['default'] = detailsList;\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _d3 = __webpack_require__(1);\n\t\n\tvar _d32 = _interopRequireDefault(_d3);\n\t\n\tvar _underscore = __webpack_require__(2);\n\t\n\tvar _underscore2 = _interopRequireDefault(_underscore);\n\t\n\tfunction detailsList(_ref) {\n\t  var top = _ref.top;\n\t  var lineHeight = _ref.lineHeight;\n\t  var fontSize = _ref.fontSize;\n\t  var left = _ref.left;\n\t\n\t  return function update(container) {\n\t    var selector = container.selectAll('.detailLine').data(function (d, i) {\n\t      // WARNING: BROKEN\n\t      return d.map(function (d) {\n\t        return d.breakdown;\n\t      })[0];\n\t    });\n\t\n\t    selector.exit().transition().style('opacity', 0).remove();\n\t    var enter = selector.enter().append('g').attr('class', 'detailLine');\n\t    enter.append('text').attr('class', 'label');\n\t    enter.append('text').attr('class', 'amount');\n\t\n\t    selector.attr('transform', function (d, i) {\n\t      return 'translate(' + left + ', ' + (top + lineHeight * (i + 0.5)) + ')';\n\t    });\n\t\n\t    selector.selectAll('text').attr('fill', '#70706F').style({ opacity: 0.9 }).attr('font-family', 'sans-serif').attr('font-size', fontSize);\n\t\n\t    var format = _d32['default'].format(\",.2r\");\n\t    selector.select('.label').text(function (d) {\n\t      return d.label ? d.label : \"Misc\";\n\t    });\n\t    selector.select('.amount').text(function (d) {\n\t      return '£' + format(d.value) + 'bn';\n\t    }).attr('dx', 160).attr('font-weight', 'bold');\n\t  };\n\t}\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// List of funding sources and amounts as text with icons. Used in infoBox\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\texports['default'] = infoItems;\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _d3 = __webpack_require__(1);\n\t\n\tvar _d32 = _interopRequireDefault(_d3);\n\t\n\tvar _underscore = __webpack_require__(2);\n\t\n\tvar _underscore2 = _interopRequireDefault(_underscore);\n\t\n\tfunction infoItems(_ref) {\n\t  var lineHeight = _ref.lineHeight;\n\t  var _ref$left = _ref.left;\n\t  var left = _ref$left === undefined ? -212 : _ref$left;\n\t  var bottom = _ref.bottom;\n\t  var top = _ref.top;\n\t  var _ref$fontSize = _ref.fontSize;\n\t  var fontSize = _ref$fontSize === undefined ? 13 : _ref$fontSize;\n\t  var _ref$iconHeight = _ref.iconHeight;\n\t  var iconHeight = _ref$iconHeight === undefined ? 45 : _ref$iconHeight;\n\t\n\t  if (top != null) {\n\t    bottom = top;\n\t    lineHeight = -lineHeight;\n\t  }\n\t\n\t  return function update(container, highlighted) {\n\t    var items = container.selectAll('.item').data(function (d) {\n\t      return d;\n\t    });\n\t    items.exit().remove();\n\t    var itemsEnter = items.enter().append('g').attr('class', 'item');\n\t    itemsEnter.append('image');\n\t    itemsEnter.append('text').attr('class', 'label');\n\t    itemsEnter.append('text').attr('class', 'amount');\n\t\n\t    // WARNING: This assumes only 1 set!\n\t    var data = container.data()[0];\n\t\n\t    var transform = function transform(d, i) {\n\t      return 'translate(0, ' + (bottom - (i + 0.5) * lineHeight) + ')';\n\t    };\n\t\n\t    items.attr('transform', transform).transition().style('opacity', function (d) {\n\t      return highlighted == null || highlighted === d ? 1 : 0;\n\t    });\n\t\n\t    var iconSpacing = 30;\n\t\n\t    items.select('image').attr('x', left).attr('y', -iconHeight / 2 - 5).attr('width', iconHeight).attr('height', iconHeight).attr('xlink:href', function (d) {\n\t      return d.icon;\n\t    });\n\t\n\t    items.selectAll('text').attr('fill', '#70706F').style({ opacity: 0.9 }).attr('font-family', 'sans-serif').attr('font-size', fontSize);\n\t\n\t    items.select('.label').attr('dx', left + iconHeight + iconSpacing).attr('dy', '-0.5em').text(function (d) {\n\t      return d.label;\n\t    });\n\t\n\t    var format = _d32['default'].format(\",.2f\");\n\t    items.select('.amount').attr('dx', left + iconHeight + iconSpacing).attr('dy', '+0.5em').attr('font-weight', 'bold').text(function (d) {\n\t      return '£' + format(d.value) + 'bn';\n\t    });\n\t  };\n\t}\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\texports['default'] = startDots;\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _d3 = __webpack_require__(1);\n\t\n\tvar _d32 = _interopRequireDefault(_d3);\n\t\n\tvar _underscore = __webpack_require__(2);\n\t\n\tvar _underscore2 = _interopRequireDefault(_underscore);\n\t\n\tfunction startDots(_ref) {\n\t  var dotFill = _ref.dotFill;\n\t  var bottom = _ref.bottom;\n\t  var top = _ref.top;\n\t  var _ref$left = _ref.left;\n\t  var left = _ref$left === undefined ? 12 : _ref$left;\n\t  var lineHeight = _ref.lineHeight;\n\t\n\t  if (bottom != null && top != null) throw Error(\"Should only have one of bottom or top specified\");\n\t\n\t  var start = undefined;\n\t  if (bottom != null) {\n\t    start = bottom;\n\t  } else {\n\t    start = top;\n\t    lineHeight = -lineHeight;\n\t  }\n\t\n\t  return function update(container) {\n\t    var dots = container.selectAll('.dot').data(function (d) {\n\t      return d;\n\t    });\n\t    dots.exit().remove();\n\t    dots.enter().append('circle');\n\t    dots.attr('class', 'dot').attr('r', 5).attr('fill', dotFill).attr('cx', left).attr('cy', function (d, i) {\n\t      return start - (i + 0.5) * lineHeight;\n\t    });\n\t  };\n\t}\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\t\n\texports.pol2cart = pol2cart;\n\texports.cart2pol = cart2pol;\n\texports['default'] = arcSet;\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _d3 = __webpack_require__(1);\n\t\n\tvar _d32 = _interopRequireDefault(_d3);\n\t\n\tvar _underscore = __webpack_require__(2);\n\t\n\tvar _underscore2 = _interopRequireDefault(_underscore);\n\t\n\tfunction pol2cart(r, a) {\n\t  var cx = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];\n\t  var cy = arguments.length <= 3 || arguments[3] === undefined ? 0 : arguments[3];\n\t\n\t  var x = cx + r * Math.cos(a);\n\t  var y = cy + r * Math.sin(a);\n\t  return [x, y];\n\t}\n\t\n\tfunction cart2pol(x, y) {\n\t  var cx = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];\n\t  var cy = arguments.length <= 3 || arguments[3] === undefined ? 0 : arguments[3];\n\t\n\t  x = x - cx;\n\t  y = y - cy;\n\t  var r = Math.sqrt(x * x + y * y);\n\t  var a = Math.atan2(y, x);\n\t  return [r, a];\n\t}\n\t\n\tfunction arrowHeads(_ref) {\n\t  var arcWidth = _ref.arcWidth;\n\t  var center = _ref.center;\n\t  var radius = _ref.radius;\n\t  var right = _ref.right;\n\t\n\t  return function update(container) {\n\t    var arrowHeads = container.selectAll('.arrowHead').data(function (d, i) {\n\t      return values(d, i);\n\t    });\n\t    arrowHeads.exit().remove();\n\t    arrowHeads.enter().append('path');\n\t    arrowHeads.attr('class', 'arrowHead').attr('fill', arrowFill).attr('d', function (d, i) {\n\t      return '\\n        M ' + left + ' ' + (top + lineHeight * i - 15) + '\\n        L ' + left + ' ' + (top + lineHeight * (i + 1) + 15) + '\\n        L ' + (left + 40 * direction) + ' ' + (top + lineHeight * (i + 0.5)) + '\\n        Z\\n        ';\n\t    });\n\t  };\n\t}\n\t\n\tfunction arcSet() {\n\t  var _ref2 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t  var _ref2$center = _ref2.center;\n\t  var center = _ref2$center === undefined ? function (d) {\n\t    return [0, 0];\n\t  } : _ref2$center;\n\t  var _ref2$innerRadius = _ref2.innerRadius;\n\t  var innerRadius = _ref2$innerRadius === undefined ? function (d) {\n\t    return 227;\n\t  } : _ref2$innerRadius;\n\t  var _ref2$arcWidth = _ref2.arcWidth;\n\t  var arcWidth = _ref2$arcWidth === undefined ? 44 : _ref2$arcWidth;\n\t  var _ref2$endCaps = _ref2.endCaps;\n\t  var endCaps = _ref2$endCaps === undefined ? false : _ref2$endCaps;\n\t  var _ref2$clockwise = _ref2.clockwise;\n\t  var clockwise = _ref2$clockwise === undefined ? function (d, i) {\n\t    return true;\n\t  } : _ref2$clockwise;\n\t  var _ref2$right = _ref2.right;\n\t  var right = _ref2$right === undefined ? function (d, i) {\n\t    return true;\n\t  } : _ref2$right;\n\t  var _ref2$progress = _ref2.progress;\n\t  var progress = _ref2$progress === undefined ? function (d, i) {\n\t    return 1;\n\t  } : _ref2$progress;\n\t  var _ref2$ring = _ref2.ring;\n\t  var ring = _ref2$ring === undefined ? function (d, i) {\n\t    return i;\n\t  } : _ref2$ring;\n\t  var _ref2$tipRadius = _ref2.tipRadius;\n\t  var tipRadius = _ref2$tipRadius === undefined ? function (d, i) {\n\t    return 20;\n\t  } : _ref2$tipRadius;\n\t  var _ref2$fill = _ref2.fill;\n\t  var fill = _ref2$fill === undefined ? function (d, i) {\n\t    return 'red';\n\t  } : _ref2$fill;\n\t  var _ref2$animateIn = _ref2.animateIn;\n\t  var animateIn = _ref2$animateIn === undefined ? function (d, i) {\n\t    return false;\n\t  } : _ref2$animateIn;\n\t  var mouseover = _ref2.mouseover;\n\t  var mouseout = _ref2.mouseout;\n\t  var click = _ref2.click;\n\t  var _ref2$opacity = _ref2.opacity;\n\t  var opacity = _ref2$opacity === undefined ? function (d) {\n\t    return 1;\n\t  } : _ref2$opacity;\n\t  var _ref2$animationDelay = _ref2.animationDelay;\n\t  var animationDelay = _ref2$animationDelay === undefined ? 0 : _ref2$animationDelay;\n\t\n\t  // let arc = arcIndictator({\n\t  //   center,\n\t  //   innerRadius: (d,i) => innerRadius + i * arcWidth,\n\t  //   arhWidth: d => arcWidth,\n\t  // });\n\t\n\t  var id = _underscore2['default'].uniqueId();\n\t\n\t  var first = true;\n\t\n\t  if (endCaps) {\n\t    var arrows = arrowHeads({ center: center, radius: function radius(d, i) {\n\t        return innerRadius(d, i) + arcWidth * i;\n\t      }, right: right, arcWidth: arcWidth });\n\t  }\n\t\n\t  function update(container) {\n\t    var angle = function angle(d, i) {\n\t      return (1 - progress(d, i)) * -180;\n\t    };\n\t\n\t    var selector = container.selectAll('.arc').data(function (d) {\n\t      return d;\n\t    });\n\t    selector.exit().remove();\n\t    var enter = selector.enter().append('g').attr('class', 'arc');\n\t\n\t    // enter.append('defs').append('marker',\n\t    enter.append('g').attr('class', 'arc-outer').append('g').attr('class', 'arc-inner').attr('transform', function (d, i) {\n\t      var _center = center(d, i);\n\t\n\t      var _center2 = _slicedToArray(_center, 2);\n\t\n\t      var x = _center2[0];\n\t      var y = _center2[1];\n\t\n\t      var startAngle = animateIn(d, i) ? -180 : angle(d, i);\n\t      return 'translate(' + x + ', ' + y + ') rotate(' + startAngle + ')';\n\t    }).append('path').attr('fill', function (d, i) {\n\t      return fill(d, i);\n\t    });\n\t\n\t    enter.append(\"clipPath\").attr(\"id\", function (d, i) {\n\t      return 'arc-clip-' + id + '-' + i;\n\t    }).append(\"rect\");\n\t\n\t    // enter.append('path').attr('class', 'endCap');\n\t\n\t    // selector.select('.endCap')\n\t    //   .attr('class', 'endCap')\n\t    //   .attr('fill', 'red')\n\t    //   .attr('d', (d,i) => {\n\t    //     return `\n\t    //     M ${left} ${top+lineHeight*i-15}\n\t    //     L ${left} ${top+lineHeight*(i+1)+15}\n\t    //     L ${left+(40*direction)} ${top+lineHeight*(i+0.5)}\n\t    //     Z\n\t    //     `;\n\t    //   });\n\t\n\t    selector.select('clipPath rect').attr(\"x\", function (d, i) {\n\t      return center(d, i)[0];\n\t    }).attr(\"y\", function (d, i) {\n\t      return center(d, i)[1] - (innerRadius(d, i) + arcWidth * (i + 1));\n\t    }).attr(\"width\", function (d, i) {\n\t      return innerRadius(d, i) + arcWidth * (i + 1);\n\t    }).attr(\"height\", function (d, i) {\n\t      return 2 * (innerRadius(d, i) + arcWidth * (i + 1));\n\t    });\n\t\n\t    selector.select('g.arc-outer').attr('transform', function (d, i) {\n\t      var t = '';\n\t      // if ((!right && clockwise) || (right && !clockwise)) {\n\t      if (!right(d, i)) {\n\t        t += 'rotate(180) ';\n\t      }\n\t      if (!clockwise(d, i)) {\n\t        t += 'scale(1, -1) ';\n\t      }\n\t      return t;\n\t    }).attr(\"clip-path\", function (d, i) {\n\t      return 'url(#arc-clip-' + id + '-' + i + ')';\n\t    });\n\t\n\t    selector.select('.arc-outer').transition().duration(300).style('opacity', opacity);\n\t\n\t    selector.select('g.arc-inner').transition().delay((first ? 1500 : 0) + animationDelay).duration(function (d, i) {\n\t      return 600;\n\t      // let currentTransform = this.getAttribute('transform');\n\t      // let [,rotate] = /rotate\\((.+)\\)/.exec(currentTransform);\n\t      // rotate = parseFloat(rotate);\n\t      // rotate = -rotate + angle(d,i);\n\t      // return ((rotate)/180)*1000;\n\t    }).attr('transform', function (d, i) {\n\t      var _center3 = center(d, i);\n\t\n\t      var _center32 = _slicedToArray(_center3, 2);\n\t\n\t      var x = _center32[0];\n\t      var y = _center32[1];\n\t\n\t      return 'translate(' + x + ', ' + y + ') rotate(' + angle(d, i) + ')';\n\t    });\n\t\n\t    selector.select('path').on('mouseover', mouseover).on('mouseout', mouseout).on('click', click).attr('stroke-width', 0.3).attr('stroke', 'white').attr('d', function (d, i) {\n\t      var r = innerRadius(d, i) + ring(d, i) * arcWidth;\n\t      var cx = 0;\n\t      var cy = 0;\n\t\n\t      var _pol2cart = pol2cart(r, Math.PI / 2, cx, cy);\n\t\n\t      var _pol2cart2 = _slicedToArray(_pol2cart, 2);\n\t\n\t      var innerEx = _pol2cart2[0];\n\t      var innerEy = _pol2cart2[1];\n\t\n\t      var _pol2cart3 = pol2cart(r, Math.PI * 1.5, cx, cy);\n\t\n\t      var _pol2cart32 = _slicedToArray(_pol2cart3, 2);\n\t\n\t      var innerSx = _pol2cart32[0];\n\t      var innerSy = _pol2cart32[1];\n\t\n\t      var _pol2cart4 = pol2cart(r + arcWidth + 1, Math.PI / 2, cx, cy);\n\t\n\t      var _pol2cart42 = _slicedToArray(_pol2cart4, 2);\n\t\n\t      var outerEx = _pol2cart42[0];\n\t      var outerEy = _pol2cart42[1];\n\t\n\t      var _pol2cart5 = pol2cart(r + arcWidth + 1, Math.PI * 1.5, cx, cy);\n\t\n\t      var _pol2cart52 = _slicedToArray(_pol2cart5, 2);\n\t\n\t      var outerSx = _pol2cart52[0];\n\t      var outerSy = _pol2cart52[1];\n\t\n\t      var pointerAngle = tipRadius(d, i) / (r + arcWidth / 2);\n\t\n\t      var _pol2cart6 = pol2cart(r + arcWidth / 2, Math.PI / 2 + pointerAngle, cx, cy);\n\t\n\t      var _pol2cart62 = _slicedToArray(_pol2cart6, 2);\n\t\n\t      var ex = _pol2cart62[0];\n\t      var ey = _pol2cart62[1];\n\t\n\t      var _pol2cart7 = pol2cart(r - arcWidth / 2, Math.PI / 2, cx, cy);\n\t\n\t      var _pol2cart72 = _slicedToArray(_pol2cart7, 2);\n\t\n\t      var capx1 = _pol2cart72[0];\n\t      var capy1 = _pol2cart72[1];\n\t\n\t      var _pol2cart8 = pol2cart(r + arcWidth * 1.5, Math.PI / 2, cx, cy);\n\t\n\t      var _pol2cart82 = _slicedToArray(_pol2cart8, 2);\n\t\n\t      var capx2 = _pol2cart82[0];\n\t      var capy2 = _pol2cart82[1];\n\t\n\t      return '\\n          M ' + innerSx + ' ' + innerSy + '\\n          A ' + r + ' ' + r + ' 0 0 1 ' + innerEx + ' ' + innerEy + '\\n          ' + (endCaps ? 'L ' + capx1 + ' ' + capy1 : '') + '\\n          L ' + ex + ' ' + ey + '\\n          ' + (endCaps ? 'L ' + capx2 + ' ' + capy2 : '') + '\\n          L ' + outerEx + ' ' + outerEy + '\\n          A ' + (r + arcWidth) + ' ' + (r + arcWidth) + ' 0 0 0 ' + outerSx + ' ' + outerSy + '\\n          Z\\n        ';\n\t    }).transition().duration(300).attr('fill', function (d, i) {\n\t      return fill(d, i);\n\t    });\n\t\n\t    first = false;\n\t  }\n\t\n\t  return update;\n\t}\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// the info box at the top of the graph that shows in the income labels\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\texports['default'] = infoBox;\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _d3 = __webpack_require__(1);\n\t\n\tvar _d32 = _interopRequireDefault(_d3);\n\t\n\tvar _underscore = __webpack_require__(2);\n\t\n\tvar _underscore2 = _interopRequireDefault(_underscore);\n\t\n\tvar _infoItems = __webpack_require__(4);\n\t\n\tvar _infoItems2 = _interopRequireDefault(_infoItems);\n\t\n\tvar _startDots = __webpack_require__(5);\n\t\n\tvar _startDots2 = _interopRequireDefault(_startDots);\n\t\n\tvar _detailsList = __webpack_require__(3);\n\t\n\tvar _detailsList2 = _interopRequireDefault(_detailsList);\n\t\n\tfunction infoBox(_ref) {\n\t  var width = _ref.width;\n\t  var bottom = _ref.bottom;\n\t  var top = _ref.top;\n\t  var lineHeight = _ref.lineHeight;\n\t  var values = _ref.values;\n\t  var borderColor = _ref.borderColor;\n\t  var dotFill = _ref.dotFill;\n\t\n\t  var info = (0, _infoItems2['default'])({ bottom: bottom, lineHeight: lineHeight, left: -212, fontSize: 12 });\n\t  var detailsHeading = (0, _infoItems2['default'])({ top: top, lineHeight: lineHeight, fontSize: 14 });\n\t  var details = (0, _detailsList2['default'])({ top: top + lineHeight, lineHeight: lineHeight / 2, fontSize: 12, left: -212 });\n\t  var dots = (0, _startDots2['default'])({ dotFill: dotFill, bottom: bottom, lineHeight: lineHeight });\n\t\n\t  var lastHighlighted = undefined;\n\t\n\t  return function update(container, highlighted) {\n\t    var selector = container.selectAll('.infoBox').data(function (d, i) {\n\t      return [values(d, i)];\n\t    });\n\t\n\t    selector.exit().remove();\n\t    var enter = selector.enter().append('g').attr('class', 'infoBox');\n\t    enter.append('rect');\n\t    enter.append('line');\n\t    enter.append('g').attr('class', 'list');\n\t    var detailsEnter = enter.append('g').attr('class', 'details');\n\t\n\t    selector.select('rect').attr('x', -width).attr('y', function (d) {\n\t      return bottom - lineHeight * d.length;\n\t    }).attr('width', width).attr('height', function (d) {\n\t      return lineHeight * d.length;\n\t    }).attr('fill', 'white').style({ opacity: 0.7 });\n\t\n\t    selector.select('line').attr('x1', -width).attr('y1', function (d) {\n\t      return bottom - lineHeight * d.length;\n\t    }).attr('x2', -width).attr('y2', bottom).attr('stroke-width', '16').attr('stroke', borderColor);\n\t\n\t    selector.select('.list').call(info).transition().duration(400).delay(highlighted ? 0 : 200).style('opacity', highlighted == null ? 1 : 0);\n\t\n\t    selector.select('.details').data(function (d, i) {\n\t      return highlighted || lastHighlighted ? [[highlighted || lastHighlighted]] : [];\n\t    }, function (d) {\n\t      return 1;\n\t    }).call(detailsHeading).call(details).transition().duration(400).delay(highlighted ? 200 : 0).style('opacity', highlighted == null ? 0 : 1);\n\t\n\t    selector.call(dots);\n\t\n\t    lastHighlighted = highlighted;\n\t  };\n\t}\n\t\n\tmodule.exports = exports['default'];\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** app.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap cdb640061874c044b2cf\n **/","import d3 from 'd3';\nimport _ from 'underscore';\nimport arcSet from './arcSet';\nimport infoBox from './infoBox';\nimport infoItems from './infoItems';\nimport startDots from './startDots';\nimport detailsList from './detailsList';\n\nconst NATIONALLY = \"United Kingdom\";\n\nfunction bubble(container, position, bgFill, title, value) {\n  let g = container.append('g')\n      .attr('transform', `translate(${position[0]}, ${position[1]})`);\n  g.append('circle').attr('r', 35).attr('fill', bgFill);\n  g.append('text')\n    .text(title)\n    .attr('dy', -5)\n    .attr({'text-anchor': 'middle', 'font-size': 12, 'font-family': 'sans-serif', fill: 'white'});\n\n  g.append('text')\n    .attr('class', 'value')\n    .attr('dy', 12)\n    .attr({'text-anchor': 'middle', 'font-size': 16, 'font-family': 'sans-serif', fill: 'white'});\n\n  let format = d3.format(\",.1f\");\n\n  return function update(value) {\n    g.select('.value').text('£' + format(value) + 'bn');\n  };\n}\n\nfunction arcIndicators({bgFill, fgFill, values, maxProgress=1, endCaps=true, ...options}) {\n  let bgArcs = arcSet({\n    ...options,\n    fill: bgFill,\n    endCaps,\n    progress: d => maxProgress,\n  });\n\n  let fgArcs = arcSet({\n    ...options,\n    fill: fgFill,\n    animateIn: d => true,\n  });\n\n  return function update(container) {\n    let selector = container.selectAll('.arcsContainer').data((d,i) => {\n      return [null];\n    });\n\n    selector.exit().remove();\n    let enter = selector.enter().append('g').attr('class', 'arcsContainer')\n    enter.append('g').attr('class', 'bg');\n    enter.append('g').attr('class', 'fg');\n\n    let bgContainer = selector.select('.bg');\n    let fgContainer = selector.select('.fg');\n\n    bgContainer.data((d,i) => [values(d,i)]).call(bgArcs);\n    fgContainer.data((d,i) => [values(d,i)]).call(fgArcs);\n  };\n}\n\n\nfunction outputInfo({values, top, left, lineHeight, arrowFill, borderColor=\"#8ACAC0\"}) {\n  // infoItems grows from the bottom, but we can give a negative\n  // lineHeight to have it grow from the top\n  let info = infoItems({bottom: top, lineHeight: -lineHeight, left: 60, fontSize: 13, iconHeight: 30});\n  let details = detailsList({top: top, lineHeight: lineHeight / 2, fontSize: 12, left: 300});\n\n  let lastHighlighted;\n  return function update(container, highlighted) {\n    let selector = container.selectAll('.outputInfo').data((d,i) => {\n      return [values(d,i)];\n    });\n\n\n    selector.exit().remove();\n    let enter = selector.enter().append('g').attr('class', 'outputInfo')\n    enter.append('g').attr('class', 'details');\n    enter.append('line').attr('class', 'border');\n\n    selector.attr('transform', `translate(${left}, 0)`);\n    selector.call(info, highlighted);\n\n    selector.select('.border')\n      .attr('x1',250).attr('y1', top - lineHeight * 0.25)\n      .attr('x2',250).attr('y2', d => top + lineHeight * d.length + lineHeight * 0.1)\n      .attr('stroke-width', '8')\n      .attr('stroke', borderColor);\n\n    selector.select('.details')\n      .attr('transform', `translate(0, ${lineHeight * (highlighted || lastHighlighted || {ring: 0}).ring})`)\n      .data((d,i) => (highlighted || lastHighlighted) ? [[highlighted || lastHighlighted]] : [], d => 1)\n      .call(details)\n      .style('opacity', (highlighted && highlighted.breakdown.length > 1) ? 1 : 0);\n\n    lastHighlighted = highlighted\n  };\n}\n\n\nfunction arrowHeads({values, top, left=0, lineHeight, arrowFill, direction=1}) {\n  return function update(container) {\n    let arrowHeads = container.selectAll('.arrowHead').data((d,i) => values(d,i));\n    arrowHeads.exit().remove();\n    arrowHeads.enter().append('path');\n    arrowHeads\n      .attr('class', 'arrowHead')\n      .attr('fill', arrowFill)\n      .attr('d', (d,i) => {\n        return `\n        M ${left} ${top+lineHeight*i-15}\n        L ${left} ${top+lineHeight*(i+1)+15}\n        L ${left+(40*direction)} ${top+lineHeight*(i+0.5)}\n        Z\n        `;\n      });\n  };\n}\n\n\nfunction joinBox({value, top, width=20, border=16, height}) {\n  return function update(container) {\n    let selector = container.selectAll('.joinBox').data((d,i) => {\n      return [value(d,i)];\n    });\n\n    selector.exit().remove();\n    let enter = selector.enter().append('g').attr('class', 'joinBox')\n    enter.append('rect').attr({y: top, x: -width/2, width: width, height: height}).attr('fill', '#5D3785');\n    // enter.append('rect').attr({y: top, x: -width/2 + width/3, width: width/3*2, height: height}).attr('fill', '#674591');\n    // enter.append('rect').attr({y: top, x: -width/2 + width/3 * 2, width: width/3, height: height}).attr('fill', '#7D67A7');\n    // enter.append('rect').attr({y: top+16, x: -width/2, width, height: height-border*2}).attr('fill','#522977');\n    // enter.append('text')\n    //   .text('Income')\n    //   .attr({'text-anchor': 'middle', 'font-size': 36, 'font-family': 'sans-serif', fill: 'white'})\n    //   .attr('y', top + height/2 + 50)\n    //   .style({opacity: 0.8})\n\n    // enter.append('text')\n    //   .attr('class', 'amount')\n    //   .attr({'text-anchor': 'middle', 'font-size': 36, 'font-family': 'sans-serif', fill: 'white', 'font-weight': 'bold'})\n    //   .attr('y', top + height/2 + 70)\n    //   .attr('dy', '1em')\n    //   .style({opacity: 0.8})\n\n    // let iconHeight = 100\n    // enter.append('image')\n    //   .attr('x', -iconHeight/2)\n    //   .attr('y', top + height/2 - 100)\n    //   .attr('width', iconHeight)\n    //   .attr('height', iconHeight)\n    //   .attr('xlink:href', \"icons/income.svg\");\n\n    // let format = d3.format(\",.2r\");\n    // selector.select('.amount').text(d => '£' + format(d) + 'bn');\n  };\n}\n\nfunction regionSelect(container, regions, onChange) {\n  let width = 320;\n  let height = 44;\n  let selector = container.append('g')\n    .attr('transform', 'translate(180, 31)');\n\n  regions = [NATIONALLY].concat(regions);\n  let current = 0;\n\n  selector.append('rect').attr({\n    x: -width/2,\n    y: -height/44,\n    width,\n    height,\n    fill: '#522977',\n  });\n\n\n  selector.append('text')\n    .text(\"\\u25C0\")\n    .attr({\n      'font-size': 20,\n      fill: 'white',\n      y: 28,\n      x: -width/2 + 10,\n    });\n\n  selector.append('text')\n    .text(\"\\u25B6\")\n    .attr({\n      'font-size': 20,\n      fill: 'white',\n      y: 28,\n      x: width/2 - 30,\n    });\n\n  let left = selector.append('rect')\n    .attr({\n      x: -width/2,\n      y: -height/44,\n      width: width/2,\n      height,\n      fill: 'transparent',\n    })\n    .on('click', () => {\n      current = (current === 0) ? regions.length - 1 : current - 1;\n      selector.select('.label')\n        .text(regions[current]);\n      onChange(regions[current]);\n    });\n\n\n  let right = selector.append('rect').attr({\n    x: 0,\n    y: -height/44,\n    width: width/2,\n    height,\n    fill: 'transparent',\n  })\n  .on('click', () => {\n    current = (current + 1) % regions.length;\n    selector.select('.label')\n      .text(regions[current]);\n    onChange(regions[current]);\n  })\n\n  selector.append('text')\n    .attr('class', 'label')\n    .text(regions[current])\n    .attr({\n      fill: 'white',\n      y: 28,\n      'font-weight': 100,\n      'text-anchor': 'middle',\n      'font-family': 'sans-serif',\n      'font-size': 20\n    });\n\n  selector.selectAll('text').style('pointer-events', 'none');\n\n}\n\nfunction init(nationalData, regionalData) {\n  const WIDTH = 1100, HEIGHT = 1500;\n\n  let data = nationalData;\n\n  let lengths = _.mapObject(nationalData, d => d.length);\n\n  let bgColor = d3.scale.linear().domain([0, 1]).range(['#DDDBC6', '#A7AF5B']);\n  let fgColor = d3.scale.linear().domain([0, 1]).range(['#8E7FB8', '#522977']);\n  let dotColor = d3.scale.linear().domain([0, lengths.income]).range(['#BDB5D6', '#9B83B0']);\n\n\n  let highlighted = null;\n\n  const TOP_INNER_RADIUS = 120;\n  const ARC_WIDTH = 35;\n  const ARC_WIDTH_BOTTOM= 45;\n  const BOTTOM_INNER_RADIUS = 80;\n  const INFO_WIDTH = 244;\n  const OFFSET_BOTTOM = 10;\n\n  let arcDefaults = {\n    ring: d => d.ring,\n    progress: (d,i) => {\n      // console.log(d.value, d3.sum(data[d.type], dd => dd.value), data);\n      return d.value/d3.sum(data[d.type], dd => dd.value);\n    },\n    mouseover: (d,i) => highlight(d),\n    mouseout: (d,i) => highlight(null),\n    click: (d,i) => highlight(d),\n    opacity: (d,i) => {\n      return (highlighted == null || highlighted === d) ? 1 : 0.6\n    },\n  };\n\n  // Highlight color\n  function hc(scale, nonHighlightColor) {\n    return (d,i) => {\n      if (d === highlighted) {\n        return scale(1);\n      } else {\n        return scale(nonHighlightColor(d,i));\n      }\n    };\n  }\n\n  let incomeArcs = arcIndicators({\n    ...arcDefaults,\n    innerRadius: d => TOP_INNER_RADIUS,\n    arcWidth: ARC_WIDTH,\n    values: d => d[\"income\"],\n    // bgFill: hc(bgColor, (d,i) => i/(lengths.income-1)),\n    // fgFill: hc(fgColor, (d,i) => i/(lengths.income-1)),\n    fgFill: (d,i) => \"#522977\",\n    bgFill: (d,i) => \"#7D67A6\"\n  });\n\n  let reinvestArcs = arcIndicators({\n    ...arcDefaults,\n    right: d => false,\n    innerRadius: d => TOP_INNER_RADIUS,\n    arcWidth: ARC_WIDTH+5,\n    // animationDelay: 800,\n\n    // Make the arc not go all the way round\n    maxProgress: 0.6,\n    progress: (d,i) => {\n      // console.log(d.value, d3.sum(data[d.type], dd => dd.value), data);\n      return (d.value/d3.sum(data[d.type], dd => dd.value)) * 0.6\n    },\n\n    values: d => d[\"reinvest\"],\n    // bgFill: hc(bgColor, (d,i) => i/(lengths.income-1)),\n    // fgFill: hc(fgColor, (d,i) => (lengths.reinvest-i-1)/(lengths.income-1)),\n    fgFill: (d,i) => \"#8ACAC0\",\n    bgFill: (d,i) => \"#CBEDE6\",\n  });\n\n  let outgoingArcs = arcIndicators({\n    ...arcDefaults,\n    // animationDelay: 1000,\n    right: d=> false,\n    clockwise: d => false,\n    innerRadius: d => BOTTOM_INNER_RADIUS,\n    arcWidth: ARC_WIDTH_BOTTOM,\n    // center: d => [OFFSET_BOTTOM, TOP_INNER_RADIUS + BOTTOM_INNER_RADIUS + ARC_WIDTH * (lengths.income)],\n    center: d => [OFFSET_BOTTOM, TOP_INNER_RADIUS + BOTTOM_INNER_RADIUS + ARC_WIDTH * (lengths.income)],\n    values: d => d[\"outgoing\"],\n    // bgFill: hc(bgColor, (d,i) => (lengths.outgoing-i-1)/(lengths.outgoing-1)),\n    // fgFill: hc(fgColor, (d,i) => i/(lengths.outgoing-1)),\n    fgFill: (d,i) => \"#8ACAC0\",\n    bgFill: (d,i) => \"#CBEDE6\",\n  });\n\n  let info = infoBox({\n    bottom: -TOP_INNER_RADIUS,\n    top: -TOP_INNER_RADIUS - ARC_WIDTH * lengths.income,\n    width: INFO_WIDTH,\n    lineHeight: ARC_WIDTH,\n    borderColor: '#522977',\n    dotFill: (d,i) => dotColor(i),\n    values: d => d[\"income\"],\n  });\n\n\n  let outputOptions = {\n    top: lengths.income * ARC_WIDTH + TOP_INNER_RADIUS + BOTTOM_INNER_RADIUS * 2,\n    left: -OFFSET_BOTTOM,\n    lineHeight: ARC_WIDTH_BOTTOM,\n    values: d => d[\"outgoing\"],\n    // arrowFill: (d,i) => bgColor((lengths.outgoing-i-1)/(lengths.outgoing-1)),\n    arrowFill: (d,i) => \"#CBEDE6\",\n  };\n\n\n  let output = outputInfo(outputOptions);\n  let arrows = arrowHeads(outputOptions);\n\n  let join = joinBox({\n    value: d => d3.sum(data.income, dd => dd.value),\n    // top: TOP_INNER_RADIUS - ARC_WIDTH,\n    // height: ARC_WIDTH * (lengths.income+1.5),\n    top: TOP_INNER_RADIUS,\n    height: ARC_WIDTH * (lengths.income),\n  });\n\n  let reinvestmentDots = startDots({\n    // dotFill: (d,i) => dotColor(i),\n    dotFill: (d,i) => \"#BCE1DA\",\n    top: TOP_INNER_RADIUS,\n    lineHeight: ARC_WIDTH,\n    left: -20\n  });\n\n  let outgoingDots = startDots({\n    // dotFill: (d,i) => dotColor(i),\n    dotFill: (d,i) => \"#BCE1DA\",\n    bottom: TOP_INNER_RADIUS + ARC_WIDTH * lengths.income,\n    lineHeight: ARC_WIDTH_BOTTOM,\n    left: -20\n  });\n\n  let svg = d3.select('#moneyflow').append('svg')\n  let container = svg\n    .attr('width', WIDTH)\n    .attr('height', HEIGHT)\n    .append('g')\n      .attr('transform', `translate(400, 430) scale(0.001)`)\n\n  container\n    .transition()\n    .duration(1500)\n    .ease('quad')\n    .attr('transform', `translate(400, 430) scale(1)`)\n\n  regionSelect(\n    svg,\n    _.sortBy(_.keys(regionalData), _.identity),\n    region => {\n      data = (region === NATIONALLY) ? nationalData : regionalData[region];\n      update();\n    }\n  );\n\n\n  let format = d3.format(\",.2r\");\n\n  let updateIncomeBubble = bubble(\n    container,\n    [350, -240],\n    \"#522977\",\n    \"Income\");\n\n  let updateSpendingBubble = bubble(\n    container,\n    [-250, 210],\n    \"#8ACAC0\",\n    \"Spending\")\n\n\n  let containers = _.object([\"income\", \"outgoing\", \"reinvest\", \"info\", \"output\", \"arrows\", \"join\", \"redots\", \"outdots\"].map(n => [n, container.append('g')]));\n\n  function highlight(d) {\n    if (d === highlighted) d = null;\n    highlighted = d;\n    if (highlighted == null) {\n      // We might be setting another highlight almost right away so\n      // lets not be hasty with the transitions\n      setTimeout(update);\n    } else {\n      update();\n    }\n  }\n\n  function update() {\n    containers.income                        .datum(data).call(incomeArcs);\n    containers.outgoing                      .datum(data).call(outgoingArcs);\n    containers.reinvest                      .datum(data).call(reinvestArcs);\n    containers.info                          .datum(data).call(info, (highlighted && highlighted.type !== 'outgoing') ? highlighted : null);\n    containers.output                        .datum(data).call(output, (highlighted && highlighted.type === 'outgoing') ? highlighted : null);\n    containers.arrows                        .datum(data).call(arrows);\n    containers.join                          .datum(data).call(join);\n    containers.redots.data([data.reinvest])  .call(reinvestmentDots);\n    containers.outdots.data([data.outgoing]) .call(outgoingDots);\n\n    updateIncomeBubble(d3.sum(data.income, dd => dd.value));\n    updateSpendingBubble(d3.sum(data.outgoing, dd => dd.value) + d3.sum(data.reinvest, dd => dd.value))\n  }\n\n  update();\n}\n\nfunction prepNational(data, config) {\n  data.reverse()\n  data = _.groupBy(data, 'Type');\n  data = _.mapObject(data, (lines, type) => {\n    if (type === \"outgoing\") {\n      lines.reverse()\n    }\n    return _.map(_.groupBy(lines, 'Source'), (sourceLines, source) => {\n      return {\n        label: source,\n        value: d3.sum(sourceLines, d => parseFloat(d[\"Total\"]))/1000,\n        type,\n        icon: config.iconsRoot +  source.toLowerCase().replace(/ /, '-') + '.svg',\n        breakdown: sourceLines.map(d => ({\n          label: d['Sub-Source'],\n          value: parseFloat(d[\"Total\"])/1000,\n        }))\n      };\n    });\n  });\n\n  _.map(data, list => list.forEach((d,i) => {\n    d.ring = i;\n  }));\n  return data;\n}\n\nfunction prepRegional(data, config) {\n  data.reverse()\n  let regions = _.without(_.keys(data[0]), \"Type\", \"Source\");\n  return _.object(regions.map(r => {\n    let regionData = _.mapObject(_.groupBy(data, 'Type'), (lines, type) => {\n      if (type === \"outgoing\") {\n        lines.reverse()\n      }\n      return lines.map(line => ({\n        label: line[\"Source\"],\n        value: parseFloat(line[r])/1000,\n        icon: config.iconsRoot + line[\"Source\"].toLowerCase().replace(/ /, '-') + '.svg',\n        type,\n        breakdown: [],\n      }));\n    });\n\n    _.map(regionData, list => list.forEach((d,i) => {\n      d.ring = i;\n    }));\n    return [r, regionData];\n  }));\n}\n\nfunction moneyflow(config) {\n  _.defaults(config, {\n    dataRoot: '',\n    iconsRoot: '',\n  });\n  let national, regional;\n  let done = _.after(2, () => init(prepNational(national, config), prepRegional(regional, config)));\n  d3.csv(config.dataRoot + \"national.csv\", d => {\n    national = d;\n    done();\n  });\n\n  d3.csv(config.dataRoot + \"regions.csv\", d => {\n    regional = d;\n    done();\n  });\n}\n\nwindow.moneyflow = moneyflow;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3/d3.js\n ** module id = 1\n ** module chunks = 0\n **/","//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/underscore/underscore.js\n ** module id = 2\n ** module chunks = 0\n **/","import d3 from 'd3';\nimport _ from 'underscore';\n\nexport default function detailsList({top, lineHeight, fontSize, left}) {\n  return function update(container) {\n    let selector = container.selectAll('.detailLine').data((d,i) => {\n      // WARNING: BROKEN\n      return d.map(d => d.breakdown)[0];\n    });\n\n    selector.exit().transition().style('opacity', 0).remove();\n    let enter = selector.enter().append('g').attr('class', 'detailLine');\n    enter.append('text').attr('class', 'label');\n    enter.append('text').attr('class', 'amount');\n\n    selector\n      .attr('transform', (d,i) => `translate(${left}, ${top + lineHeight * (i + 0.5)})`);\n\n    selector.selectAll('text')\n      .attr('fill', '#70706F')\n      .style({opacity: 0.9})\n      .attr('font-family', 'sans-serif')\n      .attr('font-size', fontSize);\n\n    let format = d3.format(\",.2r\");\n    selector.select('.label').text(d => d.label ? d.label : \"Misc\")\n    selector.select('.amount')\n      .text(d => '£' + format(d.value) + 'bn').attr('dx', 160)\n      .attr('font-weight', 'bold');\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/detailsList.js\n **/","// List of funding sources and amounts as text with icons. Used in infoBox\nimport d3 from 'd3';\nimport _ from 'underscore';\n\nexport default function infoItems({lineHeight, left=-212, bottom, top, fontSize=13, iconHeight=45}) {\n  if (top != null) {\n    bottom = top;\n    lineHeight = -lineHeight;\n  }\n\n  return function update(container, highlighted) {\n    let items = container.selectAll('.item').data(d => d);\n    items.exit().remove();\n    let itemsEnter = items.enter().append('g').attr('class', 'item');\n    itemsEnter.append('image');\n    itemsEnter.append('text').attr('class', 'label');\n    itemsEnter.append('text').attr('class', 'amount');\n\n    // WARNING: This assumes only 1 set!\n    let data = container.data()[0];\n\n    let transform = (d, i) => {\n      return `translate(0, ${bottom - ((i + 0.5) * lineHeight)})`;\n    };\n\n    items\n      .attr('transform', transform)\n      .transition()\n      .style('opacity', d => (highlighted == null || highlighted === d) ? 1 : 0);\n\n    let iconSpacing = 30;\n\n    items.select('image')\n      .attr('x', left)\n      .attr('y', -iconHeight/2 - 5)\n      .attr('width', iconHeight)\n      .attr('height', iconHeight)\n      .attr('xlink:href', d => d.icon);\n\n    items.selectAll('text')\n      .attr('fill', '#70706F')\n      .style({opacity: 0.9})\n      .attr('font-family', 'sans-serif')\n      .attr('font-size', fontSize);\n\n    items.select('.label')\n      .attr('dx', left + iconHeight + iconSpacing)\n      .attr('dy', '-0.5em')\n      .text(d => d.label);\n\n    let format = d3.format(\",.2f\");\n    items.select('.amount')\n      .attr('dx', left + iconHeight + iconSpacing)\n      .attr('dy', '+0.5em')\n      .attr('font-weight', 'bold')\n      .text(d => '£' + format(d.value) + 'bn');\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/infoItems.js\n **/","import d3 from 'd3';\nimport _ from 'underscore';\n\nexport default function startDots({dotFill, bottom, top, left=12, lineHeight}) {\n  if (bottom != null && top != null) throw Error(\"Should only have one of bottom or top specified\");\n\n  let start;\n  if (bottom != null) {\n    start = bottom;\n  } else {\n    start = top;\n    lineHeight = -lineHeight;\n  }\n\n  return function update(container) {\n    let dots = container.selectAll('.dot').data(d => d);\n    dots.exit().remove();\n    dots.enter().append('circle');\n    dots.attr('class', 'dot')\n      .attr('r', 5)\n      .attr('fill', dotFill)\n      .attr('cx', left)\n      .attr('cy', (d,i) => start - ((i + 0.5) * lineHeight));\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/startDots.js\n **/","import d3 from 'd3';\nimport _ from 'underscore';\n\nexport function pol2cart(r, a, cx=0, cy=0) {\n  let x = cx + r * Math.cos(a);\n  let y = cy + r * Math.sin(a);\n  return [x,y];\n}\n\nexport function cart2pol(x, y, cx=0, cy=0) {\n  x = x - cx;\n  y = y - cy;\n  let r = Math.sqrt(x*x + y*y);\n  let a = Math.atan2(y, x);\n  return [r, a];\n}\n\n\nfunction arrowHeads({arcWidth, center, radius, right}) {\n  return function update(container) {\n    let arrowHeads = container.selectAll('.arrowHead').data((d,i) => values(d,i));\n    arrowHeads.exit().remove();\n    arrowHeads.enter().append('path');\n    arrowHeads\n      .attr('class', 'arrowHead')\n      .attr('fill', arrowFill)\n      .attr('d', (d,i) => {\n        return `\n        M ${left} ${top+lineHeight*i-15}\n        L ${left} ${top+lineHeight*(i+1)+15}\n        L ${left+(40*direction)} ${top+lineHeight*(i+0.5)}\n        Z\n        `;\n      });\n  };\n}\n\nexport default function arcSet({\n  center=d => [0,0],\n  innerRadius=d => 227,\n  arcWidth=44,\n  endCaps=false,\n  clockwise=(d,i) => true,\n  right=(d,i) => true,\n  progress=(d,i) => 1,\n  ring=(d,i) => i,\n  tipRadius=(d,i) => 20,\n  fill=(d,i) => 'red',\n  animateIn=(d,i) => false,\n  mouseover,\n  mouseout,\n  click,\n  opacity=d => 1,\n  animationDelay=0,\n}={}) {\n\n  // let arc = arcIndictator({\n  //   center,\n  //   innerRadius: (d,i) => innerRadius + i * arcWidth,\n  //   arhWidth: d => arcWidth,\n  // });\n\n  let id = _.uniqueId();\n\n  let first = true;\n\n  if (endCaps) {\n    let arrows = arrowHeads({center, radius: (d,i) => innerRadius(d,i) + arcWidth * i, right, arcWidth});\n  }\n\n  function update(container) {\n    let angle = (d,i) => {\n      return (1-progress(d,i)) * -180;\n    };\n\n    let selector = container.selectAll('.arc').data(d => {\n      return d\n    });\n    selector.exit().remove();\n    let enter = selector.enter()\n      .append('g').attr('class', 'arc')\n\n    // enter.append('defs').append('marker',\n    enter.append('g').attr('class', 'arc-outer')\n      .append('g').attr('class', 'arc-inner')\n        .attr('transform', (d,i) => {\n          let [x,y] = center(d,i);\n          let startAngle = animateIn(d,i) ? -180 : angle(d,i);\n          return `translate(${x}, ${y}) rotate(${startAngle})`;\n        })\n      .append('path')\n      .attr('fill', (d,i) => {\n        return fill(d,i);\n      });\n\n    enter.append(\"clipPath\")\n      .attr(\"id\", (d,i) => `arc-clip-${id}-${i}`)\n      .append(\"rect\");\n\n\n\n    // enter.append('path').attr('class', 'endCap');\n\n    // selector.select('.endCap')\n    //   .attr('class', 'endCap')\n    //   .attr('fill', 'red')\n    //   .attr('d', (d,i) => {\n    //     return `\n    //     M ${left} ${top+lineHeight*i-15}\n    //     L ${left} ${top+lineHeight*(i+1)+15}\n    //     L ${left+(40*direction)} ${top+lineHeight*(i+0.5)}\n    //     Z\n    //     `;\n    //   });\n\n\n\n\n    selector.select('clipPath rect')\n      .attr(\"x\", (d,i) => center(d,i)[0])\n      .attr(\"y\", (d,i) => center(d,i)[1] - (innerRadius(d,i) + arcWidth * (i+1)))\n      .attr(\"width\", (d,i) => innerRadius(d,i) + arcWidth * (i+1))\n      .attr(\"height\", (d,i) => 2*(innerRadius(d,i) + arcWidth * (i+1)));\n\n    selector.select('g.arc-outer')\n      .attr('transform', (d, i) => {\n        let t = '';\n        // if ((!right && clockwise) || (right && !clockwise)) {\n        if (!right(d,i)) {\n          t += `rotate(180) `;\n        }\n        if (!clockwise(d,i)) {\n          t += `scale(1, -1) `;\n        }\n        return t;\n      })\n      .attr(\"clip-path\", (d,i) => `url(#arc-clip-${id}-${i})`);\n\n    selector.select('.arc-outer')\n      .transition()\n      .duration(300)\n      .style('opacity', opacity);\n\n\n    selector.select('g.arc-inner')\n      .transition()\n      .delay((first ? 1500 : 0) + animationDelay)\n      .duration(function (d,i) {\n        return 600;\n        // let currentTransform = this.getAttribute('transform');\n        // let [,rotate] = /rotate\\((.+)\\)/.exec(currentTransform);\n        // rotate = parseFloat(rotate);\n        // rotate = -rotate + angle(d,i);\n        // return ((rotate)/180)*1000;\n      })\n      .attr('transform', (d,i) => {\n        let [x,y] = center(d,i);\n        return `translate(${x}, ${y}) rotate(${angle(d,i)})`;\n      });\n\n\n    selector.select('path')\n      .on('mouseover', mouseover)\n      .on('mouseout', mouseout)\n      .on('click', click)\n      .attr('stroke-width', 0.3)\n      .attr('stroke', 'white')\n      .attr('d',  (d,i) => {\n        let r = innerRadius(d,i) + ring(d,i) * arcWidth;\n        let [cx,cy] = [0,0];\n        let [innerEx, innerEy] = pol2cart(r, Math.PI/2, cx, cy);\n        let [innerSx, innerSy] = pol2cart(r, Math.PI*1.5, cx, cy);\n        let [outerEx, outerEy] = pol2cart(r+arcWidth+1, Math.PI/2, cx, cy);\n        let [outerSx, outerSy] = pol2cart(r+arcWidth+1, Math.PI*1.5, cx, cy);\n        let pointerAngle = tipRadius(d,i)/(r+(arcWidth/2));\n        let [ex, ey] = pol2cart(r+(arcWidth/2), Math.PI/2+pointerAngle, cx, cy);\n        let [capx1, capy1] = pol2cart(r-(arcWidth/2), Math.PI/2, cx, cy);\n        let [capx2, capy2] = pol2cart(r+(arcWidth*1.5), Math.PI/2, cx, cy);\n\n        return `\n          M ${innerSx} ${innerSy}\n          A ${r} ${r} 0 0 1 ${innerEx} ${innerEy}\n          ${ (endCaps) ? `L ${capx1} ${capy1}` : ''}\n          L ${ex} ${ey}\n          ${ (endCaps) ? `L ${capx2} ${capy2}` : ''}\n          L ${outerEx} ${outerEy}\n          A ${r+arcWidth} ${r+arcWidth} 0 0 0 ${outerSx} ${outerSy}\n          Z\n        `;\n      })\n      .transition()\n      .duration(300)\n      .attr('fill', (d,i) => {\n        return fill(d,i);\n      })\n\n    first = false;\n  }\n\n  return update;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/arcSet.js\n **/","// the info box at the top of the graph that shows in the income labels\nimport d3 from 'd3';\nimport _ from 'underscore';\nimport infoItems from './infoItems';\nimport startDots from './startDots';\nimport detailsList from './detailsList';\n\n\nexport default function infoBox({width, bottom, top, lineHeight, values, borderColor, dotFill}) {\n  let info = infoItems({bottom, lineHeight, left: -212, fontSize: 12});\n  let detailsHeading = infoItems({top, lineHeight, fontSize: 14});\n  let details = detailsList({top: top + lineHeight, lineHeight: lineHeight / 2, fontSize: 12, left: -212});\n  let dots = startDots({dotFill, bottom, lineHeight});\n\n  let lastHighlighted;\n\n  return function update(container, highlighted) {\n    let selector = container.selectAll('.infoBox').data((d,i) => {\n      return [values(d,i)];\n    });\n\n    selector.exit().remove();\n    let enter = selector.enter().append('g').attr('class', 'infoBox')\n    enter.append('rect');\n    enter.append('line');\n    enter.append('g').attr('class', 'list');\n    let detailsEnter = enter.append('g').attr('class', 'details');\n\n\n    selector.select('rect')\n      .attr('x', -width)\n      .attr('y', d => bottom - lineHeight * d.length)\n      .attr('width', width)\n      .attr('height', d => lineHeight * d.length)\n      .attr('fill', 'white')\n      .style({opacity: 0.7});\n\n\n    selector.select('line')\n      .attr('x1',-width).attr('y1', d => bottom - lineHeight * d.length)\n      .attr('x2',-width).attr('y2', bottom)\n      .attr('stroke-width', '16')\n      .attr('stroke', borderColor);\n\n    selector.select('.list')\n      .call(info)\n      .transition()\n      .duration(400)\n      .delay(highlighted ? 0 : 200)\n      .style('opacity', (highlighted == null) ? 1 : 0);\n\n    selector.select('.details')\n      .data((d,i) => (highlighted || lastHighlighted) ?[[highlighted || lastHighlighted]] : [], d => 1)\n      .call(detailsHeading)\n      .call(details)\n      .transition()\n      .duration(400)\n      .delay(highlighted ? 200 : 0)\n      .style('opacity', (highlighted == null) ? 0 : 1);\n\n    selector.call(dots);\n\n    lastHighlighted = highlighted;\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/infoBox.js\n **/"],"sourceRoot":""}